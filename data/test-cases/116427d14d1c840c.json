{"uid":"116427d14d1c840c","name":"test_bgp_evpn","historyId":"pytest:bgp_evpn.test_bgp_evpn#test_bgp_evpn","time":{"start":1746512584420,"stop":1746512621144,"duration":36724},"status":"failed","statusMessage":"snappi_ixnetwork.exceptions.SnappiIxnException: IxNet - One or more ports were forcefully taken by other user IxNet - The Ixia port is not connected.","statusTrace":"api = <snappi_ixnetwork.snappi_api.Api object at 0x7fdf1c74ea10>\nutils = <module 'utils' from '/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/tests/utils/__init__.py'>\n\n    def test_bgp_evpn(api, utils):\n        # Creating Ports\n        config = api.config()\n        p1 = config.ports.port(name=\"p1\", location=utils.settings.ports[0])[-1]\n        p2 = config.ports.port(name=\"p2\", location=utils.settings.ports[1])[-1]\n    \n        # Create BGP devices on tx & rx\n        tx_d = config.devices.device(name=\"tx_d\")[-1]\n        rx_d = config.devices.device(name=\"rx_d\")[-1]\n    \n        tx_eth = tx_d.ethernets.add()\n        tx_eth.connection.port_name = p1.name\n        rx_eth = rx_d.ethernets.add()\n        rx_eth.connection.port_name = p2.name\n    \n        tx_eth.name = \"tx_eth\"\n        tx_eth.mac = \"00:11:00:00:00:01\"\n        tx_ip = tx_eth.ipv4_addresses.ipv4(\n            name=\"tx_ip\", address=\"20.20.20.2\", gateway=\"20.20.20.1\"\n        )[-1]\n    \n        rx_eth.name = \"rx_eth\"\n        rx_eth.mac = \"00:12:00:00:00:01\"\n        rx_ip = rx_eth.ipv4_addresses.ipv4(\n            name=\"rx_ip\", address=\"20.20.20.1\", gateway=\"20.20.20.2\"\n        )[-1]\n    \n        # tx_bgp\n        tx_bgp = tx_d.bgp\n        tx_bgp.router_id = \"192.0.0.1\"\n        tx_bgp_iface = tx_bgp.ipv4_interfaces.v4interface(ipv4_name=tx_ip.name)[-1]\n        tx_bgp_peer = tx_bgp_iface.peers.v4peer(\n            name=\"tx_eBGP\",\n            peer_address=\"20.20.20.1\",\n            as_type=\"ebgp\",\n            as_number=100,\n        )[-1]\n    \n        # rx_bgp\n        rx_bgp = rx_d.bgp\n        rx_bgp.router_id = \"193.0.0.1\"\n        rx_bgp_iface = rx_bgp.ipv4_interfaces.v4interface(ipv4_name=rx_ip.name)[-1]\n        rx_bgp_peer = rx_bgp_iface.peers.v4peer(\n            name=\"rx_eBGP\",\n            peer_address=\"20.20.20.2\",\n            as_type=\"ebgp\",\n            as_number=200,\n        )[-1]\n    \n        # Create & advertise loopback under bgp in tx and rx\n        tx_l1 = tx_d.ipv4_loopbacks.add()\n        tx_l1.name = \"tx_loopback1\"\n        tx_l1.eth_name = \"tx_eth\"\n        tx_l1.address = \"1.1.1.1\"\n    \n        tx_l1_r = tx_bgp_peer.v4_routes.add(name=\"tx_l1\")\n        tx_l1_r.addresses.add(address=\"1.1.1.1\", prefix=32)\n    \n        rx_l1 = rx_d.ipv4_loopbacks.add()\n        rx_l1.name = \"rx_loopback1\"\n        rx_l1.eth_name = \"rx_eth\"\n        rx_l1.address = \"2.2.2.2\"\n    \n        rx_l1_r = rx_bgp_peer.v4_routes.add(name=\"rx_l1\")\n        rx_l1_r.addresses.add(address=\"2.2.2.2\", prefix=32)\n    \n        # Create BGP EVPN on tx\n        tx_vtep = config.devices.device(name=\"tx_vtep\")[-1]\n        tx_vtep_bgp = tx_vtep.bgp\n        tx_vtep_bgp.router_id = \"190.0.0.1\"\n        tx_vtep_bgp_iface = tx_vtep_bgp.ipv4_interfaces.v4interface(\n            ipv4_name=tx_l1.name\n        )[-1]\n        tx_vtep_bgp_peer = tx_vtep_bgp_iface.peers.v4peer(\n            name=\"bgp1\", peer_address=\"2.2.2.2\", as_type=\"ibgp\", as_number=101\n        )[-1]\n    \n        # Adding 1 Ethernet Segment per Bgp Peer\n        tx_vtep_es1 = tx_vtep_bgp_peer.evpn_ethernet_segments.ethernetsegment()[-1]\n    \n        # Adding 1 EVI on the Ethernet Segment\n        tx_es1_evisV4_1 = tx_vtep_es1.evis.evi_vxlan()[-1]\n        tx_es1_evisV4_1.route_distinguisher.auto_config_rd_ip_addr = True\n        tx_es1_evisV4_1.route_distinguisher.rd_type = (\n            tx_es1_evisV4_1.route_distinguisher.AS_2OCTET\n        )\n        tx_es1_evisV4_1.route_distinguisher.rd_value = \"100:1\"\n    \n        export_rt = tx_es1_evisV4_1.route_target_export.routetarget()[-1]\n        import_rt = tx_es1_evisV4_1.route_target_import.routetarget()[-1]\n        export_rt.rt_type = export_rt.AS_2OCTET\n        export_rt.rt_value = \"100:20\"\n    \n        import_rt.rt_type = import_rt.AS_2OCTET\n        import_rt.rt_value = \"100:20\"\n    \n        # Adding 1 Broadcast Domain per EVI\n        tx_es1_evisV4_1_bd_1 = tx_es1_evisV4_1.broadcast_domains.broadcastdomain()[\n            -1\n        ]\n    \n        # Adding 1 MAC Range Per Broadcast Domain\n        tx_es1_evisV4_1_bd_1_mac_Pool1 = (\n            tx_es1_evisV4_1_bd_1.cmac_ip_range.cmaciprange(l2vni=20)[-1]\n        )\n    \n        tx_es1_evisV4_1_bd_1_mac_Pool1.name = \"tx_mac_pool\"\n        tx_es1_evisV4_1_bd_1_mac_Pool1.mac_addresses.address = \"10:11:22:33:44:55\"\n    \n        # Adding 1 IP Range Per Broadcast Domain\n        tx_es1_evisV4_1_bd_1_mac_Pool1.ipv4_addresses.address = \"192.168.0.1\"\n    \n        # Create BGP EVPN on rx\n        rx_vtep = config.devices.device(name=\"rx_vtep\")[-1]\n        rx_vtep_bgp = rx_vtep.bgp\n        rx_vtep_bgp.router_id = \"191.0.0.1\"\n        rx_vtep_bgp_iface = rx_vtep_bgp.ipv4_interfaces.v4interface(\n            ipv4_name=rx_l1.name\n        )[-1]\n        rx_vtep_bgp_peer = rx_vtep_bgp_iface.peers.v4peer(\n            name=\"bgp2\", peer_address=\"1.1.1.1\", as_type=\"ibgp\", as_number=101\n        )[-1]\n    \n        # Adding 1 Ethernet Segment per Bgp Peer\n        rx_vtep_es1 = rx_vtep_bgp_peer.evpn_ethernet_segments.ethernetsegment()[-1]\n    \n        # Adding 1 EVI on the Ethernet Segment\n        rx_es1_evisV4_1 = rx_vtep_es1.evis.evi_vxlan()[-1]\n    \n        rx_es1_evisV4_1.route_distinguisher.rd_type = (\n            rx_es1_evisV4_1.route_distinguisher.AS_2OCTET\n        )\n        rx_es1_evisV4_1.route_distinguisher.rd_value = \"1000:1\"\n    \n        export_rt = rx_es1_evisV4_1.route_target_export.routetarget()[-1]\n        import_rt = rx_es1_evisV4_1.route_target_import.routetarget()[-1]\n        export_rt.rt_type = export_rt.AS_2OCTET\n        export_rt.rt_value = \"100:20\"\n    \n        import_rt.rt_type = import_rt.AS_2OCTET\n        import_rt.rt_value = \"100:20\"\n    \n        # Adding 1 Broadcast Domain per EVI\n        rx_es1_evisV4_1_bd_1 = rx_es1_evisV4_1.broadcast_domains.broadcastdomain()[\n            -1\n        ]\n    \n        # Adding 1 MAC Range Per Broadcast Domain\n        rx_es1_evisV4_1_bd_1_mac_Pool1 = (\n            rx_es1_evisV4_1_bd_1.cmac_ip_range.cmaciprange(l2vni=20)[-1]\n        )\n        rx_es1_evisV4_1_bd_1_mac_Pool1.name = \"rx_mac_pool\"\n        rx_es1_evisV4_1_bd_1_mac_Pool1.mac_addresses.address = \"10:11:22:33:44:77\"\n    \n        # Adding 1 IP Range Per Broadcast Domain\n        rx_es1_evisV4_1_bd_1_mac_Pool1.ipv4_addresses.address = \"192.168.1.2\"\n    \n        f1 = config.flows.flow(name=\"f1\")[-1]\n        f1.tx_rx.device.tx_names = [tx_es1_evisV4_1_bd_1_mac_Pool1.name]\n        f1.tx_rx.device.rx_names = [rx_es1_evisV4_1_bd_1_mac_Pool1.name]\n    \n        f1.duration.fixed_packets.packets = 1000\n    \n        f1.size.fixed = 1500\n        f1.metrics.enable = True\n        f1.metrics.loss = True\n    \n>       utils.start_traffic(api, config)\n\ntests/bgp_evpn/test_bgp_evpn.py:168: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/utils/common.py:126: in start_traffic\n    api.set_config(cfg)\nsnappi_ixnetwork/snappi_api.py:323: in set_config\n    return self._request_detail()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <snappi_ixnetwork.snappi_api.Api object at 0x7fdf1c74ea10>\n\n    def _request_detail(self):\n        request_detail = snappi.Warning()\n        errors = self._errors\n        warnings = list()\n        app_errors = self._globals.AppErrors.find()\n        if len(app_errors) > 0:\n            current_errors = app_errors[0].Error.find()\n            if len(current_errors) > 0:\n                for error in current_errors:\n                    # Add loop as sequence are not sorted\n                    match = [\n                        o\n                        for o in self._ixn_errors\n                        if o.Name == error.Name\n                        and o.LastModified == error.LastModified\n                    ]\n                    if len(match) == 0:\n                        if error.ErrorLevel == \"kWarning\":\n                            warning = \"IxNet - {0}\".format(\n                                error.Name\n                                if error.Description == \"\"\n                                else error.Description\n                            )\n                            self.info(warning)\n                            warnings.append(warning)\n                        if error.ErrorLevel == \"kError\":\n                            error = \"IxNet - {0}\".format(\n                                error.Name\n                                if error.Description == \"\"\n                                else error.Description\n                            )\n                            self.info(error)\n                            errors.append(error)\n    \n        # Need to add this hack as dumping json config throws this exception\n        # Traffic regeneration will be part of set_transmit_state\n        errors = [\n            error\n            for error in errors\n            if \"before trying to generate BGP EVPN traffic\" not in error\n        ]\n    \n        if len(errors) > 0:\n            self._errors = []\n>           raise SnappiIxnException(500, errors)\nE           snappi_ixnetwork.exceptions.SnappiIxnException: IxNet - One or more ports were forcefully taken by other user IxNet - The Ixia port is not connected.\n\nsnappi_ixnetwork/snappi_api.py:262: SnappiIxnException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"--------------------------------- Captured Log ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Config validation 0.008s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Ports configuration 5.631s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Captures configuration 0.200s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Location hosts ready [novus1-715849.ccu.is.keysight.com] 0.092s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Aggregation mode speed change 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Location connect [p1, p2] 18.093s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1440 p1 connectedLinkDown","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1440 p2 connectedLinkDown","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Location state check [p1, p2] 0.310s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Location configuration 19.051s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Layer1 configuration 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Lag Configuration 0.089s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Convert device config : 0.587s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Create IxNetwork device config : 0.001s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Push IxNetwork device config : 2.081s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Devices configuration 2.782s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Flows configuration 3.802s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Start interfaces 2.740s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 IxNet - One or more ports were forcefully taken by other user ","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 IxNet - Please Start BGP on selected Tx ports before trying to generate BGP EVPN traffic.","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 IxNet - The Ixia port is not connected.","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 IxNet - The Traffic Item was modified. Please perform a Traffic Generate to update the associated traffic Flow Groups","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"--------------------------------- Captured Out ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":24,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"pytest"},{"name":"host","value":"snappi-ixn-ci-novus10g"},{"name":"testClass","value":"bgp_evpn.test_bgp_evpn"},{"name":"package","value":"bgp_evpn.test_bgp_evpn"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":0,"skipped":0,"passed":105,"unknown":0,"total":120},"items":[{"uid":"9d053a974fb73636","status":"passed","time":{"start":1746463364453,"stop":1746463463927,"duration":99474}},{"uid":"f48d42de1916618","status":"passed","time":{"start":1746454829753,"stop":1746454927216,"duration":97463}},{"uid":"abbb1d9ec849348","status":"passed","time":{"start":1746433188387,"stop":1746433286738,"duration":98351}},{"uid":"6035a3c33b733392","status":"passed","time":{"start":1746421868637,"stop":1746421961890,"duration":93253}},{"uid":"171e2dbced483632","status":"passed","time":{"start":1746414762134,"stop":1746414855907,"duration":93773}},{"uid":"d68fd05ca246b60d","status":"passed","time":{"start":1746232601079,"stop":1746232697831,"duration":96752}},{"uid":"4578912bd0f33a50","status":"passed","time":{"start":1746224382039,"stop":1746224483804,"duration":101765}},{"uid":"e5af5945fa8e64fe","status":"passed","time":{"start":1746217344058,"stop":1746217457933,"duration":113875}},{"uid":"c38b43c9882adc52","status":"passed","time":{"start":1746199805015,"stop":1746199902659,"duration":97644}},{"uid":"d0da8bfc5de7ac71","status":"passed","time":{"start":1746181689995,"stop":1746181802520,"duration":112525}},{"uid":"7335f9bf15c6b055","status":"passed","time":{"start":1746174663641,"stop":1746174764474,"duration":100833}},{"uid":"86ed35e242191a97","status":"passed","time":{"start":1746117825457,"stop":1746117925467,"duration":100010}},{"uid":"5b4e256ab1846139","status":"passed","time":{"start":1746098916418,"stop":1746099028994,"duration":112576}},{"uid":"c90dadabe1429233","status":"passed","time":{"start":1746064489784,"stop":1746064586519,"duration":96735}},{"uid":"aaa51d44cf0d9350","status":"passed","time":{"start":1746042370552,"stop":1746042465725,"duration":95173}},{"uid":"ba4670159dd8fd60","status":"passed","time":{"start":1746025407819,"stop":1746025512258,"duration":104439}},{"uid":"e6986be382783b1f","status":"passed","time":{"start":1746017351140,"stop":1746017441590,"duration":90450}},{"uid":"e3493875f29d7659","status":"passed","time":{"start":1745951248306,"stop":1745951363974,"duration":115668}},{"uid":"3fb33a54d9603477","status":"passed","time":{"start":1745944306045,"stop":1745944399886,"duration":93841}},{"uid":"cf879adf970b8489","status":"passed","time":{"start":1745937122343,"stop":1745937226516,"duration":104173}}]},"tags":[]},"source":"116427d14d1c840c.json","parameterValues":[]}