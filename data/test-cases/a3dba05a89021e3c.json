{"uid":"a3dba05a89021e3c","name":"test_phb_ecn","historyId":"pytest:test_phb_ecn#test_phb_ecn","time":{"start":1743703353732,"stop":1743703473933,"duration":120201},"status":"failed","statusMessage":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 276, in set_config\n    self.config_ixnetwork(config)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 364, in config_ixnetwork\n    self.traffic_item.config()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 773, in config\n    ixn_traffic_item = self.get_ixn_config(self._config)[0]\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 536, in get_ixn_config\n    self._importconfig(imports)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 464, in _importconfig\n    raise SnappiIxnException(\n [{'xpath': '', 'message': 'Object reference not set to an instance of an object.', 'severity': 'kError', 'category': 'invalidCommit', 'property': 'noAtt'}, {'xpath': '', 'message': 'Object reference not set to an instance of an object.', 'severity': 'kError', 'category': 'invalidCommit', 'property': 'noAtt'}]","statusTrace":"self = <snappi_ixnetwork.snappi_api.Api object at 0x7f1eef548850>\nconfig = <snappi.snappi.Config object at 0x7f1eea40bb50>\n\n    def set_config(self, config):\n        \"\"\"Set or update the configuration\"\"\"\n        try:\n            if isinstance(config, (type(self._config_type), str)) is False:\n                raise TypeError(\n                    \"The content must be of type Union[Config, str]\"\n                )\n    \n            if isinstance(config, str) is True:\n                config = self._config_type.deserialize(config)\n>           self.config_ixnetwork(config)\n\nsnappi_ixnetwork/snappi_api.py:276: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsnappi_ixnetwork/snappi_api.py:364: in config_ixnetwork\n    self.traffic_item.config()\nsnappi_ixnetwork/trafficitem.py:773: in config\n    ixn_traffic_item = self.get_ixn_config(self._config)[0]\nsnappi_ixnetwork/trafficitem.py:536: in get_ixn_config\n    self._importconfig(imports)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <snappi_ixnetwork.trafficitem.TrafficItem object at 0x7f1eecc49ab0>\nimports = {'traffic': {'trafficItem': [{'configElement': [{'stack': [...], 'xpath': '/traffic/trafficItem[1]/configElement[1]'}]...dpointSet[1]'}], 'name': 'Ipv4 with Phb and Ecn', 'srcDestMesh': 'oneToOne', ...}], 'xpath': '/traffic'}, 'xpath': '/'}\n\n    def _importconfig(self, imports):\n        imports[\"xpath\"] = \"/\"\n        href = \"%sresourceManager\" % self._api._ixnetwork.href\n        url = \"%s/operations/importconfig\" % href\n        json_dump = json.dumps(imports)\n        self.logger.debug(\"import traffic config\")\n        self.logger.debug(\"{}\".format(json_dump))\n        payload = {\n            \"arg1\": href,\n            \"arg2\": json_dump,\n            \"arg3\": False,\n            \"arg4\": \"suppressNothing\",\n            \"arg5\": True,\n        }\n        try:\n            # TODO for larger config rest api is throwing error,\n            # with no url found, when the first response is 202 (in-progress)\n            # its keep checking the status of the url with 1 sec sleep, and\n            # after a while error is thrown. but could see the configuration\n            # applied at Ixnetwork. (Need to check with Eng team)\n            response = self._api._request(\"POST\", url=url, payload=payload)\n        except Exception:\n            return\n        self.logger.debug(str(response))\n        if (\n            response[\"result\"].get(\"errata\") is not None\n            and response[\"result\"][\"errata\"] != []\n        ):\n            self._api.get_json_import_errors()\n>           raise SnappiIxnException(\n                400, \"{}\".format(response[\"result\"][\"errata\"])\n            )\nE           snappi_ixnetwork.exceptions.SnappiIxnException:  [{'xpath': '', 'message': 'Object reference not set to an instance of an object.', 'severity': 'kError', 'category': 'invalidCommit', 'property': 'noAtt'}, {'xpath': '', 'message': 'Object reference not set to an instance of an object.', 'severity': 'kError', 'category': 'invalidCommit', 'property': 'noAtt'}]\n\nsnappi_ixnetwork/trafficitem.py:464: SnappiIxnException\n\nDuring handling of the above exception, another exception occurred:\n\napi = <snappi_ixnetwork.snappi_api.Api object at 0x7f1eef548850>\ntx_port = <snappi.snappi.Port object at 0x7f1eea40a250>\nrx_port = <snappi.snappi.Port object at 0x7f1eea4099e0>\nb2b_raw_config = <snappi.snappi.Config object at 0x7f1eea40bb50>\n\n    def test_phb_ecn(api, tx_port, rx_port, b2b_raw_config):\n        \"\"\"\n        This will test that phb and ecn are set on an ipv4 header\n        \"\"\"\n        b2b_raw_config.flows.clear()\n        f = b2b_raw_config.flows.flow()[-1]\n        f.name = \"Ipv4 with Phb and Ecn\"\n        f.tx_rx.port.tx_name = tx_port.name\n        f.tx_rx.port.rx_name = rx_port.name\n        f.packet.ethernet().ipv4()\n        ip = f.packet[-1]\n        ip.priority.choice = ip.priority.DSCP\n        ip.priority.dscp.phb.values = [\n            ip.priority.dscp.phb.CS2,\n            ip.priority.dscp.phb.CS1,\n            ip.priority.dscp.phb.CS5,\n        ]\n        ip.priority.dscp.ecn.value = ip.priority.dscp.ecn.CAPABLE_TRANSPORT_1\n>       api.set_config(b2b_raw_config)\n\ntests/test_phb_ecn.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <snappi_ixnetwork.snappi_api.Api object at 0x7f1eef548850>\nconfig = <snappi.snappi.Config object at 0x7f1eea40bb50>\n\n    def set_config(self, config):\n        \"\"\"Set or update the configuration\"\"\"\n        try:\n            if isinstance(config, (type(self._config_type), str)) is False:\n                raise TypeError(\n                    \"The content must be of type Union[Config, str]\"\n                )\n    \n            if isinstance(config, str) is True:\n                config = self._config_type.deserialize(config)\n            self.config_ixnetwork(config)\n            # CP-DP Convergence config\n            ixn_cpdpconvergence = self._traffic.Statistics.CpdpConvergence\n            ixn_cpdpconvergence.Enabled = False\n            cfg = config.get(\"events\")\n            if cfg is not None:\n                cp_events = cfg.get(\"cp_events\")\n                if cp_events is not None:\n                    cp_events_enable = cp_events.get(\"enable\")\n                else:\n                    cp_events_enable = False\n                dp_events = cfg.get(\"dp_events\")\n                if dp_events is not None:\n                    dp_events_enable = dp_events.get(\"enable\")\n                    rx_rate_threshold = dp_events.get(\"rx_rate_threshold\")\n                else:\n                    dp_events_enable = False\n                # Enable cp-dp convergence if any one of cp or dp is true\n                if cp_events_enable or dp_events_enable:\n                    ixn_cpdpconvergence.Enabled = True\n                    # For CP events\n                    if cp_events_enable:\n                        ixn_cpdpconvergence.EnableControlPlaneEvents = True\n                    # For DP events\n                    if dp_events_enable:\n                        if self.traffic_item.has_latency is True:\n                            raise Exception(\n                                \"We are supporting either latency or dp convergence\"\n                            )\n                        ixn_cpdpconvergence.EnableDataPlaneEventsRateMonitor = True\n                        ixn_cpdpconvergence.DataPlaneThreshold = rx_rate_threshold\n    \n                for ixn_traffic_item in self._traffic_item.find():\n                    ixn_traffic_item.Tracking.find()[0].TrackBy = [\n                        \"destEndpoint0\",\n                        \"destSessionDescription0\",\n                    ]\n            else:\n                ixn_cpdpconvergence.Enabled = False\n    \n        except Exception as err:\n>           raise SnappiIxnException(err)\nE           snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 276, in set_config\nE               self.config_ixnetwork(config)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 364, in config_ixnetwork\nE               self.traffic_item.config()\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 773, in config\nE               ixn_traffic_item = self.get_ixn_config(self._config)[0]\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 536, in get_ixn_config\nE               self._importconfig(imports)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 464, in _importconfig\nE               raise SnappiIxnException(\nE            [{'xpath': '', 'message': 'Object reference not set to an instance of an object.', 'severity': 'kError', 'category': 'invalidCommit', 'property': 'noAtt'}, {'xpath': '', 'message': 'Object reference not set to an instance of an object.', 'severity': 'kError', 'category': 'invalidCommit', 'property': 'noAtt'}]\n\nsnappi_ixnetwork/snappi_api.py:317: SnappiIxnException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"--------------------------------- Captured Log ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Config validation 0.003s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Ports configuration 93.345s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Captures configuration 0.378s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Location hosts ready [novus1-715849.ccu.is.keysight.com] 0.097s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Speed conversion is not require for (port.name, speed) : [('tx', 'normal'), ('rx', 'normal')]","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Aggregation mode speed change 0.142s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Location preemption [novus1-715849.ccu.is.keysight.com;1;1, novus1-715849.ccu.is.keysight.com;1;2] 0.105s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Location connect [tx, rx] 3.419s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1425 tx connectedLinkDown","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1425 rx connectedLinkDown","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Location state check [tx, rx] 0.285s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Location configuration 5.077s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Layer1 configuration 7.072s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Lag Configuration 10.058s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Convert device config : 0.558s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Create IxNetwork device config : 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Push IxNetwork device config : 0.088s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Devices configuration 0.758s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Flows configuration 1.834s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"--------------------------------- Captured Out ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":21,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"pytest"},{"name":"host","value":"snappi-ixn-ci-novus10g"},{"name":"testClass","value":"test_phb_ecn"},{"name":"package","value":"test_phb_ecn"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":77,"unknown":0,"total":78},"items":[{"uid":"feb0f3e9d6db9f24","status":"passed","time":{"start":1743696488928,"stop":1743696527674,"duration":38746}},{"uid":"b08675afb4587722","status":"passed","time":{"start":1743689614468,"stop":1743689661679,"duration":47211}},{"uid":"2f30dd18d23ce5fb","status":"passed","time":{"start":1743655642521,"stop":1743655690442,"duration":47921}},{"uid":"df0461423e66f60b","status":"passed","time":{"start":1743167009876,"stop":1743167046651,"duration":36775}},{"uid":"50956f09a5a8e720","status":"passed","time":{"start":1743158796170,"stop":1743158831960,"duration":35790}},{"uid":"e8264009c6aa4edc","status":"passed","time":{"start":1743154377859,"stop":1743154423603,"duration":45744}},{"uid":"97e93754c0b90467","status":"passed","time":{"start":1743142356248,"stop":1743142403762,"duration":47514}},{"uid":"d7a69f3a422c805f","status":"passed","time":{"start":1743134333235,"stop":1743134370978,"duration":37743}},{"uid":"c384f0ffd8be05d5","status":"passed","time":{"start":1743107933073,"stop":1743107976506,"duration":43433}},{"uid":"dad41c190ee4ac","status":"passed","time":{"start":1743101127011,"stop":1743101163672,"duration":36661}},{"uid":"7269314648d6a4c","status":"passed","time":{"start":1743094320105,"stop":1743094358708,"duration":38603}},{"uid":"a661491b9308435b","status":"passed","time":{"start":1743029632067,"stop":1743029687153,"duration":55086}},{"uid":"6637ddbbb180c04f","status":"passed","time":{"start":1743024925670,"stop":1743024969246,"duration":43576}},{"uid":"9a1162a76d1aee9a","status":"passed","time":{"start":1743020239133,"stop":1743020281387,"duration":42254}},{"uid":"779ffa00c22e75ed","status":"passed","time":{"start":1743003871353,"stop":1743003910297,"duration":38944}},{"uid":"bc85c1cc2d3f20c9","status":"passed","time":{"start":1742996899832,"stop":1742996937336,"duration":37504}},{"uid":"6d63002265a575f","status":"passed","time":{"start":1742993864845,"stop":1742993887014,"duration":22169}},{"uid":"205b1a105870e5","status":"passed","time":{"start":1742381702821,"stop":1742381743704,"duration":40883}},{"uid":"58d429d10645450c","status":"passed","time":{"start":1742374910714,"stop":1742374955071,"duration":44357}},{"uid":"fef6a2d4afa595b6","status":"passed","time":{"start":1742299164935,"stop":1742299204422,"duration":39487}}]},"tags":[]},"source":"a3dba05a89021e3c.json","parameterValues":[]}