{"uid":"6cd11b0286ce1da3","name":"test_isis","historyId":"pytest:isis.test_isis#test_isis","time":{"start":1758089161716,"stop":1758089271381,"duration":109665},"status":"failed","statusMessage":"assert 4 == 2\n +  where 4 = len(<snappi.snappi.IsisMetricIter object at 0x7fdd0c71f200>)\n +    where <snappi.snappi.IsisMetricIter object at 0x7fdd0c71f200> = <snappi.snappi.MetricsResponse object at 0x7fdd0c716de0>.isis_metrics","statusTrace":"api = <snappi_ixnetwork.snappi_api.Api object at 0x7fdd0dca3c10>\nb2b_raw_config = <snappi.snappi.Config object at 0x7fdd0d3a62a0>\nutils = <module 'utils' from '/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/tests/utils/__init__.py'>\n\n    def test_isis(api, b2b_raw_config, utils):\n        \"\"\"Test only isis with v4 route range\n        - set_config\n        - start protocols\n        - verify isis metrics\n        \"\"\"\n        packets = 10000\n        api.set_config(api.config())\n        b2b_raw_config.flows.clear()\n    \n        # Adding ports\n        p1, p2 = b2b_raw_config.ports\n    \n        # Device\n        p1d1, p2d1 = b2b_raw_config.devices.device(name=\"p1d1\").device(name=\"p2d1\")\n    \n        # Ethernet\n        p1d1_eth, p2d1_eth = p1d1.ethernets.add(), p2d1.ethernets.add()\n        p1d1_eth.connection.port_name = p1.name\n        p1d1_eth.name = \"p1d1_eth\"\n        p1d1_eth.mac = \"00:00:00:01:01:01\"\n        p1d1_eth.mtu = 1500\n    \n        p2d1_eth.connection.port_name = p2.name\n        p2d1_eth.name = \"p2d1_eth\"\n        p2d1_eth.mac = \"00:00:00:02:02:02\"\n        p2d1_eth.mtu = 1500\n    \n        # port 1 device 1 ipv4\n        p1d1_ipv4 = p1d1_eth.ipv4_addresses.add()\n        p1d1_ipv4.address = \"1.1.1.2\"\n        p1d1_ipv4.gateway = \"1.1.1.1\"\n        p1d1_ipv4.name = \"p1d1_ipv4\"\n        p1d1_ipv4.prefix = 24\n    \n        # port 1 device 1 isis\n        p1d1_isis = p1d1.isis\n        p1d1_isis.name = \"p1d1_isis\"\n        p1d1_isis.system_id = \"670000000001\"\n    \n        # port 1 device 1 isis basic\n        p1d1_isis.basic.ipv4_te_router_id = p1d1_ipv4.address\n        p1d1_isis.basic.hostname = \"ixia-c-port1\"\n        p1d1_isis.basic.enable_wide_metric = True\n        p1d1_isis.basic.learned_lsp_filter = True\n    \n        # port 1 device 1 isis advance\n        p1d1_isis.advanced.area_addresses = [\"490001\"]\n        p1d1_isis.advanced.csnp_interval = 10000\n        p1d1_isis.advanced.enable_hello_padding = True\n        p1d1_isis.advanced.lsp_lifetime = 1200\n        p1d1_isis.advanced.lsp_mgroup_min_trans_interval = 5000\n        p1d1_isis.advanced.lsp_refresh_rate = 900\n        p1d1_isis.advanced.max_area_addresses = 3\n        p1d1_isis.advanced.max_lsp_size = 1492\n        p1d1_isis.advanced.psnp_interval = 2000\n        p1d1_isis.advanced.enable_attached_bit = False\n    \n        # port 1 device 1 isis interface\n        p1d1_isis_intf = p1d1_isis.interfaces.add()\n        p1d1_isis_intf.eth_name = p1d1_eth.name\n        p1d1_isis_intf.network_type = \"point_to_point\"\n        p1d1_isis_intf.level_type = \"level_1\"\n        p1d1_isis_intf.metric = 10\n        p1d1_isis_intf.name = \"p1d1_isis_intf\"\n        p1d1_isis_intf.l2_settings.dead_interval = 30\n        p1d1_isis_intf.l2_settings.hello_interval = 10\n        p1d1_isis_intf.l2_settings.priority = 0\n        p1d1_isis_intf.advanced.auto_adjust_supported_protocols = True\n    \n        # port 1 device 1 isis v4 routes\n        p1d1_isis_v4routes = p1d1_isis.v4_routes.add()\n        p1d1_isis_v4routes.name = \"p1d1_isis_v4routes\"\n        p1d1_isis_v4routes.link_metric = 10\n        p1d1_isis_v4routes.origin_type = \"internal\"\n        p1d1_isis_v4routes_addr = p1d1_isis_v4routes.addresses.add()\n        p1d1_isis_v4routes_addr.address = \"10.10.1.1\"\n        p1d1_isis_v4routes_addr.prefix = 32\n        p1d1_isis_v4routes_addr.count = 3\n        p1d1_isis_v4routes_addr.step = 1\n    \n        # port 2 device 1 ipv4\n        p2d1_ipv4 = p2d1_eth.ipv4_addresses.add()\n        p2d1_ipv4.address = \"1.1.1.1\"\n        p2d1_ipv4.gateway = \"1.1.1.2\"\n        p2d1_ipv4.name = \"p2d1_ipv4\"\n        p2d1_ipv4.prefix = 24\n    \n        # port 2 device 1 isis\n        p2d1_isis = p2d1.isis\n        p2d1_isis.name = \"p2d1_isis\"\n        p2d1_isis.system_id = \"680000000001\"\n    \n        # port 2 device 1 isis basic\n        p2d1_isis.basic.ipv4_te_router_id = p2d1_ipv4.address\n        p2d1_isis.basic.hostname = \"ixia-c-port2\"\n        p2d1_isis.basic.enable_wide_metric = True\n        p2d1_isis.basic.learned_lsp_filter = True\n    \n        # port 2 device 1 isis advanced\n        p2d1_isis.advanced.area_addresses = [\"490001\"]\n        p2d1_isis.advanced.csnp_interval = 10000\n        p2d1_isis.advanced.enable_hello_padding = True\n        p2d1_isis.advanced.lsp_lifetime = 1200\n        p2d1_isis.advanced.lsp_mgroup_min_trans_interval = 5000\n        p2d1_isis.advanced.lsp_refresh_rate = 900\n        p2d1_isis.advanced.max_area_addresses = 3\n        p2d1_isis.advanced.max_lsp_size = 1492\n        p2d1_isis.advanced.psnp_interval = 2000\n        p2d1_isis.advanced.enable_attached_bit = False\n    \n        # port 2 device 1 isis interface\n        p2d1_isis_intf = p2d1_isis.interfaces.add()\n        p2d1_isis_intf.eth_name = p2d1_eth.name\n        p2d1_isis_intf.network_type = \"point_to_point\"\n        p2d1_isis_intf.level_type = \"level_1\"\n        p2d1_isis_intf.metric = 10\n        p2d1_isis_intf.name = \"p2d1_isis_intf\"\n        p2d1_isis_intf.l2_settings.dead_interval = 30\n        p2d1_isis_intf.l2_settings.hello_interval = 10\n        p2d1_isis_intf.l2_settings.priority = 0\n        p2d1_isis_intf.advanced.auto_adjust_supported_protocols = True\n    \n        # port 2 device 1 isis v4 routes\n        p2d1_isis_v4routes = p2d1_isis.v4_routes.add()\n        p2d1_isis_v4routes.name = \"p2d1_isis_v4routes\"\n        p2d1_isis_v4routes.link_metric = 10\n        p2d1_isis_v4routes.origin_type = \"internal\"\n        p2d1_isis_v4routes_addr = p2d1_isis_v4routes.addresses.add()\n        p2d1_isis_v4routes_addr.address = \"10.10.1.1\"\n        p2d1_isis_v4routes_addr.prefix = 32\n        p2d1_isis_v4routes_addr.count = 2\n        p2d1_isis_v4routes_addr.step = 1\n    \n        # Configure flow\n        flow = b2b_raw_config.flows.flow(name=\"flow\")[-1]\n        flow.tx_rx.device.tx_names = [p1d1_isis_v4routes.name]\n        flow.tx_rx.device.rx_names = [p2d1_isis_v4routes.name]\n        flow.size.fixed = 128\n        flow.rate.pps = 1000\n        flow.duration.fixed_packets.packets = 10000\n        flow.metrics.enable = True\n        flow.packet.ethernet().ipv4()\n    \n        utils.start_traffic(api, b2b_raw_config)\n    \n        enums = [\n            \"l1_sessions_up\",\n            \"l1_session_flap\",\n            \"l1_database_size\",\n        ]\n    \n        expected_results = {\n            \"p1d1\": [1, 0, 2],\n            \"p2d1\": [1, 0, 2],\n        }\n    \n        # IS-IS metrics\n        req = api.metrics_request()\n        req.isis.router_names = []\n        req.isis.column_names = enums[:3]\n        results = api.get_metrics(req)\n    \n    \n>       assert len(results.isis_metrics) == 2\nE       assert 4 == 2\nE        +  where 4 = len(<snappi.snappi.IsisMetricIter object at 0x7fdd0c71f200>)\nE        +    where <snappi.snappi.IsisMetricIter object at 0x7fdd0c71f200> = <snappi.snappi.MetricsResponse object at 0x7fdd0c716de0>.isis_metrics\n\ntests/isis/test_isis.py:169: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"--------------------------------- Captured Log ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1518 tx connectedLinkDown","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1518 rx connectedLinkDown","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"--------------------------------- Captured Out ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"pytest"},{"name":"host","value":"snappi-ixn-ci-novus10g"},{"name":"testClass","value":"isis.test_isis"},{"name":"package","value":"isis.test_isis"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":31,"unknown":0,"total":33},"items":[{"uid":"1143b472ee50038a","status":"passed","time":{"start":1757655105546,"stop":1757655231516,"duration":125970}},{"uid":"5e8b2e49115da1a0","status":"passed","time":{"start":1756798205879,"stop":1756798320637,"duration":114758}},{"uid":"4595feb8f196bd64","status":"passed","time":{"start":1756451364315,"stop":1756451504618,"duration":140303}},{"uid":"2d39b0c016669b26","status":"passed","time":{"start":1756387647155,"stop":1756387769210,"duration":122055}},{"uid":"f6377db0f96eac3d","status":"passed","time":{"start":1756373178971,"stop":1756373301045,"duration":122074}},{"uid":"887a52607c465fb6","status":"passed","time":{"start":1756365456170,"stop":1756365585922,"duration":129752}},{"uid":"52a504dd13a030b","status":"passed","time":{"start":1756357974989,"stop":1756358089047,"duration":114058}},{"uid":"44b78b61b4975eaf","status":"passed","time":{"start":1756235874804,"stop":1756235984771,"duration":109967}},{"uid":"31b56c6d0e884e19","status":"passed","time":{"start":1756228444993,"stop":1756228575686,"duration":130693}},{"uid":"d40222a2e6a2760f","status":"passed","time":{"start":1756153102547,"stop":1756153225328,"duration":122781}},{"uid":"67057dc0f1d2dd08","status":"passed","time":{"start":1756145518681,"stop":1756145654388,"duration":135707}},{"uid":"d6f6ebcee59c26bd","status":"passed","time":{"start":1756135659955,"stop":1756135780963,"duration":121008}},{"uid":"9bfab1877e086158","status":"passed","time":{"start":1756112750540,"stop":1756112873916,"duration":123376}},{"uid":"a9d0cb5e23beaf17","status":"failed","statusDetails":"assert 4 == 2\n +  where 4 = len(<snappi.snappi.IsisMetricIter object at 0x7fadad4980c0>)\n +    where <snappi.snappi.IsisMetricIter object at 0x7fadad4980c0> = <snappi.snappi.MetricsResponse object at 0x7fadad46dd50>.isis_metrics","time":{"start":1756097345515,"stop":1756097455138,"duration":109623}},{"uid":"36ee6d3a071210ed","status":"passed","time":{"start":1755853618770,"stop":1755853746400,"duration":127630}},{"uid":"490b19ec65afde81","status":"passed","time":{"start":1755770830114,"stop":1755770958747,"duration":128633}},{"uid":"ccff39eec344f3a5","status":"passed","time":{"start":1755605594608,"stop":1755605701198,"duration":106590}},{"uid":"6e4c482f7bb539af","status":"passed","time":{"start":1755598268759,"stop":1755598391011,"duration":122252}},{"uid":"7f50ceae882c719c","status":"passed","time":{"start":1755590656281,"stop":1755590778241,"duration":121960}},{"uid":"48b9732f6c36d4e3","status":"passed","time":{"start":1755582190551,"stop":1755582313808,"duration":123257}}]},"tags":[]},"source":"6cd11b0286ce1da3.json","parameterValues":[]}