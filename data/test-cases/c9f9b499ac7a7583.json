{"uid":"c9f9b499ac7a7583","name":"test_encrypt_with_mka_multiple_devices","historyId":"pytest:macsec.test_macsec_mka_multiple_devices#test_encrypt_with_mka_multiple_devices","time":{"start":1744106575909,"stop":1744106687039,"duration":111130},"status":"failed","statusMessage":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 584, in get_metrics\n    response = self.protocol_metrics.results(request)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/protocolmetrics.py\", line 445, in results\n    return self._filter_stats(protocol)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/protocolmetrics.py\", line 418, in _filter_stats\n    return self._get_per_device_group_stats(protocol)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/protocolmetrics.py\", line 314, in _get_per_device_group_stats\n    raise Exception(msg)\n \n                Could not retrive drill down view                 at row index 0 Failed to get the View.href property as the View object has no encapsulated resources. Either the View.find() method was not called or it failed to retrieve any resources from the server.","statusTrace":"self = <snappi_ixnetwork.protocolmetrics.ProtocolMetrics object at 0x7f0d3af43d90>\nprotocol = 'macsec'\n\n    def _get_per_device_group_stats(self, protocol):\n        ports, v = self._port_list_in_per_port(protocol)\n        config_ports = self._port_names_from_devices()\n        indices = set(\n            [ports.index(p) for p in list(set(config_ports)) if p in ports]\n        )\n        drill_options = self._PROTO_NAME_MAP_[protocol].get(\"drill_down_options\", [])\n        drill_name = self._PROTO_NAME_MAP_[protocol][\"drill_down\"]\n        per_port = self._PROTO_NAME_MAP_[protocol][\"per_port\"]\n        column_names = self._RESULT_COLUMNS.get(protocol, [])\n        row_lst = list()\n        for i in indices:\n            try:\n                drill = self.ixn.Statistics.View.find(Caption=drill_name)\n                for option in drill_options:\n                    self._do_drill_down(v, per_port, i, option)\n>               self._check_if_page_ready(drill)\n\nsnappi_ixnetwork/protocolmetrics.py:307: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsnappi_ixnetwork/protocolmetrics.py:229: in _check_if_page_ready\n    view.Refresh()\n.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/statistics/view/view.py:1212: in Refresh\n    payload = {\"Arg1\": self.href}\n.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py:158: in href\n    return self._get_attribute(\"href\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ixnetwork_restpy.testplatform.sessions.ixnetwork.statistics.view.view.View object at 0x7f0d39b46540>\nname = 'href'\n\n    def _get_attribute(self, name):\n        \"\"\"The main accessor for all attributes\"\"\"\n        if self._mode[0] == \"config\":\n            if name == \"href\":\n                return self._properties[name]\n            else:\n                return name\n        else:\n            if len(self._object_properties) == 0:\n                msg = (\n                    \"Failed to get the {}.{} property as the {} object has no \"\n                    \"encapsulated resources. \"\n                ).format(self.__class__.__name__, name, self.__class__.__name__)\n                if \"find\" in dir(self):\n                    msg += (\n                        \"Either the {}.find() method was not called or it failed \"\n                        \"to retrieve any resources from the server.\"\n                    ).format(self.__class__.__name__)\n>               raise NotFoundError(msg)\nE               ixnetwork_restpy.errors.NotFoundError: Failed to get the View.href property as the View object has no encapsulated resources. Either the View.find() method was not called or it failed to retrieve any resources from the server.\n\n.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py:218: NotFoundError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <snappi_ixnetwork.snappi_api.Api object at 0x7f0d3b16bd90>\nrequest = <snappi.snappi.MetricsRequest object at 0x7f0d39cfefc0>\n\n    def get_metrics(self, request):\n        \"\"\"\n        Gets port, flow and protocol metrics.\n    \n        Args\n        ----\n        - request (Union[MetricsRequest, str]): A request for Port, Flow and\n          protocol metrics.\n          The request content MUST be vase on the OpenAPI model,\n          #/components/schemas/Result.MetricsRequest\n          See the docs/openapi.yaml document for all model details\n        \"\"\"\n        try:\n            self._connect()\n            metric_req = self.metrics_request()\n            if isinstance(request, (type(metric_req), str)) is False:\n                raise TypeError(\n                    \"The content must be of type Union[MetricsRequest, str]\"\n                )\n            if isinstance(request, str) is True:\n                request = metric_req.deserialize(request)\n            # Need to change the code style when the choice Enum grows big\n            if request.get(\"choice\") == \"port\":\n                response = self.vport.results(request.port)\n                metric_res = self.metrics_response()\n                metric_res.port_metrics.deserialize(response)\n                return metric_res\n            if request.get(\"choice\") == \"flow\":\n                response = self.traffic_item.results(request.flow)\n                metric_res = self.metrics_response()\n                metric_res.flow_metrics.deserialize(response)\n                return metric_res\n            if request.get(\"choice\") == \"lag\":\n                response = self.traffic_item.results(request.lag)\n                metric_res = self.metrics_response()\n                metric_res.lag_metrics.deserialize(response)\n                return metric_res\n            if request.get(\"choice\") == \"lacp\":\n                response = self.traffic_item.results(request.lacp)\n                metric_res = self.metrics_response()\n                metric_res.lacp_metrics.deserialize(response)\n                return metric_res\n            if request.get(\"choice\") == \"convergence\":\n                response = self._result(request.convergence)\n                metric_res = self.metrics_response()\n                metric_res.convergence_metrics.deserialize(response)\n                return metric_res\n            if (\n                request.get(\"choice\")\n                in self.protocol_metrics.get_supported_protocols()\n            ):\n>               response = self.protocol_metrics.results(request)\n\nsnappi_ixnetwork/snappi_api.py:584: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsnappi_ixnetwork/protocolmetrics.py:445: in results\n    return self._filter_stats(protocol)\nsnappi_ixnetwork/protocolmetrics.py:418: in _filter_stats\n    return self._get_per_device_group_stats(protocol)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <snappi_ixnetwork.protocolmetrics.ProtocolMetrics object at 0x7f0d3af43d90>\nprotocol = 'macsec'\n\n    def _get_per_device_group_stats(self, protocol):\n        ports, v = self._port_list_in_per_port(protocol)\n        config_ports = self._port_names_from_devices()\n        indices = set(\n            [ports.index(p) for p in list(set(config_ports)) if p in ports]\n        )\n        drill_options = self._PROTO_NAME_MAP_[protocol].get(\"drill_down_options\", [])\n        drill_name = self._PROTO_NAME_MAP_[protocol][\"drill_down\"]\n        per_port = self._PROTO_NAME_MAP_[protocol][\"per_port\"]\n        column_names = self._RESULT_COLUMNS.get(protocol, [])\n        row_lst = list()\n        for i in indices:\n            try:\n                drill = self.ixn.Statistics.View.find(Caption=drill_name)\n                for option in drill_options:\n                    self._do_drill_down(v, per_port, i, option)\n                self._check_if_page_ready(drill)\n            except Exception as e:\n                msg = \"\"\"\n                Could not retrive drill down view \\\n                at row index {} {}\"\"\".format(\n                    i, e\n                )\n>               raise Exception(msg)\nE               Exception: \nE                               Could not retrive drill down view                 at row index 0 Failed to get the View.href property as the View object has no encapsulated resources. Either the View.find() method was not called or it failed to retrieve any resources from the server.\n\nsnappi_ixnetwork/protocolmetrics.py:314: Exception\n\nDuring handling of the above exception, another exception occurred:\n\napi = <snappi_ixnetwork.snappi_api.Api object at 0x7f0d3b16bd90>\nb2b_raw_config = <snappi.snappi.Config object at 0x7f0d3a8449a0>\nutils = <module 'utils' from '/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/tests/utils/__init__.py'>\n\n    def test_encrypt_with_mka_multiple_devices(api, b2b_raw_config, utils):\n        \"\"\"\n        Test for the macsec configuration\n        \"\"\"\n        config = b2b_raw_config\n        api.set_config(api.config())\n        config.flows.clear()\n        #ixnetwork = api._ixnetwork\n    \n        p1, p2 = config.ports\n        d1, d2, d3, d4 = config.devices.device(name=\"enc_only_macsec1\").device(name=\"enc_only_macsec2\").device(name=\"enc_only_macsec3\").device(name=\"enc_only_macsec4\")\n    \n        eth1, eth2 = d1.ethernets.add(), d2.ethernets.add()\n        eth3, eth4 = d3.ethernets.add(), d4.ethernets.add()\n    \n        eth1.connection.port_name, eth2.connection.port_name = p1.name, p2.name\n        eth3.connection.port_name, eth4.connection.port_name = p1.name, p2.name\n    \n        eth1.mac, eth2.mac = \"00:00:11:00:00:01\", \"00:00:22:00:00:02\"\n        eth3.mac, eth4.mac = \"00:00:33:00:00:01\", \"00:00:44:00:00:02\"\n    \n        ip1, ip2 = eth1.ipv4_addresses.add(), eth2.ipv4_addresses.add()\n        ip3, ip4 = eth3.ipv4_addresses.add(), eth4.ipv4_addresses.add()\n    \n        eth1.name, eth2.name = \"eth1\", \"eth2\"\n        eth3.name, eth4.name = \"eth3\", \"eth4\"\n    \n        ip1.name, ip2.name = \"ip1\", \"ip2\"\n        ip3.name, ip4.name = \"ip3\", \"ip4\"\n    \n        ####################\n        # MACsec\n        ####################\n        macsec1, macsec2 = d1.macsec, d2.macsec\n        macsec3, macsec4 = d3.macsec, d4.macsec\n    \n        macsec1_int, macsec2_int = macsec1.ethernet_interfaces.add(), macsec2.ethernet_interfaces.add()\n        macsec3_int, macsec4_int = macsec3.ethernet_interfaces.add(), macsec4.ethernet_interfaces.add()\n    \n        macsec1_int.eth_name, macsec2_int.eth_name = eth1.name, eth2.name\n        macsec3_int.eth_name, macsec4_int.eth_name = eth3.name, eth4.name\n    \n        secy1, secy2 = macsec1_int.secure_entity, macsec2_int.secure_entity\n        secy3, secy4 = macsec3_int.secure_entity, macsec4_int.secure_entity\n    \n        secy1.name, secy2.name = \"macsec1\", \"macsec2\"\n        secy3.name, secy4.name = \"macsec3\", \"macsec4\"\n    \n        # Data plane and crypto engine\n        secy1.data_plane.choice = secy2.data_plane.choice = \"encapsulation\"\n        secy3.data_plane.choice = secy4.data_plane.choice = \"encapsulation\"\n    \n        secy1.data_plane.encapsulation.crypto_engine.choice = secy2.data_plane.encapsulation.crypto_engine.choice = \"encrypt_only\"\n        secy3.data_plane.encapsulation.crypto_engine.choice = secy4.data_plane.encapsulation.crypto_engine.choice = \"encrypt_only\"\n    \n        # Data plane and crypto engine\n        secy1_crypto_engine_enc_only, secy2_crypto_engine_enc_only = secy1.data_plane.encapsulation.crypto_engine.encrypt_only, secy2.data_plane.encapsulation.crypto_engine.encrypt_only\n        secy3_crypto_engine_enc_only, secy4_crypto_engine_enc_only = secy3.data_plane.encapsulation.crypto_engine.encrypt_only, secy4.data_plane.encapsulation.crypto_engine.encrypt_only\n    \n        # Data plane Tx SC\n        secy1_dataplane_txsc1, secy2_dataplane_txsc1 = secy1_crypto_engine_enc_only.secure_channels.add(), secy2_crypto_engine_enc_only.secure_channels.add()\n        secy3_dataplane_txsc1, secy4_dataplane_txsc1 = secy3_crypto_engine_enc_only.secure_channels.add(), secy4_crypto_engine_enc_only.secure_channels.add()\n    \n        # Fixed PN\n        secy1_dataplane_txsc1.tx_pn.choice = secy2_dataplane_txsc1.tx_pn.choice = \"fixed_pn\"\n        secy3_dataplane_txsc1.tx_pn.choice = secy4_dataplane_txsc1.tx_pn.choice = \"fixed_pn\"\n    \n        ####################\n        # MKA\n        ####################\n        secy1_key_gen_proto, secy2_key_gen_proto = secy1.key_generation_protocol, secy2.key_generation_protocol\n        secy3_key_gen_proto, secy4_key_gen_proto = secy3.key_generation_protocol, secy4.key_generation_protocol\n    \n        secy1_key_gen_proto.choice = secy2_key_gen_proto.choice = \"mka\"\n        secy3_key_gen_proto.choice = secy4_key_gen_proto.choice = \"mka\"\n    \n        kay1, kay2 = secy1_key_gen_proto.mka, secy2_key_gen_proto.mka\n        kay3, kay4 = secy3_key_gen_proto.mka, secy4_key_gen_proto.mka\n    \n        kay1.name, kay2.name = \"mka1\", \"mka2\"\n        kay3.name, kay4.name = \"mka3\", \"mka4\"\n    \n        # Basic properties\n        kay1.basic.key_derivation_function = kay2.basic.key_derivation_function = \"aes_cmac_128\"\n        kay3.basic.key_derivation_function = kay4.basic.key_derivation_function = \"aes_cmac_128\"\n    \n        # Key source: PSK\n        kay1_key_src, kay2_key_src = kay1.basic.key_source, kay2.basic.key_source\n        kay3_key_src, kay4_key_src = kay3.basic.key_source, kay4.basic.key_source\n    \n        kay1_key_src.choice = kay2_key_src.choice = \"psk\"\n        kay3_key_src.choice = kay4_key_src.choice = \"psk\"\n    \n        kay1_psk_chain, kay2_psk_chain = kay1_key_src.psks, kay2_key_src.psks\n        kay3_psk_chain, kay4_psk_chain = kay3_key_src.psks, kay4_key_src.psks\n    \n        # PSK 1\n        kay1_psk1, kay2_psk1 = kay1_psk_chain.add(), kay2_psk_chain.add()\n        kay3_psk1, kay4_psk1 = kay3_psk_chain.add(), kay4_psk_chain.add()\n    \n        kay1_psk1.cak_name = kay2_psk1.cak_name = kay3_psk1.cak_name = kay4_psk1.cak_name = \"0xF123456789ABCDEF0123456789ABCDEFF123456789ABCDEF0123456789ABCD01\"\n        kay1_psk1.cak_value = kay2_psk1.cak_value = kay3_psk1.cak_value = kay4_psk1.cak_value = \"0xF123456789ABCDEF0123456789ABCD01\"\n    \n        kay1_psk1.start_offset_time.hh = kay2_psk1.start_offset_time.hh = kay3_psk1.start_offset_time.hh = kay4_psk1.start_offset_time.hh = 0\n        kay1_psk1.start_offset_time.mm = kay2_psk1.start_offset_time.mm = kay3_psk1.start_offset_time.mm = kay4_psk1.start_offset_time.mm = 0\n    \n        kay1_psk1.end_offset_time.hh = kay2_psk1.end_offset_time.hh = kay3_psk1.end_offset_time.hh = kay4_psk1.end_offset_time.hh = 0\n        kay1_psk1.end_offset_time.hh = kay2_psk1.end_offset_time.hh = kay3_psk1.end_offset_time.hh = kay4_psk1.end_offset_time.hh = 0\n    \n        # Rekey mode\n        kay1_rekey_mode, kay2_rekey_mode, kay3_rekey_mode, kay4_rekey_mode = kay1.basic.rekey_mode, kay2.basic.rekey_mode, kay3.basic.rekey_mode, kay4.basic.rekey_mode\n        kay1_rekey_mode.choice = kay2_rekey_mode.choice = kay3_rekey_mode.choice = kay4_rekey_mode.choice = \"dont_rekey\"\n    \n        # Remaining basic properties autofilled\n    \n        # Key server\n        kay1_key_server, kay2_key_server, kay3_key_server, kay4_key_server = kay1.key_server, kay2.key_server, kay3.key_server, kay4.key_server\n        kay1_key_server.cipher_suite = kay2_key_server.cipher_suite = kay3_key_server.cipher_suite = kay4_key_server.cipher_suite = \"gcm_aes_128\"\n    \n        # Tx SC\n        kay1_tx, kay2_tx, kay3_tx, kay4_tx = kay1.tx, kay2.tx, kay3.tx, kay4.tx\n        kay1_txsc1, kay2_txsc1, kay3_txsc1, kay4_txsc1 = kay1_tx.secure_channels.add(), kay2_tx.secure_channels.add(), kay3_tx.secure_channels.add(), kay4_tx.secure_channels.add()\n    \n        kay1_txsc1.name, kay2_txsc1.name, kay3_txsc1.name, kay4_txsc1.name = \"txsc1\", \"txsc2\", \"txsc3\", \"txsc4\"\n        kay1_txsc1.system_id, kay2_txsc1.system_id, kay3_txsc1.system_id, kay4_txsc1.system_id = eth1.mac, eth2.mac, eth3.mac, eth4.mac\n        # Remaining Tx SC settings autofilled\n    \n        ####################\n        # Traffic\n        ####################\n        # Gratuitous ARP is sent so that DUT can learn our IP. Grat ARP source/destination are local address\n        # DUT MAC needs to be configured manually stateless encyption only engine cannot decrypt any packet including DUT ARP\n        ip1.address = \"10.1.1.1\"\n        ip2.address = \"10.1.1.2\"\n        ip3.address = \"10.1.1.3\"\n        ip4.address = \"10.1.1.4\"\n    \n        ip1.prefix = ip2.prefix = ip3.prefix = ip4.prefix =24\n    \n        ip1.gateway = ip2.address\n        ip2.gateway = ip1.address\n    \n        ip3.gateway = ip4.address\n        ip4.gateway = ip3.address\n    \n        ip1.gateway_mac.choice = \"value\"\n        ip1.gateway_mac.value = eth2.mac\n    \n        ip2.gateway_mac.choice = \"value\"\n        ip2.gateway_mac.value = eth1.mac\n    \n        ip3.gateway_mac.choice = \"value\"\n        ip3.gateway_mac.value = eth4.mac\n    \n        ip4.gateway_mac.choice = \"value\"\n        ip4.gateway_mac.value = eth3.mac\n    \n        # Flows\n        f1 = config.flows.flow(name=\"f1\")[-1]\n        f2 = config.flows.flow(name=\"f2\")[-1]\n    \n        # IP\n        f1.packet.ethernet().macsec().ipv4()\n        f2.packet.ethernet().macsec().ipv4()\n    \n        # DSCP\n        f1_ip = f1.packet[-1]\n        f2_ip = f2.packet[-1]\n    \n        f1_ip.priority.choice = f1_ip.priority.DSCP\n        f1_ip.priority.dscp.phb.values = [\n        f1_ip.priority.dscp.phb.CS2,\n        f1_ip.priority.dscp.phb.CS1,\n        f1_ip.priority.dscp.phb.CS5,\n        ]\n    \n        f2_ip.priority.choice = f2_ip.priority.DSCP\n        f2_ip.priority.dscp.phb.values = [\n        f2_ip.priority.dscp.phb.CS2,\n        f2_ip.priority.dscp.phb.CS1,\n        f2_ip.priority.dscp.phb.CS5,\n        ]\n    \n        f1_ip.priority.dscp.ecn.value = 3\n        f2_ip.priority.dscp.ecn.value = 3\n    \n        # IPv4 traffic from IP to IP endpoints\n        f1.tx_rx.device.tx_names = [ip1.name]\n        f2.tx_rx.device.tx_names = [ip3.name]\n    \n        f1.tx_rx.device.rx_names = [ip2.name]\n        f2.tx_rx.device.rx_names = [ip4.name]\n    \n        # Rate\n        f1.rate.pps = 5\n        f2.rate.pps = 5\n    \n        utils.start_traffic(api, config)\n    \n        ####################\n        # MKA stats\n        ####################\n        utils.wait_for(\n            lambda: results_mka_ok(api), \"stats to be as expected\", timeout_seconds=20\n        )\n        enums = [\n            \"mkpdu_tx\",\n            \"mkpdu_rx\",\n            \"live_peer_count\",\n            \"potential_peer_count\",\n            \"latest_key_tx_peer_count\",\n            \"latest_key_rx_peer_count\",\n            \"malformed_mkpdu\",\n            \"icv_mismatch\",\n        ]\n        expected_results = {\n            \"enc_only_macsec1\": [0, 0, 0, 0, 0, 0, 0, 0],\n            \"enc_only_macsec2\": [0, 0, 0, 0, 0, 0, 0, 0],\n        }\n        req = api.metrics_request()\n        req.mka.peer_names = [\"enc_only_macsec1\"]\n        results = api.get_metrics(req)\n        assert len(results.mka_metrics) == 1\n        assert results.mka_metrics[0].name == \"enc_only_macsec1\"\n        print(f\"\\n\\nMKA Result : enc_only_macsec1\\n\")\n        for mka_res in results.mka_metrics:\n            for i, enum in enumerate(enums):\n                val = expected_results[mka_res.name][i]\n                if \"session_state\" in enum:\n                    assert getattr(mka_res, enum) == val\n                else:\n                    assert getattr(mka_res, enum) >= val\n                print(f\"{enum} : {getattr(mka_res, enum)}\")\n    \n        req = api.metrics_request()\n        req.mka.peer_names = [\"enc_only_macsec2\"]\n        results = api.get_metrics(req)\n        assert len(results.mka_metrics) == 1\n        assert results.mka_metrics[0].name == \"enc_only_macsec2\"\n        print(f\"\\n\\nMKA Result : enc_only_macsec2\")\n        for mka_res in results.mka_metrics:\n            for i, enum in enumerate(enums):\n                val = expected_results[mka_res.name][i]\n                if \"session_state\" in enum:\n                    assert getattr(mka_res, enum) == val\n                else:\n                    assert getattr(mka_res, enum) >= val\n                print(f\"{enum} : {getattr(mka_res, enum)}\")\n    \n    \n        ####################\n        # MACsec stats\n        ####################\n>       utils.wait_for(\n            lambda: results_macsec_ok(api), \"stats to be as expected\", timeout_seconds=30\n        )\n\ntests/macsec/test_macsec_mka_multiple_devices.py:259: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/utils/common.py:216: in wait_for\n    res = func()\ntests/macsec/test_macsec_mka_multiple_devices.py:260: in <lambda>\n    lambda: results_macsec_ok(api), \"stats to be as expected\", timeout_seconds=30\ntests/macsec/test_macsec_mka_multiple_devices.py:324: in results_macsec_ok\n    results = api.get_metrics(req)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <snappi_ixnetwork.snappi_api.Api object at 0x7f0d3b16bd90>\nrequest = <snappi.snappi.MetricsRequest object at 0x7f0d39cfefc0>\n\n    def get_metrics(self, request):\n        \"\"\"\n        Gets port, flow and protocol metrics.\n    \n        Args\n        ----\n        - request (Union[MetricsRequest, str]): A request for Port, Flow and\n          protocol metrics.\n          The request content MUST be vase on the OpenAPI model,\n          #/components/schemas/Result.MetricsRequest\n          See the docs/openapi.yaml document for all model details\n        \"\"\"\n        try:\n            self._connect()\n            metric_req = self.metrics_request()\n            if isinstance(request, (type(metric_req), str)) is False:\n                raise TypeError(\n                    \"The content must be of type Union[MetricsRequest, str]\"\n                )\n            if isinstance(request, str) is True:\n                request = metric_req.deserialize(request)\n            # Need to change the code style when the choice Enum grows big\n            if request.get(\"choice\") == \"port\":\n                response = self.vport.results(request.port)\n                metric_res = self.metrics_response()\n                metric_res.port_metrics.deserialize(response)\n                return metric_res\n            if request.get(\"choice\") == \"flow\":\n                response = self.traffic_item.results(request.flow)\n                metric_res = self.metrics_response()\n                metric_res.flow_metrics.deserialize(response)\n                return metric_res\n            if request.get(\"choice\") == \"lag\":\n                response = self.traffic_item.results(request.lag)\n                metric_res = self.metrics_response()\n                metric_res.lag_metrics.deserialize(response)\n                return metric_res\n            if request.get(\"choice\") == \"lacp\":\n                response = self.traffic_item.results(request.lacp)\n                metric_res = self.metrics_response()\n                metric_res.lacp_metrics.deserialize(response)\n                return metric_res\n            if request.get(\"choice\") == \"convergence\":\n                response = self._result(request.convergence)\n                metric_res = self.metrics_response()\n                metric_res.convergence_metrics.deserialize(response)\n                return metric_res\n            if (\n                request.get(\"choice\")\n                in self.protocol_metrics.get_supported_protocols()\n            ):\n                response = self.protocol_metrics.results(request)\n                metric_res = self.metrics_response()\n                getattr(metric_res, request.choice + \"_metrics\").deserialize(\n                    response\n                )\n                return metric_res\n        except Exception as err:\n>           raise SnappiIxnException(err)\nE           snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 584, in get_metrics\nE               response = self.protocol_metrics.results(request)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/protocolmetrics.py\", line 445, in results\nE               return self._filter_stats(protocol)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/protocolmetrics.py\", line 418, in _filter_stats\nE               return self._get_per_device_group_stats(protocol)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/protocolmetrics.py\", line 314, in _get_per_device_group_stats\nE               raise Exception(msg)\nE            \nE                           Could not retrive drill down view                 at row index 0 Failed to get the View.href property as the View object has no encapsulated resources. Either the View.find() method was not called or it failed to retrieve any resources from the server.\n\nsnappi_ixnetwork/snappi_api.py:591: SnappiIxnException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"--------------------------------- Captured Log ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Config validation 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Ports configuration 6.672s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Captures configuration 0.184s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Aggregation mode speed change 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Location configuration 0.470s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Layer1 configuration 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Lag Configuration 0.092s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Convert device config : 0.548s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Create IxNetwork device config : 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Push IxNetwork device config : 0.090s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Devices configuration 0.725s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Flows configuration 0.186s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Start interfaces 0.266s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 IxNet - The Traffic Item configuration has changed and it needs to be regenerated before applying it to the Ixia hardware","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Config validation 0.015s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Ports configuration 1.903s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Captures configuration 1.323s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Location hosts ready [novus1-715849.ccu.is.keysight.com] 0.092s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Speed change not require due to redundant Layer1 config","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Aggregation mode speed change 0.005s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Location preemption [novus1-715849.ccu.is.keysight.com;1;1, novus1-715849.ccu.is.keysight.com;1;2] 0.113s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Location connect [tx, rx] 14.448s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1425 tx connectedLinkDown","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1425 rx connectedLinkDown","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Location state check [tx, rx] 0.286s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Location configuration 15.983s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Layer1 configuration 3.595s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Lag Configuration 0.087s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.device.macsec:macsec.py:104 MKA is configured in test","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.device.macsec:macsec.py:104 MKA is configured in test","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.device.macsec:macsec.py:104 MKA is configured in test","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.device.macsec:macsec.py:104 MKA is configured in test","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Convert device config : 0.280s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Create IxNetwork device config : 0.001s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Push IxNetwork device config : 0.792s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Devices configuration 1.164s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Flows configuration 3.708s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Start interfaces 1.918s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 IxNet - Protocols Version Mismatch.","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"IxNetwork Protocols Version: 10.80.2412.12","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Chassis Protocols Version: 10.50.2410.2","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 IxNet - The Traffic Item was modified. Please perform a Traffic Generate to update the associated traffic Flow Groups","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 IxNet - This protocol stack does not support dynamic update traffic. Please disable dynamic update on this Traffic Item.","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Captures start 2.115s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Flows generate/apply 18.276s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Flows clear statistics 14.667s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Captures start 0.851s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Flows start 4.728s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 IxNet - The Traffic Item was modified. Please perform a Traffic Generate to update the associated traffic Flow Groups","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 IxNet - Please verify settings, available below.","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 IxNet - Minimum recommended offset is 5 for ports in End Of Frame Timestamp mode and 6 for ports in Floating Timestamp mode.","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"--------------------------------- Captured Out ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":53,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"pytest"},{"name":"host","value":"snappi-ixn-ci-novus10g"},{"name":"testClass","value":"macsec.test_macsec_mka_multiple_devices"},{"name":"package","value":"macsec.test_macsec_mka_multiple_devices"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":5},"items":[{"uid":"e0629961ded977d0","status":"failed","statusDetails":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 584, in get_metrics\n    response = self.protocol_metrics.results(request)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/protocolmetrics.py\", line 445, in results\n    return self._filter_stats(protocol)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/protocolmetrics.py\", line 418, in _filter_stats\n    return self._get_per_device_group_stats(protocol)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/protocolmetrics.py\", line 314, in _get_per_device_group_stats\n    raise Exception(msg)\n \n                Could not retrive drill down view                 at row index 0 Failed to get the View.href property as the View object has no encapsulated resources. Either the View.find() method was not called or it failed to retrieve any resources from the server.","time":{"start":1743756339018,"stop":1743756458169,"duration":119151}},{"uid":"741a66b3d2e77f71","status":"failed","statusDetails":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 584, in get_metrics\n    response = self.protocol_metrics.results(request)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/protocolmetrics.py\", line 445, in results\n    return self._filter_stats(protocol)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/protocolmetrics.py\", line 418, in _filter_stats\n    return self._get_per_device_group_stats(protocol)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/protocolmetrics.py\", line 314, in _get_per_device_group_stats\n    raise Exception(msg)\n \n                Could not retrive drill down view                 at row index 0 Failed to get the View.href property as the View object has no encapsulated resources. Either the View.find() method was not called or it failed to retrieve any resources from the server.","time":{"start":1743749241780,"stop":1743749354657,"duration":112877}},{"uid":"fa878ee80a56a0eb","status":"failed","statusDetails":"Exception: Time out occurred while waiting for stats to be as expected","time":{"start":1743703353732,"stop":1743703472657,"duration":118925}},{"uid":"f2eac6b4e9a05827","status":"failed","statusDetails":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 584, in get_metrics\n    response = self.protocol_metrics.results(request)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/protocolmetrics.py\", line 445, in results\n    return self._filter_stats(protocol)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/protocolmetrics.py\", line 418, in _filter_stats\n    return self._get_per_device_group_stats(protocol)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/protocolmetrics.py\", line 314, in _get_per_device_group_stats\n    raise Exception(msg)\n \n                Could not retrive drill down view                 at row index 0 Failed to get the View.href property as the View object has no encapsulated resources. Either the View.find() method was not called or it failed to retrieve any resources from the server.","time":{"start":1743696488928,"stop":1743696603041,"duration":114113}}]},"tags":[]},"source":"c9f9b499ac7a7583.json","parameterValues":[]}