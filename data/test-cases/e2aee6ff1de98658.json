{"uid":"e2aee6ff1de98658","name":"test_bgpv6_routes","historyId":"pytest:traffic.test_device_bgp_ep#test_bgpv6_routes","time":{"start":1758561165365,"stop":1758561255926,"duration":90561},"status":"failed","statusMessage":"assert 4 == 2\n +  where 4 = len(<snappi.snappi.Bgpv6MetricIter object at 0x7fafb5cd0c80>)\n +    where <snappi.snappi.Bgpv6MetricIter object at 0x7fafb5cd0c80> = <snappi.snappi.MetricsResponse object at 0x7fafb6796340>.bgpv6_metrics","statusTrace":"api = <snappi_ixnetwork.snappi_api.Api object at 0x7fafb8c72ce0>\nb2b_raw_config = <snappi.snappi.Config object at 0x7fafb678c9f0>\nutils = <module 'utils' from '/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/tests/utils/__init__.py'>\n\n    def test_bgpv6_routes(api, b2b_raw_config, utils):\n        \"\"\"\n        Test for the bgpv6 routes\n        \"\"\"\n        size = 1500\n        packets = 1000\n        api.set_config(api.config())\n        b2b_raw_config.flows.clear()\n    \n        p1, p2 = b2b_raw_config.ports\n        d1, d2 = b2b_raw_config.devices.device(name=\"tx_bgp\").device(name=\"rx_bgp\")\n        eth1, eth2 = d1.ethernets.add(), d2.ethernets.add()\n        eth1.connection.port_name, eth2.connection.port_name = p1.name, p2.name\n        eth1.mac, eth2.mac = \"00:00:00:00:00:11\", \"00:00:00:00:00:22\"\n        ip1, ip2 = eth1.ipv6_addresses.add(), eth2.ipv6_addresses.add()\n        bgp1, bgp2 = d1.bgp, d2.bgp\n    \n        eth1.name, eth2.name = \"eth1\", \"eth2\"\n        ip1.name, ip2.name = \"ip1\", \"ip2\"\n    \n        ip1.address = \"2000::1\"\n        ip1.gateway = \"3000::1\"\n        ip1.prefix = 64\n    \n        ip2.address = \"3000::1\"\n        ip2.gateway = \"2000::1\"\n        ip2.prefix = 64\n    \n        bgp1.router_id, bgp2.router_id = \"192.0.0.1\", \"192.0.0.2\"\n        bgp1_int, bgp2_int = bgp1.ipv6_interfaces.add(), bgp2.ipv6_interfaces.add()\n        bgp1_int.ipv6_name, bgp2_int.ipv6_name = ip1.name, ip2.name\n        bgp1_peer, bgp2_peer = bgp1_int.peers.add(), bgp2_int.peers.add()\n        bgp1_peer.name, bgp2_peer.name = \"bgp1\", \"bpg2\"\n    \n        bgp1_peer.peer_address = \"3000::1\"\n        bgp1_peer.as_type = \"ibgp\"\n        bgp1_peer.as_number = 10\n    \n        bgp2_peer.peer_address = \"2000::1\"\n        bgp2_peer.as_type = \"ibgp\"\n        bgp2_peer.as_number = 10\n    \n        bgp1_rr1 = bgp1_peer.v6_routes.add(name=\"bgp1_rr1\")\n        bgp1_rr2 = bgp1_peer.v6_routes.add(name=\"bgp1_rr2\")\n        bgp2_rr1 = bgp2_peer.v6_routes.add(name=\"bgp2_rr1\")\n        bgp2_rr2 = bgp2_peer.v6_routes.add(name=\"bgp2_rr2\")\n    \n        bgp1_rr1.addresses.add(address=\"4000::1\", prefix=64)\n        bgp1_rr2.addresses.add(address=\"5000::1\", prefix=64)\n    \n        bgp2_rr1.addresses.add(address=\"4000::1\", prefix=64)\n        bgp2_rr2.addresses.add(address=\"5000::1\", prefix=64)\n    \n        flow_bgp = b2b_raw_config.flows.flow(name=\"flow_bgp\")[-1]\n    \n        flow_bgp.rate.percentage = 1\n        flow_bgp.duration.fixed_packets.packets = packets\n        flow_bgp.size.fixed = size\n        flow_bgp.tx_rx.device.tx_names = [\n            bgp1_rr1.name,\n            bgp1_rr2.name,\n        ]\n        flow_bgp.tx_rx.device.rx_names = [\n            bgp2_rr1.name,\n            bgp2_rr2.name,\n        ]\n        flow_bgp.metrics.enable = True\n        flow_bgp.metrics.loss = True\n        utils.start_traffic(api, b2b_raw_config, start_capture=False)\n    \n        req = api.metrics_request()\n        req.bgpv6.peer_names = []\n        results = api.get_metrics(req)\n        enums = [\n            \"session_state\",\n            \"routes_advertised\",\n            \"route_withdraws_sent\",\n        ]\n        expected_results = {\n            \"tx_bgp\": [\"up\", 0, 0],\n            \"rx_bgp\": [\"up\", 0, 0],\n        }\n    \n>       assert len(results.bgpv6_metrics) == 2\nE       assert 4 == 2\nE        +  where 4 = len(<snappi.snappi.Bgpv6MetricIter object at 0x7fafb5cd0c80>)\nE        +    where <snappi.snappi.Bgpv6MetricIter object at 0x7fafb5cd0c80> = <snappi.snappi.MetricsResponse object at 0x7fafb6796340>.bgpv6_metrics\n\ntests/traffic/test_device_bgp_ep.py:88: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"--------------------------------- Captured Log ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1522 tx connectedLinkDown","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1522 rx connectedLinkDown","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"--------------------------------- Captured Out ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"pytest"},{"name":"host","value":"snappi-ixn-ci-novus10g"},{"name":"testClass","value":"traffic.test_device_bgp_ep"},{"name":"package","value":"traffic.test_device_bgp_ep"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":28,"broken":0,"skipped":1,"passed":207,"unknown":0,"total":236},"items":[{"uid":"f9f87b4a698fc5a5","status":"passed","time":{"start":1758552031944,"stop":1758552135796,"duration":103852}},{"uid":"7379e18e0fbaa703","status":"passed","time":{"start":1758541969381,"stop":1758542075162,"duration":105781}},{"uid":"53951beb69ca72d1","status":"passed","time":{"start":1758534144550,"stop":1758534257286,"duration":112736}},{"uid":"2c794d6ab681918c","status":"passed","time":{"start":1758526353634,"stop":1758526477320,"duration":123686}},{"uid":"9d87390236eb036c","status":"passed","time":{"start":1758517867315,"stop":1758517978341,"duration":111026}},{"uid":"82badc0a4c31a42b","status":"passed","time":{"start":1758344714423,"stop":1758344837525,"duration":123102}},{"uid":"f3c99ebffc34b7b","status":"passed","time":{"start":1758335408673,"stop":1758335518819,"duration":110146}},{"uid":"fcfbbf1f4381346e","status":"failed","statusDetails":"assert 4 == 2\n +  where 4 = len(<snappi.snappi.Bgpv6MetricIter object at 0x7efef810c580>)\n +    where <snappi.snappi.Bgpv6MetricIter object at 0x7efef810c580> = <snappi.snappi.MetricsResponse object at 0x7efef8456e80>.bgpv6_metrics","time":{"start":1758318657548,"stop":1758318753399,"duration":95851}},{"uid":"29287ac3ca1e083e","status":"passed","time":{"start":1758284318408,"stop":1758284417626,"duration":99218}},{"uid":"9c22b0e5d202fc2","status":"passed","time":{"start":1758276810478,"stop":1758276918518,"duration":108040}},{"uid":"c89e370cf9b873f3","status":"passed","time":{"start":1758266026949,"stop":1758266126282,"duration":99333}},{"uid":"b196b1a3a0045e7f","status":"passed","time":{"start":1758256257749,"stop":1758256364488,"duration":106739}},{"uid":"4d7bccf525237dab","status":"passed","time":{"start":1758221452042,"stop":1758221553810,"duration":101768}},{"uid":"67b90f68ff848f11","status":"passed","time":{"start":1758211521335,"stop":1758211627660,"duration":106325}},{"uid":"144c875fa5e44422","status":"passed","time":{"start":1758203104632,"stop":1758203206628,"duration":101996}},{"uid":"ce909ce5c3d1c0ed","status":"passed","time":{"start":1758195412209,"stop":1758195522216,"duration":110007}},{"uid":"86667aa9795b61bb","status":"passed","time":{"start":1758187874145,"stop":1758187977759,"duration":103614}},{"uid":"dbeec2f40d91501c","status":"passed","time":{"start":1758119103099,"stop":1758119207018,"duration":103919}},{"uid":"8a7050c167ef98ab","status":"passed","time":{"start":1758089161716,"stop":1758089262178,"duration":100462}},{"uid":"f98fc8dd874bb720","status":"passed","time":{"start":1757655105546,"stop":1757655203941,"duration":98395}}]},"tags":[]},"source":"e2aee6ff1de98658.json","parameterValues":[]}