{"uid":"bea4dde9289625e9","name":"test_static_and_lacp_lag","historyId":"pytest:test_lag#test_static_and_lacp_lag","time":{"start":1746414762134,"stop":1746414812498,"duration":50364},"status":"failed","statusMessage":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 276, in set_config\n    self.config_ixnetwork(config)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 364, in config_ixnetwork\n    self.traffic_item.config()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 916, in config\n    ixn_traffic_item = self.get_ixn_config(self._config)[0]\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 574, in get_ixn_config\n    self._importconfig(imports)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 502, in _importconfig\n    raise SnappiIxnException(\n [{'xpath': '', 'message': 'Object reference not set to an instance of an object.', 'severity': 'kError', 'category': 'invalidCommit', 'property': 'noAtt'}, {'xpath': '', 'message': 'Object reference not set to an instance of an object.', 'severity': 'kError', 'category': 'invalidCommit', 'property': 'noAtt'}]","statusTrace":"self = <snappi_ixnetwork.snappi_api.Api object at 0x7f99c6897040>\nconfig = <snappi.snappi.Config object at 0x7f99c3f7f150>\n\n    def set_config(self, config):\n        \"\"\"Set or update the configuration\"\"\"\n        try:\n            if isinstance(config, (type(self._config_type), str)) is False:\n                raise TypeError(\n                    \"The content must be of type Union[Config, str]\"\n                )\n    \n            if isinstance(config, str) is True:\n                config = self._config_type.deserialize(config)\n>           self.config_ixnetwork(config)\n\nsnappi_ixnetwork/snappi_api.py:276: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsnappi_ixnetwork/snappi_api.py:364: in config_ixnetwork\n    self.traffic_item.config()\nsnappi_ixnetwork/trafficitem.py:916: in config\n    ixn_traffic_item = self.get_ixn_config(self._config)[0]\nsnappi_ixnetwork/trafficitem.py:574: in get_ixn_config\n    self._importconfig(imports)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <snappi_ixnetwork.trafficitem.TrafficItem object at 0x7f99c6bf39d0>\nimports = {'traffic': {'trafficItem': [{'configElement': [{'stack': [], 'xpath': '/traffic/trafficItem[1]/configElement[1]'}], '...c/trafficItem[2]/endpointSet[1]'}], 'name': 'f2', 'srcDestMesh': 'oneToOne', ...}], 'xpath': '/traffic'}, 'xpath': '/'}\n\n    def _importconfig(self, imports):\n        imports[\"xpath\"] = \"/\"\n        href = \"%sresourceManager\" % self._api._ixnetwork.href\n        url = \"%s/operations/importconfig\" % href\n        json_dump = json.dumps(imports)\n        self.logger.debug(\"import traffic config\")\n        self.logger.debug(\"{}\".format(json_dump))\n        payload = {\n            \"arg1\": href,\n            \"arg2\": json_dump,\n            \"arg3\": False,\n            \"arg4\": \"suppressNothing\",\n            \"arg5\": True,\n        }\n        try:\n            # TODO for larger config rest api is throwing error,\n            # with no url found, when the first response is 202 (in-progress)\n            # its keep checking the status of the url with 1 sec sleep, and\n            # after a while error is thrown. but could see the configuration\n            # applied at Ixnetwork. (Need to check with Eng team)\n            response = self._api._request(\"POST\", url=url, payload=payload)\n        except Exception:\n            return\n        self.logger.debug(str(response))\n        if (\n            response[\"result\"].get(\"errata\") is not None\n            and response[\"result\"][\"errata\"] != []\n        ):\n            self._api.get_json_import_errors()\n>           raise SnappiIxnException(\n                400, \"{}\".format(response[\"result\"][\"errata\"])\n            )\nE           snappi_ixnetwork.exceptions.SnappiIxnException:  [{'xpath': '', 'message': 'Object reference not set to an instance of an object.', 'severity': 'kError', 'category': 'invalidCommit', 'property': 'noAtt'}, {'xpath': '', 'message': 'Object reference not set to an instance of an object.', 'severity': 'kError', 'category': 'invalidCommit', 'property': 'noAtt'}]\n\nsnappi_ixnetwork/trafficitem.py:502: SnappiIxnException\n\nDuring handling of the above exception, another exception occurred:\n\napi = <snappi_ixnetwork.snappi_api.Api object at 0x7f99c6897040>\nutils = <module 'utils' from '/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/tests/utils/__init__.py'>\n\n    def test_static_and_lacp_lag(api, utils):\n        LACP_ATTR = {\n            \"ActorSystemId\": [\"00 22 03 00 00 03\", \"00 22 03 00 00 03\"],\n            \"ActorSystemPriority\": [\"1\", \"1\"],\n            \"ActorKey\": [\"10\", \"10\"],\n            \"ActorPortNumber\": [\"30\", \"40\"],\n            \"ActorPortPriority\": [\"100\", \"101\"],\n            \"LacpActivity\": [\"active\", \"passive\"],\n            \"LacpduPeriodicTimeInterval\": [\"5\", \"6\"],\n            \"LacpduTimeout\": [\"12\", \"13\"],\n        }\n    \n        config = api.config()\n        p1, p2, p3, p4 = (\n            config.ports.port(name=\"txp1\", location=utils.settings.ports[0])\n            .port(name=\"txp2\", location=utils.settings.ports[2])\n            .port(name=\"rxp1\", location=utils.settings.ports[1])\n            .port(name=\"rxp2\", location=utils.settings.ports[3])\n        )\n    \n        config.layer1.layer1(\n            name=\"layer1\",\n            port_names=[p.name for p in config.ports],\n            speed=utils.settings.speed,\n            media=utils.settings.media,\n        )\n    \n        lag1, lag2 = config.lags.lag(name=\"lag1\").lag(name=\"lag2\")\n        l1_p1, l1_p2 = lag1.ports.port(port_name=p1.name).port(port_name=p2.name)\n        l2_p1, l2_p2 = lag2.ports.port(port_name=p3.name).port(port_name=p4.name)\n        config.options.port_options.location_preemption = True\n    \n        lag1.protocol.static.lag_id = 5\n    \n        lag2.protocol.lacp.actor_system_id = \"00:22:03:00:00:03\"\n        lag2.protocol.lacp.actor_system_priority = int(\n            LACP_ATTR[\"ActorSystemPriority\"][0]\n        )\n        lag2.protocol.lacp.actor_key = int(LACP_ATTR[\"ActorKey\"][0])\n    \n        l2_p1.lacp.actor_port_number = int(LACP_ATTR[\"ActorPortNumber\"][0])\n        l2_p2.lacp.actor_port_number = int(LACP_ATTR[\"ActorPortNumber\"][1])\n    \n        l2_p1.lacp.actor_port_priority = int(LACP_ATTR[\"ActorPortPriority\"][0])\n        l2_p2.lacp.actor_port_priority = int(LACP_ATTR[\"ActorPortPriority\"][1])\n    \n        l2_p1.lacp.actor_activity = LACP_ATTR[\"LacpActivity\"][0]\n        l2_p2.lacp.actor_activity = LACP_ATTR[\"LacpActivity\"][1]\n    \n        l2_p1.lacp.lacpdu_periodic_time_interval = int(\n            LACP_ATTR[\"LacpduPeriodicTimeInterval\"][0]\n        )\n        l2_p2.lacp.lacpdu_periodic_time_interval = int(\n            LACP_ATTR[\"LacpduPeriodicTimeInterval\"][1]\n        )\n    \n        l2_p1.lacp.lacpdu_timeout = int(LACP_ATTR[\"LacpduTimeout\"][0])\n        l2_p2.lacp.lacpdu_timeout = int(LACP_ATTR[\"LacpduTimeout\"][1])\n    \n        l1_p1.ethernet.name, l1_p2.ethernet.name = \"eth1\", \"eth2\"\n        l2_p1.ethernet.name, l2_p2.ethernet.name = \"eth3\", \"eth4\"\n    \n        l1_p1.ethernet.mac = \"00:11:02:00:00:01\"\n        l1_p2.ethernet.mac = \"00:22:02:00:00:01\"\n        l2_p1.ethernet.mac = \"00:33:02:00:00:01\"\n        l2_p2.ethernet.mac = \"00:44:02:00:00:01\"\n    \n        l1_p1.ethernet.vlans.vlan(priority=1, name=\"vlan1\", id=1)[-1]\n        l1_p2.ethernet.vlans.vlan(priority=1, name=\"vlan2\", id=1)[-1]\n        l2_p1.ethernet.vlans.vlan(priority=1, name=\"vlan3\", id=1)[-1]\n        l2_p2.ethernet.vlans.vlan(priority=1, name=\"vlan4\", id=1)[-1]\n    \n        packets = 2000\n        f1_size = 74\n        f2_size = 1500\n        d1, d2 = config.devices.device(name=\"device1\").device(name=\"device2\")\n        eth1, eth2 = d1.ethernets.add(), d2.ethernets.add()\n        eth1.connection.port_name, eth2.connection.port_name = lag1.name, lag2.name\n        eth1.name, eth2.name = \"d_eth1\", \"d_eth2\"\n        eth1.mac, eth2.mac = \"00:00:00:00:00:11\", \"00:00:00:00:00:22\"\n        ip1, ip2 = eth1.ipv4_addresses.add(), eth2.ipv4_addresses.add()\n        ip1.name, ip2.name = \"ip1\", \"ip2\"\n        ip1.address = \"10.1.1.1\"\n        ip1.gateway = \"10.1.1.2\"\n        ip2.address = \"10.1.1.2\"\n        ip2.gateway = \"10.1.1.1\"\n        f1, f2 = config.flows.flow(name=\"f1\").flow(name=\"f2\")\n        f1.tx_rx.port.tx_name, f1.tx_rx.port.rx_name = p1.name, p2.name\n        f2.tx_rx.port.tx_name, f2.tx_rx.port.rx_name = p3.name, p4.name\n        f1.duration.fixed_packets.packets = packets\n        f2.duration.fixed_packets.packets = packets\n        f1.size.fixed = f1_size\n        f2.size.fixed = f2_size\n        f1.rate.percentage = 10\n        f2.rate.percentage = 10\n    \n>       api.set_config(config)\n\ntests/test_lag.py:372: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <snappi_ixnetwork.snappi_api.Api object at 0x7f99c6897040>\nconfig = <snappi.snappi.Config object at 0x7f99c3f7f150>\n\n    def set_config(self, config):\n        \"\"\"Set or update the configuration\"\"\"\n        try:\n            if isinstance(config, (type(self._config_type), str)) is False:\n                raise TypeError(\n                    \"The content must be of type Union[Config, str]\"\n                )\n    \n            if isinstance(config, str) is True:\n                config = self._config_type.deserialize(config)\n            self.config_ixnetwork(config)\n            # CP-DP Convergence config\n            ixn_cpdpconvergence = self._traffic.Statistics.CpdpConvergence\n            ixn_cpdpconvergence.Enabled = False\n            cfg = config.get(\"events\")\n            if cfg is not None:\n                cp_events = cfg.get(\"cp_events\")\n                if cp_events is not None:\n                    cp_events_enable = cp_events.get(\"enable\")\n                else:\n                    cp_events_enable = False\n                dp_events = cfg.get(\"dp_events\")\n                if dp_events is not None:\n                    dp_events_enable = dp_events.get(\"enable\")\n                    rx_rate_threshold = dp_events.get(\"rx_rate_threshold\")\n                else:\n                    dp_events_enable = False\n                # Enable cp-dp convergence if any one of cp or dp is true\n                if cp_events_enable or dp_events_enable:\n                    ixn_cpdpconvergence.Enabled = True\n                    # For CP events\n                    if cp_events_enable:\n                        ixn_cpdpconvergence.EnableControlPlaneEvents = True\n                    # For DP events\n                    if dp_events_enable:\n                        if self.traffic_item.has_latency is True:\n                            raise Exception(\n                                \"We are supporting either latency or dp convergence\"\n                            )\n                        ixn_cpdpconvergence.EnableDataPlaneEventsRateMonitor = True\n                        ixn_cpdpconvergence.DataPlaneThreshold = rx_rate_threshold\n    \n                for ixn_traffic_item in self._traffic_item.find():\n                    ixn_traffic_item.Tracking.find()[0].TrackBy = [\n                        \"destEndpoint0\",\n                        \"destSessionDescription0\",\n                    ]\n            else:\n                ixn_cpdpconvergence.Enabled = False\n    \n        except Exception as err:\n>           raise SnappiIxnException(err)\nE           snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 276, in set_config\nE               self.config_ixnetwork(config)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 364, in config_ixnetwork\nE               self.traffic_item.config()\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 916, in config\nE               ixn_traffic_item = self.get_ixn_config(self._config)[0]\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 574, in get_ixn_config\nE               self._importconfig(imports)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 502, in _importconfig\nE               raise SnappiIxnException(\nE            [{'xpath': '', 'message': 'Object reference not set to an instance of an object.', 'severity': 'kError', 'category': 'invalidCommit', 'property': 'noAtt'}, {'xpath': '', 'message': 'Object reference not set to an instance of an object.', 'severity': 'kError', 'category': 'invalidCommit', 'property': 'noAtt'}]\n\nsnappi_ixnetwork/snappi_api.py:317: SnappiIxnException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"--------------------------------- Captured Log ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Config validation 0.007s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Ports configuration 0.305s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Captures configuration 0.204s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Location hosts ready [novus1-715849.ccu.is.keysight.com] 0.095s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Speed change not require due to redundant Layer1 config","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Aggregation mode speed change 0.004s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Location configuration 0.965s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Layer1 configuration 7.660s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1440  kError invalidCommit LAG not correctly added","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1440  kError invalidCommit LAG not correctly added","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Lag Configuration 21.432s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Lag Ethernet Configuration 0.816s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Lag Protocol Configuration 15.793s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Convert device config : 0.550s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Create IxNetwork device config : 0.001s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Push IxNetwork device config : 0.380s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Devices configuration 1.042s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Flows configuration 0.886s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"--------------------------------- Captured Out ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":20,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"pytest"},{"name":"host","value":"snappi-ixn-ci-novus10g"},{"name":"testClass","value":"test_lag"},{"name":"package","value":"test_lag"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":1,"passed":106,"unknown":0,"total":115},"items":[{"uid":"cd7b3abb670c64ff","status":"passed","time":{"start":1746232601079,"stop":1746232626957,"duration":25878}},{"uid":"5228c576558fa005","status":"passed","time":{"start":1746224382039,"stop":1746224413376,"duration":31337}},{"uid":"9eea06337118d338","status":"passed","time":{"start":1746217344058,"stop":1746217375362,"duration":31304}},{"uid":"8d38950af74aa0d8","status":"passed","time":{"start":1746199805015,"stop":1746199836974,"duration":31959}},{"uid":"53154d52ffece810","status":"passed","time":{"start":1746181689995,"stop":1746181711902,"duration":21907}},{"uid":"aaf076219e336df7","status":"passed","time":{"start":1746174663641,"stop":1746174688203,"duration":24562}},{"uid":"cb26d8e986bec57d","status":"passed","time":{"start":1746117825457,"stop":1746117852595,"duration":27138}},{"uid":"b100aac8a949cdd1","status":"passed","time":{"start":1746098916418,"stop":1746098952921,"duration":36503}},{"uid":"3ad704b01b92bc13","status":"passed","time":{"start":1746064489784,"stop":1746064519395,"duration":29611}},{"uid":"7df3ec6f16360723","status":"skipped","statusDetails":"CI-Testing","time":{"start":1746042370552,"stop":1746042370552,"duration":0}},{"uid":"35519e26dddbe3ea","status":"passed","time":{"start":1746025407819,"stop":1746025432364,"duration":24545}},{"uid":"bc789c22d6a8715a","status":"passed","time":{"start":1746017351140,"stop":1746017384069,"duration":32929}},{"uid":"973041a36376e67f","status":"passed","time":{"start":1745951248306,"stop":1745951280118,"duration":31812}},{"uid":"594e8b95707f6e1","status":"passed","time":{"start":1745944306045,"stop":1745944337328,"duration":31283}},{"uid":"3b69e4c6a4428267","status":"passed","time":{"start":1745937122343,"stop":1745937155265,"duration":32922}},{"uid":"e799275bc8965b80","status":"passed","time":{"start":1745930256769,"stop":1745930287094,"duration":30325}},{"uid":"43c54ed838a054a4","status":"passed","time":{"start":1745921505820,"stop":1745921539056,"duration":33236}},{"uid":"9106bd2a97d93569","status":"passed","time":{"start":1745907259784,"stop":1745907283408,"duration":23624}},{"uid":"e7068033a625c730","status":"passed","time":{"start":1745902727011,"stop":1745902762797,"duration":35786}},{"uid":"a3c016def78cfbf9","status":"failed","statusDetails":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 276, in set_config\n    self.config_ixnetwork(config)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 364, in config_ixnetwork\n    self.traffic_item.config()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 879, in config\n    ixn_traffic_item = self.get_ixn_config(self._config)[0]\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 535, in get_ixn_config\n    tr = self.create_traffic(config)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 689, in create_traffic\n    for snappi_eotr in config.egress_only_tracking:\n 'Config' object has no attribute 'egress_only_tracking'","time":{"start":1745865135575,"stop":1745865153828,"duration":18253}}]},"tags":[]},"source":"bea4dde9289625e9.json","parameterValues":[]}