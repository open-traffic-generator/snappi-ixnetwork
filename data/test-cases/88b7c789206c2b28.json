{"uid":"88b7c789206c2b28","name":"test_vxlan_b2b_v6","historyId":"pytest:vxlan.test_vxlan_b2b_v6#test_vxlan_b2b_v6","time":{"start":1745687367675,"stop":1745687373137,"duration":5462},"status":"failed","statusMessage":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 276, in set_config\n    self.config_ixnetwork(config)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 364, in config_ixnetwork\n    self.traffic_item.config()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 880, in config\n    ixn_traffic_item = self.get_ixn_config(self._config)[0]\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 535, in get_ixn_config\n    tr = self.create_traffic(config)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 689, in create_traffic\n    for snappi_eotr in config.egress_only_tracking:\n 'Config' object has no attribute 'egress_only_tracking'","statusTrace":"self = <snappi_ixnetwork.snappi_api.Api object at 0x7f18aa6907f0>\nconfig = <snappi.snappi.Config object at 0x7f18a7d144f0>\n\n    def set_config(self, config):\n        \"\"\"Set or update the configuration\"\"\"\n        try:\n            if isinstance(config, (type(self._config_type), str)) is False:\n                raise TypeError(\n                    \"The content must be of type Union[Config, str]\"\n                )\n    \n            if isinstance(config, str) is True:\n                config = self._config_type.deserialize(config)\n>           self.config_ixnetwork(config)\n\nsnappi_ixnetwork/snappi_api.py:276: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsnappi_ixnetwork/snappi_api.py:364: in config_ixnetwork\n    self.traffic_item.config()\nsnappi_ixnetwork/trafficitem.py:880: in config\n    ixn_traffic_item = self.get_ixn_config(self._config)[0]\nsnappi_ixnetwork/trafficitem.py:535: in get_ixn_config\n    tr = self.create_traffic(config)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <snappi_ixnetwork.trafficitem.TrafficItem object at 0x7f18aa47f1f0>\nconfig = <snappi.snappi.Config object at 0x7f18a7d144f0>\n\n    def create_traffic(self, config):\n        self.logger.debug(\"Creating Traffic\")\n        flows = config.flows\n        tr = {\"xpath\": \"/traffic\", \"trafficItem\": []}\n        ports = self.get_ports_encap(config)\n        devices = self.get_device_info(config)\n        for index, flow in enumerate(flows):\n            flow_name = flow._properties.get(\"name\")\n            self.logger.debug(\"Creating Traffic Item %s\" % flow_name)\n            if flow_name is None:\n                raise Exception(\"name shall not be null for flows\")\n            if flow._properties.get(\"tx_rx\") is None:\n                msg = (\n                    \"Please configure the flow endpoint\"\n                    \"for flow indexed at %s\" % index\n                )\n                raise Exception(msg)\n            self._endpoint_validation(flow)\n            if flow.tx_rx.choice is None:\n                msg = \"Flow endpoint needs to be either port or device\"\n                raise Exception(msg)\n    \n            tr_xpath = \"/traffic/trafficItem[%d]\" % self.traffic_index\n            tr[\"trafficItem\"].append(\n                {\n                    \"xpath\": tr_xpath,\n                    \"name\": \"%s\" % flow.name,\n                    \"srcDestMesh\": self._get_mesh_type(flow),\n                }\n            )\n    \n            tr[\"trafficItem\"][-1][\"endpointSet\"] = [\n                {\n                    \"xpath\": tr[\"trafficItem\"][-1][\"xpath\"]\n                    + \"/endpointSet[1]\",\n                }\n            ]\n            if flow.tx_rx.choice == \"port\":\n                tr_type = \"raw\"\n                ep = getattr(flow.tx_rx, \"port\")\n                tx_objs = [\"%s/protocols\" % ports.get(ep.tx_name)]\n                rx_objs = [\"%s/protocols\" % ports.get(ep.rx_name)]\n                tr[\"trafficItem\"][-1][\"endpointSet\"][0][\"sources\"] = [\n                    o for o in tx_objs\n                ]\n                tr[\"trafficItem\"][-1][\"endpointSet\"][0][\"destinations\"] = [\n                    o for o in rx_objs\n                ]\n            else:\n                ep = getattr(flow.tx_rx, \"device\")\n                tr_type = devices[ep.tx_names[0]][\"type\"]\n                source = []\n                destinations = []\n                scalable_sources = []\n                scalable_destinations = []\n                self._gen_dev_endpoint(\n                    devices, ep.tx_names, source, scalable_sources\n                )\n                self._gen_dev_endpoint(\n                    devices, ep.rx_names, destinations, scalable_destinations\n                )\n                if len(source) > 0:\n                    tr[\"trafficItem\"][-1][\"endpointSet\"][0][\"sources\"] = source\n                if len(destinations) > 0:\n                    tr[\"trafficItem\"][-1][\"endpointSet\"][0][\n                        \"destinations\"\n                    ] = destinations\n                if len(scalable_sources) > 0:\n                    tr[\"trafficItem\"][-1][\"endpointSet\"][0][\n                        \"scalableSources\"\n                    ] = scalable_sources\n                if len(scalable_destinations) > 0:\n                    tr[\"trafficItem\"][-1][\"endpointSet\"][0][\n                        \"scalableDestinations\"\n                    ] = scalable_destinations\n    \n            tr[\"trafficItem\"][-1][\"trafficType\"] = tr_type\n            if tr_type == \"raw\":\n                tr[\"trafficItem\"][-1][\"configElement\"] = self.config_raw_stack(\n                    tr_xpath, self._flows_packet[index]\n                )\n            self.traffic_index += 1\n            self.logger.debug(\n                \"Flow %s converted to %s\" % (flow_name, tr[\"trafficItem\"][-1])\n            )\n    \n        # egress only tracking\n        tr[\"egressOnlyTracking\"] = []\n>       for snappi_eotr in config.egress_only_tracking:\nE       AttributeError: 'Config' object has no attribute 'egress_only_tracking'\n\nsnappi_ixnetwork/trafficitem.py:689: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\napi = <snappi_ixnetwork.snappi_api.Api object at 0x7f18aa6907f0>\nutils = <module 'utils' from '/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/tests/utils/__init__.py'>\n\n    def test_vxlan_b2b_v6(api, utils):\n        config = api.config()\n    \n        p1, p2 = config.ports.port(\n            name=\"tx\", location=utils.settings.ports[0]\n        ).port(name=\"rx\", location=utils.settings.ports[1])\n    \n        d1, d2 = config.devices.device(name=\"d1\").device(name=\"d2\")\n    \n        e1, e2 = d1.ethernets.add(), d2.ethernets.add()\n        e1.connection.port_name, e2.connection.port_name = p1.name, p2.name\n        e1.name, e2.name = \"e1\", \"e2\"\n        e1.mac, e2.mac = \"00:01:00:00:00:01\", \"00:01:00:00:00:02\"\n    \n        ip1, ip2 = e1.ipv6_addresses.add(), e2.ipv6_addresses.add()\n        ip1.name, ip2.name = \"ip_d1\", \"ip_d2\"\n    \n        ip1.address, ip2.address = \"2001::1\", \"2001::2\"\n        ip1.gateway, ip2.gateway = \"2001::2\", \"2001::1\"\n    \n        bgp1, bgp2 = d1.bgp, d2.bgp\n        bgp1.router_id, bgp2.router_id = \"10.10.10.1\", \"10.10.10.2\"\n        bgp1_ipv6 = bgp1.ipv6_interfaces.add()\n        bgp2_ipv6 = bgp2.ipv6_interfaces.add()\n    \n        bgp1_ipv6.ipv6_name, bgp2_ipv6.ipv6_name = ip1.name, ip2.name\n        bgp1_peer, bgp2_peer = bgp1_ipv6.peers.add(), bgp2_ipv6.peers.add()\n        bgp1_peer.name, bgp2_peer.name = \"bgp_router1\", \"bgp_router2\"\n    \n        bgp1_peer.peer_address, bgp2_peer.peer_address = \"2001::2\", \"2001::1\"\n        bgp1_peer.as_type, bgp2_peer.as_type = \"ebgp\", \"ebgp\"\n        bgp1_peer.as_number, bgp2_peer.as_number = 100, 200\n    \n        # Create & advertise loopback under bgp in d1 & d2\n        d1_l1 = d1.ipv6_loopbacks.add()\n        d1_l1.name = \"d1_loopback1\"\n        d1_l1.eth_name = \"e1\"\n        d1_l1.address = \"3000::1\"\n    \n        bgp1_l1 = bgp1_peer.v6_routes.add(name=\"bgp_l1\")\n        bgp1_l1.addresses.add(address=\"3000::1\", prefix=32)\n    \n        d2_l1 = d2.ipv6_loopbacks.add()\n        d2_l1.name = \"d2_loopback1\"\n        d2_l1.eth_name = \"e2\"\n        d2_l1.address = \"4000::2\"\n    \n        bgp2_l1 = bgp2_peer.v6_routes.add(name=\"bgp2_l1\")\n        bgp2_l1.addresses.add(address=\"4000::2\", prefix=32)\n    \n        # Create vxlan on d1\n        d1_vxlan = d1.vxlan.v6_tunnels.add()\n    \n        d1_vxlan.vni = 1000\n        d1_vxlan.source_interface = d1_l1.name\n        d1_vxlan.name = \"d1_vxlan\"\n    \n        # unicast communication\n        vtep = d1_vxlan.destination_ip_mode.unicast.vteps.add()\n        vtep.remote_vtep_address = \"4000::2\"\n        vtep.arp_suppression_cache.add(\"00:16:01:00:00:01\", \"5001::2\")\n    \n        # Create vxlan on d2\n        d2_vxlan = d2.vxlan.v6_tunnels.add()\n    \n        d2_vxlan.vni = 1000\n        d2_vxlan.source_interface = d2_l1.name\n        d2_vxlan.name = \"d2_vxlan\"\n    \n        # unicast communication\n        vtep = d2_vxlan.destination_ip_mode.unicast.vteps.add()\n        vtep.remote_vtep_address = \"3000::1\"\n        vtep.arp_suppression_cache.add(\"00:18:01:00:00:01\", \"5001::1\")\n    \n        # create two edge devices to communicate over vxlan\n        edge_d1 = config.devices.device(name=\"edge_d1\")[-1]\n        edge_d2 = config.devices.device(name=\"edge_d2\")[-1]\n    \n        edge_e1 = edge_d1.ethernets.ethernet()[-1]\n        edge_e2 = edge_d2.ethernets.ethernet()[-1]\n    \n        edge_e1.connection.vxlan_name = d1_vxlan.name\n        edge_e2.connection.vxlan_name = d2_vxlan.name\n    \n        # edge_e1.connection.port_name = p1.name\n        # edge_e2.connection.port_name = p2.name\n    \n        edge_e1.name, edge_e2.name = \"edge_e1\", \"edge_e2\"\n        edge_e1.mac, edge_e2.mac = \"00:18:01:00:00:01\", \"00:16:01:00:00:01\"\n    \n        edge_ip1 = edge_e1.ipv6_addresses.add()\n        edge_ip2 = edge_e2.ipv6_addresses.add()\n    \n        edge_ip1.name, edge_ip2.name = \"edge_ip_d1\", \"edge_ip_d2\"\n    \n        edge_ip1.address, edge_ip2.address = \"5001::1\", \"5001::2\"\n        edge_ip1.gateway, edge_ip2.gateway = \"5001::2\", \"5001::1\"\n    \n        edge_bgp1, edge_bgp2 = edge_d1.bgp, edge_d2.bgp\n        edge_bgp1.router_id, edge_bgp2.router_id = \"100.1.1.1\", \"100.1.1.2\"\n    \n        edge_bgp1_ipv6 = edge_bgp1.ipv6_interfaces.add()\n        edge_bgp2_ipv6 = edge_bgp2.ipv6_interfaces.add()\n    \n        edge_bgp1_ipv6.ipv6_name = edge_ip1.name\n        edge_bgp2_ipv6.ipv6_name = edge_ip2.name\n    \n        edge_bgp1_peer = edge_bgp1_ipv6.peers.add()\n        edge_bgp2_peer = edge_bgp2_ipv6.peers.add()\n    \n        edge_bgp1_peer.name, edge_bgp2_peer.name = \"edge_bgp1\", \"edge_bgp2\"\n    \n        edge_bgp1_peer.peer_address = \"5001::2\"\n        edge_bgp2_peer.peer_address = \"5001::1\"\n    \n        edge_bgp1_peer.as_type, edge_bgp2_peer.as_type = \"ibgp\", \"ibgp\"\n        edge_bgp1_peer.as_number, edge_bgp2_peer.as_number = 1000, 1000\n    \n        edge_bgp1_rr = edge_bgp1_peer.v6_routes.add(name=\"A1\")\n        edge_bgp1_rr.addresses.add(address=\"1000::1\", prefix=32)\n    \n        edge_bgp2_rr = edge_bgp2_peer.v6_routes.add(name=\"A2\")\n        edge_bgp2_rr.addresses.add(address=\"1001::1\", prefix=32)\n    \n        flow = config.flows.flow(name=\"f1\")[-1]\n        flow.tx_rx.device.tx_names = [edge_bgp1_rr.name]\n        flow.tx_rx.device.rx_names = [edge_bgp2_rr.name]\n    \n        flow.duration.fixed_packets.packets = 100\n    \n        flow.metrics.enable = True\n        flow.metrics.loss = True\n    \n>       utils.start_traffic(api, config, start_capture=False)\n\ntests/vxlan/test_vxlan_b2b_v6.py:136: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/utils/common.py:126: in start_traffic\n    api.set_config(cfg)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <snappi_ixnetwork.snappi_api.Api object at 0x7f18aa6907f0>\nconfig = <snappi.snappi.Config object at 0x7f18a7d144f0>\n\n    def set_config(self, config):\n        \"\"\"Set or update the configuration\"\"\"\n        try:\n            if isinstance(config, (type(self._config_type), str)) is False:\n                raise TypeError(\n                    \"The content must be of type Union[Config, str]\"\n                )\n    \n            if isinstance(config, str) is True:\n                config = self._config_type.deserialize(config)\n            self.config_ixnetwork(config)\n            # CP-DP Convergence config\n            ixn_cpdpconvergence = self._traffic.Statistics.CpdpConvergence\n            ixn_cpdpconvergence.Enabled = False\n            cfg = config.get(\"events\")\n            if cfg is not None:\n                cp_events = cfg.get(\"cp_events\")\n                if cp_events is not None:\n                    cp_events_enable = cp_events.get(\"enable\")\n                else:\n                    cp_events_enable = False\n                dp_events = cfg.get(\"dp_events\")\n                if dp_events is not None:\n                    dp_events_enable = dp_events.get(\"enable\")\n                    rx_rate_threshold = dp_events.get(\"rx_rate_threshold\")\n                else:\n                    dp_events_enable = False\n                # Enable cp-dp convergence if any one of cp or dp is true\n                if cp_events_enable or dp_events_enable:\n                    ixn_cpdpconvergence.Enabled = True\n                    # For CP events\n                    if cp_events_enable:\n                        ixn_cpdpconvergence.EnableControlPlaneEvents = True\n                    # For DP events\n                    if dp_events_enable:\n                        if self.traffic_item.has_latency is True:\n                            raise Exception(\n                                \"We are supporting either latency or dp convergence\"\n                            )\n                        ixn_cpdpconvergence.EnableDataPlaneEventsRateMonitor = True\n                        ixn_cpdpconvergence.DataPlaneThreshold = rx_rate_threshold\n    \n                for ixn_traffic_item in self._traffic_item.find():\n                    ixn_traffic_item.Tracking.find()[0].TrackBy = [\n                        \"destEndpoint0\",\n                        \"destSessionDescription0\",\n                    ]\n            else:\n                ixn_cpdpconvergence.Enabled = False\n    \n        except Exception as err:\n>           raise SnappiIxnException(err)\nE           snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 276, in set_config\nE               self.config_ixnetwork(config)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 364, in config_ixnetwork\nE               self.traffic_item.config()\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 880, in config\nE               ixn_traffic_item = self.get_ixn_config(self._config)[0]\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 535, in get_ixn_config\nE               tr = self.create_traffic(config)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 689, in create_traffic\nE               for snappi_eotr in config.egress_only_tracking:\nE            'Config' object has no attribute 'egress_only_tracking'\n\nsnappi_ixnetwork/snappi_api.py:317: SnappiIxnException","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"--------------------------------- Captured Log ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1424 Config validation 0.009s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1424 Ports configuration 0.353s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1424 Captures configuration 0.195s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1424 Location hosts ready [novus1-715849.ccu.is.keysight.com] 0.096s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1424 Aggregation mode speed change 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1424 Location configuration 0.758s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1424 Layer1 configuration 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1424 Lag Configuration 0.090s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1424 Convert device config : 0.628s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1424 Create IxNetwork device config : 0.001s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1430 /topology[1]/deviceGroup[1]/deviceGroup[1]/ethernet[1]/ipv6[1]/vxlanv6[1]/vxlanIPv6StaticInfo[1] kWarning invalidJsonProperty remoteVmStaticMac","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1430 /topology[1]/deviceGroup[1]/deviceGroup[1]/ethernet[1]/ipv6[1]/vxlanv6[1]/vxlanIPv6StaticInfo[1] kWarning invalidJsonProperty remoteVmStaticIpv4","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1430 /topology[2]/deviceGroup[1]/deviceGroup[1]/ethernet[1]/ipv6[1]/vxlanv6[1]/vxlanIPv6StaticInfo[1] kWarning invalidJsonProperty remoteVmStaticMac","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1430 /topology[2]/deviceGroup[1]/deviceGroup[1]/ethernet[1]/ipv6[1]/vxlanv6[1]/vxlanIPv6StaticInfo[1] kWarning invalidJsonProperty remoteVmStaticIpv4","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1430 /multivalue[@source = '/topology[1]/deviceGroup[1]/deviceGroup[1]/ethernet[1]/ipv6[1]/vxlanv6[1]/vxlanIPv6StaticInfo[1] remoteVmStaticMac'] kWarning invalidXpath Unable to find SDMMeta.AttInfo for attribute name remoteVmStaticMac","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1430 /multivalue[@source = '/topology[1]/deviceGroup[1]/deviceGroup[1]/ethernet[1]/ipv6[1]/vxlanv6[1]/vxlanIPv6StaticInfo[1] remoteVmStaticIpv4'] kWarning invalidXpath Unable to find SDMMeta.AttInfo for attribute name remoteVmStaticIpv4","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1430 /multivalue[@source = '/topology[2]/deviceGroup[1]/deviceGroup[1]/ethernet[1]/ipv6[1]/vxlanv6[1]/vxlanIPv6StaticInfo[1] remoteVmStaticMac'] kWarning invalidXpath Unable to find SDMMeta.AttInfo for attribute name remoteVmStaticMac","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1430 /multivalue[@source = '/topology[2]/deviceGroup[1]/deviceGroup[1]/ethernet[1]/ipv6[1]/vxlanv6[1]/vxlanIPv6StaticInfo[1] remoteVmStaticIpv4'] kWarning invalidXpath Unable to find SDMMeta.AttInfo for attribute name remoteVmStaticIpv4","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1430 /multivalue[@source = '/topology[1]/deviceGroup[1]/deviceGroup[1]/ethernet[1]/ipv6[1]/vxlanv6[1]/vxlanIPv6StaticInfo[1] remoteVmStaticMac']/singleValue kWarning invalidXpath Unable to find SDMMeta.AttInfo for attribute name remoteVmStaticMac","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1430 /multivalue[@source = '/topology[1]/deviceGroup[1]/deviceGroup[1]/ethernet[1]/ipv6[1]/vxlanv6[1]/vxlanIPv6StaticInfo[1] remoteVmStaticIpv4']/singleValue kWarning invalidXpath Unable to find SDMMeta.AttInfo for attribute name remoteVmStaticIpv4","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1430 /multivalue[@source = '/topology[2]/deviceGroup[1]/deviceGroup[1]/ethernet[1]/ipv6[1]/vxlanv6[1]/vxlanIPv6StaticInfo[1] remoteVmStaticMac']/singleValue kWarning invalidXpath Unable to find SDMMeta.AttInfo for attribute name remoteVmStaticMac","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1430 /multivalue[@source = '/topology[2]/deviceGroup[1]/deviceGroup[1]/ethernet[1]/ipv6[1]/vxlanv6[1]/vxlanIPv6StaticInfo[1] remoteVmStaticIpv4']/singleValue kWarning invalidXpath Unable to find SDMMeta.AttInfo for attribute name remoteVmStaticIpv4","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1424 Push IxNetwork device config : 1.482s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1424 Devices configuration 2.200s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1424 Flows configuration 0.446s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"--------------------------------- Captured Out ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":27,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"pytest"},{"name":"host","value":"snappi-ixn-ci-novus10g"},{"name":"testClass","value":"vxlan.test_vxlan_b2b_v6"},{"name":"package","value":"vxlan.test_vxlan_b2b_v6"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":11,"broken":0,"skipped":0,"passed":76,"unknown":0,"total":87},"items":[{"uid":"3ac9f7b1f1ab25eb","status":"passed","time":{"start":1745474974403,"stop":1745475039659,"duration":65256}},{"uid":"3b868e05ff257f8f","status":"passed","time":{"start":1745302321831,"stop":1745302384825,"duration":62994}},{"uid":"7d1354b34febd9a8","status":"failed","statusDetails":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 276, in set_config\n    self.config_ixnetwork(config)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 364, in config_ixnetwork\n    self.traffic_item.config()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 867, in config\n    ixn_traffic_item = self.get_ixn_config(self._config)[0]\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 534, in get_ixn_config\n    tr = self.create_traffic(config)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 688, in create_traffic\n    for snappi_eotr in config.egress_only_trackings:\n 'Config' object has no attribute 'egress_only_trackings'","time":{"start":1744642070405,"stop":1744642075709,"duration":5304}},{"uid":"7ed40cf64ee1265b","status":"passed","time":{"start":1744628606357,"stop":1744628673227,"duration":66870}},{"uid":"9216142331f8ea74","status":"passed","time":{"start":1744607503134,"stop":1744607567903,"duration":64769}},{"uid":"251b11c604778170","status":"passed","time":{"start":1744319569642,"stop":1744319631003,"duration":61361}},{"uid":"9f153d5cde354a0f","status":"passed","time":{"start":1744308828836,"stop":1744308895383,"duration":66547}},{"uid":"1d41d856a5226cdc","status":"passed","time":{"start":1744118178111,"stop":1744118246872,"duration":68761}},{"uid":"dee2b3cf8f3f04bd","status":"passed","time":{"start":1744106575909,"stop":1744106637905,"duration":61996}},{"uid":"c0f400f09af40f1d","status":"failed","statusDetails":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 450, in set_control_state\n    self.traffic_item.transmit(request_payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 1353, in transmit\n    self._rocev2._configureTrafficParameters(rocev2_traffic, stateful_flow, options)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/device/rocev2.py\", line 292, in _configureTrafficParameters\n    trafficPortConfigs = rocev2_traffic.RoceV2PortConfig.find()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/traffic/rocev2traffic/rocev2portconfig/rocev2portconfig.py\", line 229, in find\n    return self._select(self._map_locals(self._SDM_ATT_MAP, locals()))\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 548, in _select\n    end = len(self._parent.href)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 158, in href\n    return self._get_attribute(\"href\")\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 218, in _get_attribute\n    raise NotFoundError(msg)\n Failed to get the RoceV2Traffic.href property as the RoceV2Traffic object has no encapsulated resources. Either the RoceV2Traffic.find() method was not called or it failed to retrieve any resources from the server.","time":{"start":1743796899201,"stop":1743796929956,"duration":30755}},{"uid":"c1df83ed645b2a6e","status":"passed","time":{"start":1743756339018,"stop":1743756406195,"duration":67177}},{"uid":"b3dd13e7c1eb7ff3","status":"passed","time":{"start":1743749241780,"stop":1743749308313,"duration":66533}},{"uid":"4560df9cfd1a73e","status":"failed","statusDetails":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 442, in set_control_state\n    self.ngpf.set_protocol_state(request_payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/device/ngpf.py\", line 256, in set_protocol_state\n    self.api._ixnetwork.StartAllProtocols(\"sync\")\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/ixnetwork.py\", line 2862, in StartAllProtocols\n    return self._execute(\"startAllProtocols\", payload=payload, response_object=None)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 452, in _execute\n    response = self._connection._execute(url, payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 289, in _execute\n    return self._send_recv(\"POST\", url, payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 572, in _send_recv\n    return self._poll()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 640, in _poll\n    return self._process_response_status_code(\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 476, in _process_response_status_code\n    raise BadRequestError(message, response.status_code)\n  Failure message received from Interface Manager on port novus1-715849.ccu.is.keysight.com;1;1: unknown-error - Could not load plugin cpf: static ixePlugin* ixePlugin::LoadPlugin(const string&, const string&): dlopen: /usr/lib/ixe/plugins/libcpf.so: undefined symbol: _ZNK7DataSeq8IMPlugin33localTimestampMilliImplementationEv.","time":{"start":1743703353732,"stop":1743703364318,"duration":10586}},{"uid":"1a6b777acb724032","status":"passed","time":{"start":1743696488928,"stop":1743696554508,"duration":65580}},{"uid":"13fa09cdf4489f58","status":"passed","time":{"start":1743689614468,"stop":1743689684225,"duration":69757}},{"uid":"2a2b6d3795d67f17","status":"passed","time":{"start":1743655642521,"stop":1743655708904,"duration":66383}},{"uid":"430ce0f232e23872","status":"failed","statusDetails":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 450, in set_control_state\n    self.traffic_item.transmit(request_payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 1354, in transmit\n    self._rocev2._configureTrafficParameters(rocev2_traffic, stateful_flow, options)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/device/rocev2.py\", line 292, in _configureTrafficParameters\n    trafficPortConfigs = rocev2_traffic.RoceV2PortConfig.find()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/traffic/rocev2traffic/rocev2portconfig/rocev2portconfig.py\", line 229, in find\n    return self._select(self._map_locals(self._SDM_ATT_MAP, locals()))\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 548, in _select\n    end = len(self._parent.href)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 158, in href\n    return self._get_attribute(\"href\")\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 218, in _get_attribute\n    raise NotFoundError(msg)\n Failed to get the RoceV2Traffic.href property as the RoceV2Traffic object has no encapsulated resources. Either the RoceV2Traffic.find() method was not called or it failed to retrieve any resources from the server.","time":{"start":1743167009876,"stop":1743167041755,"duration":31879}},{"uid":"3038481b7fa3799","status":"failed","statusDetails":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 450, in set_control_state\n    self.traffic_item.transmit(request_payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 1354, in transmit\n    self._rocev2._configureTrafficParameters(rocev2_traffic, stateful_flow, options)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/device/rocev2.py\", line 298, in _configureTrafficParameters\n    trafficPortConfigs = rocev2_traffic.RoceV2PortConfig.find()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/traffic/rocev2traffic/rocev2portconfig/rocev2portconfig.py\", line 229, in find\n    return self._select(self._map_locals(self._SDM_ATT_MAP, locals()))\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 548, in _select\n    end = len(self._parent.href)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 158, in href\n    return self._get_attribute(\"href\")\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 218, in _get_attribute\n    raise NotFoundError(msg)\n Failed to get the RoceV2Traffic.href property as the RoceV2Traffic object has no encapsulated resources. Either the RoceV2Traffic.find() method was not called or it failed to retrieve any resources from the server.","time":{"start":1743158796170,"stop":1743158826805,"duration":30635}},{"uid":"dc6aa99ae04a4b67","status":"failed","statusDetails":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 450, in set_control_state\n    self.traffic_item.transmit(request_payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 1344, in transmit\n    self._rocev2._configureTrafficParameters(rocev2_traffic, stateful_flow, options)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/device/rocev2.py\", line 298, in _configureTrafficParameters\n    trafficPortConfigs = rocev2_traffic.RoceV2PortConfig.find()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/traffic/rocev2traffic/rocev2portconfig/rocev2portconfig.py\", line 229, in find\n    return self._select(self._map_locals(self._SDM_ATT_MAP, locals()))\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 548, in _select\n    end = len(self._parent.href)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 158, in href\n    return self._get_attribute(\"href\")\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 218, in _get_attribute\n    raise NotFoundError(msg)\n Failed to get the RoceV2Traffic.href property as the RoceV2Traffic object has no encapsulated resources. Either the RoceV2Traffic.find() method was not called or it failed to retrieve any resources from the server.","time":{"start":1743154377859,"stop":1743154407409,"duration":29550}},{"uid":"9c961c4bc57806e8","status":"passed","time":{"start":1743142356248,"stop":1743142423000,"duration":66752}}]},"tags":[]},"source":"88b7c789206c2b28.json","parameterValues":[]}