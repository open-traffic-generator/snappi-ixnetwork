{"uid":"94a13c79a742a23e","name":"test_mka_stats","historyId":"pytest:mka.test_mka_stats#test_mka_stats","time":{"start":1754630978584,"stop":1754631046164,"duration":67580},"status":"failed","statusMessage":"assert 2 == 1\n +  where 2 = len(<snappi.snappi.MkaMetricIter object at 0x7f33a9899900>)\n +    where <snappi.snappi.MkaMetricIter object at 0x7f33a9899900> = <snappi.snappi.MetricsResponse object at 0x7f33a95d3150>.mka_metrics","statusTrace":"api = <snappi_ixnetwork.snappi_api.Api object at 0x7f33ad54a410>\nb2b_raw_config = <snappi.snappi.Config object at 0x7f33a9611300>\nutils = <module 'utils' from '/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/tests/utils/__init__.py'>\n\n    def test_mka_stats(api, b2b_raw_config, utils):\n        \"\"\"\n        Test for the mka configuration\n        \"\"\"\n        api.set_config(api.config())\n        b2b_raw_config.flows.clear()\n    \n        p1, p2 = b2b_raw_config.ports\n        d1, d2 = b2b_raw_config.devices.device(name=\"mka_dev1\").device(name=\"mka_dev2\")\n    \n        eth1, eth2 = d1.ethernets.add(), d2.ethernets.add()\n        eth1.connection.port_name, eth2.connection.port_name = p1.name, p2.name\n        eth1.mac, eth2.mac = \"00:00:00:00:00:11\", \"00:00:00:00:00:22\"\n        eth1.name, eth2.name = \"eth1\", \"eth2\"\n    \n        # MACsec\n        macsec1, macsec2 = d1.macsec, d2.macsec\n        macsec1_int, macsec2_int = macsec1.ethernet_interfaces.add(), macsec2.ethernet_interfaces.add()\n        macsec1_int.eth_name, macsec2_int.eth_name = eth1.name, eth2.name\n        secy1, secy2 = macsec1_int.secure_entity, macsec2_int.secure_entity\n        secy1.name, secy2.name = \"macsec1\", \"macsec2\"\n    \n        # Data plane\n        secy1.data_plane.choice = secy2.data_plane.choice = \"no_encapsulation\"\n    \n        # MKA\n        secy1_key_gen_proto, secy2_key_gen_proto = secy1.key_generation_protocol, secy2.key_generation_protocol\n        secy1_key_gen_proto.choice = secy2_key_gen_proto.choice = \"mka\"\n        kay1, kay2 = secy1_key_gen_proto.mka, secy2_key_gen_proto.mka\n        kay1.name, kay2.name = \"mka1\", \"mka2\"\n    \n        # Basic properties\n        kay1.basic.key_derivation_function = kay2.basic.key_derivation_function = \"aes_cmac_128\"\n    \n        kay1.basic.psk_chain_start_time.choice = kay2.basic.psk_chain_start_time.choice = \"utc\"\n        kay1_psk_chain_start_time = kay1.basic.psk_chain_start_time.utc\n        kay2_psk_chain_start_time = kay2.basic.psk_chain_start_time.utc\n    \n        kay1_psk_chain_start_time.day = kay2_psk_chain_start_time.day = 6\n        kay1_psk_chain_start_time.month = kay2_psk_chain_start_time.month = 5\n        kay1_psk_chain_start_time.year = kay2_psk_chain_start_time.year = 2025\n        kay1_psk_chain_start_time.hour = kay2_psk_chain_start_time.hour = 7\n        kay1_psk_chain_start_time.minute = kay2_psk_chain_start_time.minute = 10\n        kay1_psk_chain_start_time.second = kay2_psk_chain_start_time.second = 56\n    \n        # Key source: PSK\n        kay1_key_src, kay2_key_src = kay1.basic.key_source, kay2.basic.key_source\n        kay1_key_src.choice = kay2_key_src.choice = \"psk\"\n        kay1_psk_chain, kay2_psk_chain = kay1_key_src.psks, kay2_key_src.psks\n    \n        # PSK 1\n        kay1_psk1, kay2_psk1 = kay1_psk_chain.add(), kay2_psk_chain.add()\n        kay1_psk1.cak_name = kay2_psk1.cak_name = \"0xF123456789ABCDEF0123456789ABCDEFF123456789ABCDEF0123456789ABCD01\"\n        kay1_psk1.cak_value = kay2_psk1.cak_value = \"0xF123456789ABCDEF0123456789ABCD01\"\n    \n        kay1_psk1.start_offset_time.hh = kay2_psk1.start_offset_time.hh = 0\n        kay1_psk1.start_offset_time.mm = kay2_psk1.start_offset_time.mm = 0\n    \n        kay1_psk1.end_offset_time.hh = kay2_psk1.end_offset_time.hh = 0\n        kay1_psk1.end_offset_time.hh = kay2_psk1.end_offset_time.hh = 10\n    \n        # PSK 2\n        kay1_psk2, kay2_psk2 = kay1_psk_chain.add(), kay2_psk_chain.add()\n        kay1_psk2.cak_name = kay2_psk2.cak_name = \"0xF123456789ABCDEF0123456789ABCDEFF123456789ABCDEF0123456789ABCD02\"\n        kay1_psk2.cak_value = kay2_psk2.cak_value = \"0xF123456789ABCDEF0123456789ABCD02\"\n    \n        kay1_psk2.start_offset_time.hh = kay2_psk2.start_offset_time.hh = 0\n        kay1_psk2.start_offset_time.mm = kay2_psk2.start_offset_time.mm = 9\n    \n        kay1_psk2.end_offset_time.hh = kay2_psk2.end_offset_time.hh = 0\n        kay1_psk2.end_offset_time.mm = kay2_psk2.end_offset_time.mm = 0\n    \n        # Rekey mode\n        kay1_rekey_mode, kay2_rekey_mode = kay1.basic.rekey_mode, kay2.basic.rekey_mode\n        kay1_rekey_mode.choice = kay2_rekey_mode.choice = \"timer_based\"\n        kay1_rekey_timer_based, kay2_rekey_timer_based = kay1_rekey_mode.timer_based, kay2_rekey_mode.timer_based\n        kay1_rekey_timer_based.choice = kay2_rekey_timer_based.choice = \"fixed_count\"\n        kay1_rekey_timer_based.fixed_count = kay2_rekey_timer_based.fixed_count = 20\n        kay1_rekey_timer_based.interval = kay2_rekey_timer_based.interval = 200\n    \n        # Remaining basic properties autofilled\n    \n        # Tx SC\n        kay1_tx, kay2_tx = kay1.tx, kay2.tx\n        kay1_txsc1, kay2_txsc1 = kay1_tx.secure_channels.add(), kay2_tx.secure_channels.add()\n        kay1_txsc1.name, kay2_txsc1.name = \"txsc1\", \"txsc2\"\n        kay1_txsc1.system_id, kay2_txsc1.system_id = eth1.mac, eth2.mac\n        # Remaining Tx SC settings autofilled\n    \n        utils.start_traffic(api, b2b_raw_config)\n        utils.wait_for(\n            lambda: results_ok(api), \"stats to be as expected\", timeout_seconds=10\n        )\n        enums = [\n            \"mkpdu_tx\",\n            \"mkpdu_rx\",\n            \"live_peer_count\",\n            \"potential_peer_count\",\n            \"latest_key_tx_peer_count\",\n            \"latest_key_rx_peer_count\",\n            \"malformed_mkpdu\",\n            \"icv_mismatch\",\n        ]\n        expected_results = {\n            \"mka_dev1\": [0, 0, 0, 0, 0, 0, 0, 0],\n            \"mka_dev2\": [0, 0, 0, 0, 0, 0, 0, 0],\n        }\n        req = api.metrics_request()\n        req.mka.peer_names = [\"mka_dev1\"]\n        results = api.get_metrics(req)\n>       assert len(results.mka_metrics) == 1\nE       assert 2 == 1\nE        +  where 2 = len(<snappi.snappi.MkaMetricIter object at 0x7f33a9899900>)\nE        +    where <snappi.snappi.MkaMetricIter object at 0x7f33a9899900> = <snappi.snappi.MetricsResponse object at 0x7f33a95d3150>.mka_metrics\n\ntests/mka/test_mka_stats.py:116: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"--------------------------------- Captured Log ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1518 tx connectedLinkDown","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1518 rx connectedLinkDown","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"--------------------------------- Captured Out ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"pytest"},{"name":"host","value":"snappi-ixn-ci-novus10g"},{"name":"testClass","value":"mka.test_mka_stats"},{"name":"package","value":"mka.test_mka_stats"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":96,"broken":0,"skipped":1,"passed":68,"unknown":0,"total":165},"items":[{"uid":"68e0d1413b25f854","status":"passed","time":{"start":1754558943969,"stop":1754559025333,"duration":81364}},{"uid":"1d551032a7f65b80","status":"failed","statusDetails":"assert 2 == 1\n +  where 2 = len(<snappi.snappi.MkaMetricIter object at 0x7fa9bc09ac80>)\n +    where <snappi.snappi.MkaMetricIter object at 0x7fa9bc09ac80> = <snappi.snappi.MetricsResponse object at 0x7fa9bb1ca7a0>.mka_metrics","time":{"start":1754546458930,"stop":1754546532981,"duration":74051}},{"uid":"1d2e011240f5e8ee","status":"passed","time":{"start":1754506043870,"stop":1754506126708,"duration":82838}},{"uid":"81c99c4c69380a61","status":"passed","time":{"start":1754497549774,"stop":1754497630100,"duration":80326}},{"uid":"7a5a03f325ce8af","status":"passed","time":{"start":1754464142327,"stop":1754464221377,"duration":79050}},{"uid":"65192e97d7f269ca","status":"passed","time":{"start":1754456730779,"stop":1754456810227,"duration":79448}},{"uid":"72bfcfe58354f7db","status":"passed","time":{"start":1754377059323,"stop":1754377135122,"duration":75799}},{"uid":"b5877031654f742a","status":"passed","time":{"start":1754345071017,"stop":1754345152876,"duration":81859}},{"uid":"b20396cd1ebdb87b","status":"passed","time":{"start":1754337190110,"stop":1754337269141,"duration":79031}},{"uid":"4ae2bf1af7c0aff2","status":"failed","statusDetails":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 463, in set_control_state\n    self.ngpf.set_protocol_state(request_payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/device/ngpf.py\", line 276, in set_protocol_state\n    self.api._ixnetwork.StartAllProtocols(\"sync\")\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/ixnetwork.py\", line 2640, in StartAllProtocols\n    return self._execute(\"startAllProtocols\", payload=payload, response_object=None)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 452, in _execute\n    response = self._connection._execute(url, payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 293, in _execute\n    return self._send_recv(\"POST\", url, payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 576, in _send_recv\n    return self._poll()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 644, in _poll\n    return self._process_response_status_code(\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 480, in _process_response_status_code\n    raise BadRequestError(message, response.status_code)\n  System Exception Caught. Exception Text: There is no license available for IxN-SMACsec. Please check license availability in Ixia License Utility.\nPlease install \"930-2135: IXIA IxNetwork, Optional Software, Static MACSec Emulation\" to enable the feature.\nThere is no license available for IxN-SMACsec. Please check license availability in Ixia License Utility.\nPlease install \"930-2135: IXIA IxNetwork, Optional Software, Static MACSec Emulation\" to enable the feature.\n\nSystem Exception Caught. Exception Text: There is no license available for IxN-SMACsec. Please check license availability in Ixia License Utility.\nPlease install \"930-2135: IXIA IxNetwork, Optional Software, Static MACSec Emulation\" to enable the feature.\nThere is no license available for IxN-SMACsec. Please check license availability in Ixia License Utility.\nPlease install \"930-2135: IXIA IxNetwork, Optional Software, Static MACSec Emulation\" to enable the feature.","time":{"start":1754285457133,"stop":1754285568085,"duration":110952}},{"uid":"2d550c3c120504e5","status":"failed","statusDetails":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 463, in set_control_state\n    self.ngpf.set_protocol_state(request_payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/device/ngpf.py\", line 266, in set_protocol_state\n    self.api._ixnetwork.StartAllProtocols(\"sync\")\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/ixnetwork.py\", line 2640, in StartAllProtocols\n    return self._execute(\"startAllProtocols\", payload=payload, response_object=None)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 452, in _execute\n    response = self._connection._execute(url, payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 293, in _execute\n    return self._send_recv(\"POST\", url, payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 576, in _send_recv\n    return self._poll()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 644, in _poll\n    return self._process_response_status_code(\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 480, in _process_response_status_code\n    raise BadRequestError(message, response.status_code)\n  System Exception Caught. Exception Text: There is no license available for IxN-SMACsec. Please check license availability in Ixia License Utility.\nPlease install \"930-2135: IXIA IxNetwork, Optional Software, Static MACSec Emulation\" to enable the feature.\nThere is no license available for IxN-SMACsec. Please check license availability in Ixia License Utility.\nPlease install \"930-2135: IXIA IxNetwork, Optional Software, Static MACSec Emulation\" to enable the feature.\n\nSystem Exception Caught. Exception Text: There is no license available for IxN-SMACsec. Please check license availability in Ixia License Utility.\nPlease install \"930-2135: IXIA IxNetwork, Optional Software, Static MACSec Emulation\" to enable the feature.\nThere is no license available for IxN-SMACsec. Please check license availability in Ixia License Utility.\nPlease install \"930-2135: IXIA IxNetwork, Optional Software, Static MACSec Emulation\" to enable the feature.","time":{"start":1754037821403,"stop":1754037937986,"duration":116583}},{"uid":"7316ebd9d58dc09d","status":"failed","statusDetails":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 463, in set_control_state\n    self.ngpf.set_protocol_state(request_payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/device/ngpf.py\", line 266, in set_protocol_state\n    self.api._ixnetwork.StartAllProtocols(\"sync\")\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/ixnetwork.py\", line 2640, in StartAllProtocols\n    return self._execute(\"startAllProtocols\", payload=payload, response_object=None)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 452, in _execute\n    response = self._connection._execute(url, payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 293, in _execute\n    return self._send_recv(\"POST\", url, payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 576, in _send_recv\n    return self._poll()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 644, in _poll\n    return self._process_response_status_code(\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 480, in _process_response_status_code\n    raise BadRequestError(message, response.status_code)\n  System Exception Caught. Exception Text: There is no license available for IxN-SMACsec. Please check license availability in Ixia License Utility.\nPlease install \"930-2135: IXIA IxNetwork, Optional Software, Static MACSec Emulation\" to enable the feature.\nThere is no license available for IxN-SMACsec. Please check license availability in Ixia License Utility.\nPlease install \"930-2135: IXIA IxNetwork, Optional Software, Static MACSec Emulation\" to enable the feature.\n\nSystem Exception Caught. Exception Text: There is no license available for IxN-SMACsec. Please check license availability in Ixia License Utility.\nPlease install \"930-2135: IXIA IxNetwork, Optional Software, Static MACSec Emulation\" to enable the feature.\nThere is no license available for IxN-SMACsec. Please check license availability in Ixia License Utility.\nPlease install \"930-2135: IXIA IxNetwork, Optional Software, Static MACSec Emulation\" to enable the feature.","time":{"start":1754025412828,"stop":1754025527745,"duration":114917}},{"uid":"a9d569b9d4d17b2c","status":"failed","statusDetails":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 458, in set_control_state\n    self.ngpf.set_protocol_state(request_payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/device/ngpf.py\", line 274, in set_protocol_state\n    self.api._ixnetwork.StartAllProtocols(\"sync\")\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/ixnetwork.py\", line 2640, in StartAllProtocols\n    return self._execute(\"startAllProtocols\", payload=payload, response_object=None)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 452, in _execute\n    response = self._connection._execute(url, payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 293, in _execute\n    return self._send_recv(\"POST\", url, payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 576, in _send_recv\n    return self._poll()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 644, in _poll\n    return self._process_response_status_code(\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 480, in _process_response_status_code\n    raise BadRequestError(message, response.status_code)\n  System Exception Caught. Exception Text: There is no license available for IxN-SMACsec. Please check license availability in Ixia License Utility.\nPlease install \"930-2135: IXIA IxNetwork, Optional Software, Static MACSec Emulation\" to enable the feature.\nThere is no license available for IxN-SMACsec. Please check license availability in Ixia License Utility.\nPlease install \"930-2135: IXIA IxNetwork, Optional Software, Static MACSec Emulation\" to enable the feature.\n\nSystem Exception Caught. Exception Text: There is no license available for IxN-SMACsec. Please check license availability in Ixia License Utility.\nPlease install \"930-2135: IXIA IxNetwork, Optional Software, Static MACSec Emulation\" to enable the feature.\nThere is no license available for IxN-SMACsec. Please check license availability in Ixia License Utility.\nPlease install \"930-2135: IXIA IxNetwork, Optional Software, Static MACSec Emulation\" to enable the feature.","time":{"start":1754000569227,"stop":1754000681455,"duration":112228}},{"uid":"9e0e6d80a57f8df0","status":"failed","statusDetails":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 463, in set_control_state\n    self.ngpf.set_protocol_state(request_payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/device/ngpf.py\", line 266, in set_protocol_state\n    self.api._ixnetwork.StartAllProtocols(\"sync\")\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/ixnetwork.py\", line 2640, in StartAllProtocols\n    return self._execute(\"startAllProtocols\", payload=payload, response_object=None)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 452, in _execute\n    response = self._connection._execute(url, payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 293, in _execute\n    return self._send_recv(\"POST\", url, payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 576, in _send_recv\n    return self._poll()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 644, in _poll\n    return self._process_response_status_code(\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 480, in _process_response_status_code\n    raise BadRequestError(message, response.status_code)\n  System Exception Caught. Exception Text: There is no license available for IxN-SMACsec. Please check license availability in Ixia License Utility.\nPlease install \"930-2135: IXIA IxNetwork, Optional Software, Static MACSec Emulation\" to enable the feature.\nThere is no license available for IxN-SMACsec. Please check license availability in Ixia License Utility.\nPlease install \"930-2135: IXIA IxNetwork, Optional Software, Static MACSec Emulation\" to enable the feature.\n\nSystem Exception Caught. Exception Text: There is no license available for IxN-SMACsec. Please check license availability in Ixia License Utility.\nPlease install \"930-2135: IXIA IxNetwork, Optional Software, Static MACSec Emulation\" to enable the feature.\nThere is no license available for IxN-SMACsec. Please check license availability in Ixia License Utility.\nPlease install \"930-2135: IXIA IxNetwork, Optional Software, Static MACSec Emulation\" to enable the feature.","time":{"start":1753965242171,"stop":1753965350912,"duration":108741}},{"uid":"166b8c7b14e86b7b","status":"failed","statusDetails":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 463, in set_control_state\n    self.ngpf.set_protocol_state(request_payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/device/ngpf.py\", line 266, in set_protocol_state\n    self.api._ixnetwork.StartAllProtocols(\"sync\")\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/ixnetwork.py\", line 2640, in StartAllProtocols\n    return self._execute(\"startAllProtocols\", payload=payload, response_object=None)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 452, in _execute\n    response = self._connection._execute(url, payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 293, in _execute\n    return self._send_recv(\"POST\", url, payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 576, in _send_recv\n    return self._poll()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 644, in _poll\n    return self._process_response_status_code(\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 480, in _process_response_status_code\n    raise BadRequestError(message, response.status_code)\n  System Exception Caught. Exception Text: There is no license available for IxN-SMACsec. Please check license availability in Ixia License Utility.\nPlease install \"930-2135: IXIA IxNetwork, Optional Software, Static MACSec Emulation\" to enable the feature.\nThere is no license available for IxN-SMACsec. Please check license availability in Ixia License Utility.\nPlease install \"930-2135: IXIA IxNetwork, Optional Software, Static MACSec Emulation\" to enable the feature.\n\nSystem Exception Caught. Exception Text: There is no license available for IxN-SMACsec. Please check license availability in Ixia License Utility.\nPlease install \"930-2135: IXIA IxNetwork, Optional Software, Static MACSec Emulation\" to enable the feature.\nThere is no license available for IxN-SMACsec. Please check license availability in Ixia License Utility.\nPlease install \"930-2135: IXIA IxNetwork, Optional Software, Static MACSec Emulation\" to enable the feature.","time":{"start":1753390964676,"stop":1753391078501,"duration":113825}},{"uid":"22de0082b571c7c4","status":"failed","statusDetails":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 283, in set_config\n    self.config_ixnetwork(config)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 362, in config_ixnetwork\n    self._connect()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 1007, in _connect\n    platform = TestPlatform(self._address, rest_port=self._port)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/testplatform.py\", line 80, in __init__\n    self._connection = Connection(\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 151, in __init__\n    self._scheme = self._determine_test_tool_platform(platform)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 220, in _determine_test_tool_platform\n    raise ConnectionError(\n Unable to connect to novus1-715849.ccu.is.keysight.com. Check the ip address and consider the rest_port parameter.","time":{"start":1753368506584,"stop":1753368506621,"duration":37}},{"uid":"d9b263b08b82c50d","status":"passed","time":{"start":1752836398951,"stop":1752836480711,"duration":81760}},{"uid":"aa4825bc8782e7f0","status":"passed","time":{"start":1752760243902,"stop":1752760321270,"duration":77368}},{"uid":"2868e65effc0d3d0","status":"passed","time":{"start":1752244885705,"stop":1752244959599,"duration":73894}},{"uid":"3dd4d25de22d1c20","status":"passed","time":{"start":1752145840252,"stop":1752145924823,"duration":84571}}]},"tags":[]},"source":"94a13c79a742a23e.json","parameterValues":[]}