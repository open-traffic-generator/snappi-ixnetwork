{"uid":"273aa9b3fb6e49b0","name":"test_combined_filters","historyId":"pytest:capture.test_combined_capture_filters#test_combined_filters","time":{"start":1740754522073,"stop":1740754590677,"duration":68604},"status":"failed","statusMessage":"Exception: Time out occurred while waiting for stats to be as expected","statusTrace":"api = <snappi_ixnetwork.snappi_api.Api object at 0x7fa78a44a800>\nsettings = <utils.common.Settings object at 0x7fa78a9d1ea0>\nutils = <module 'utils' from '/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/tests/utils/__init__.py'>\n\n    def test_combined_filters(api, settings, utils):\n        \"\"\"\n        This test applies ethernet and vlan capture filters and verifies correct capture results\n        \"\"\"\n        packets = 4\n        config = api.config()\n        p1, p2 = config.ports.port(\n            name=\"p1\", location=utils.settings.ports[0]\n        ).port(name=\"p2\", location=utils.settings.ports[1])\n        cap = config.captures.capture(name=\"capture1\")[-1]\n        cap.port_names = [p2.name]\n        cap.format = cap.PCAPNG\n        cap.overwrite = False\n        eth_filter, vlan_filter = cap.filters.ethernet().vlan()\n    \n        eth_filter.src.value = \"0000ff000000\"\n        eth_filter.src.mask = \"000000000000\"\n        eth_filter.src.negate = False\n        eth_filter.dst.value = \"000806020000\"\n        eth_filter.dst.mask = \"000000000000\"\n        eth_filter.dst.negate = False\n    \n        vlan_filter.id.value = \"0006\"\n        vlan_filter.id.mask = \"F000\"\n        vlan_filter.id.negate = False\n        vlan_filter.priority.value = \"07\"\n        vlan_filter.priority.mask = \"07\"\n        vlan_filter.priority.negate = True\n    \n        (f1,) = config.flows.flow(name=\"f1\")\n        f1.tx_rx.port.tx_name = p1.name\n        f1.tx_rx.port.rx_name = p2.name\n        f1.metrics.enable = True\n        f1.size.fixed = 128\n        f1.rate.pps = 1000\n        f1.duration.fixed_packets.packets = 4\n        eth, vlan = f1.packet.ethernet().vlan()\n        eth.src.values = [\n            \"00:00:ff:00:00:00\",\n            \"00:00:ff:00:00:00\",\n            \"00:00:11:00:00:00\",\n            \"00:00:ff:00:00:00\",\n        ]\n        eth.dst.values = [\n            \"00:00:07:08:00:00\",\n            \"00:00:44:00:00:00\",\n            \"00:00:09:00:00:00\",\n            \"00:08:06:02:00:00\",\n        ]\n        vlan.priority.values = [1, 2, 3, 7]\n        vlan.cfi.values = [0, 1, 0, 1]\n        vlan.id.values = [5, 3, 1, 6]\n    \n        utils.start_traffic(api, config, start_capture=True)\n>       utils.wait_for(\n            lambda: results_ok(api, [\"f1\"], packets),\n            \"stats to be as expected\",\n            timeout_seconds=10,\n        )\n\ntests/capture/test_combined_capture_filters.py:60: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nfunc = <function test_combined_filters.<locals>.<lambda> at 0x7fa789d85000>\ncondition_str = 'stats to be as expected', interval_seconds = 0.5\ntimeout_seconds = 10\n\n    def wait_for(func, condition_str, interval_seconds=None, timeout_seconds=None):\n        \"\"\"\n        Keeps calling the `func` until it returns true or `timeout_seconds` occurs\n        every `interval_seconds`. `condition_str` should be a constant string\n        implying the actual condition being tested.\n        Usage\n        -----\n        If we wanted to poll for current seconds to be divisible by `n`, we would\n        implement something similar to following:\n        ```\n        import time\n        def wait_for_seconds(n, **kwargs):\n            condition_str = 'seconds to be divisible by %d' % n\n            def condition_satisfied():\n                return int(time.time()) % n == 0\n            poll_until(condition_satisfied, condition_str, **kwargs)\n        ```\n        \"\"\"\n        if interval_seconds is None:\n            interval_seconds = settings.interval_seconds\n        if timeout_seconds is None:\n            timeout_seconds = settings.timeout_seconds\n        start_seconds = int(time.time())\n    \n        print(\"\\n\\nWaiting for %s ...\" % condition_str)\n        while True:\n            res = func()\n            if res:\n                print(\"Done waiting for %s\" % condition_str)\n                break\n            if res is None:\n                raise Exception(\"Wait aborted for %s\" % condition_str)\n            if timed_out(start_seconds, timeout_seconds):\n                msg = \"Time out occurred while waiting for %s\" % condition_str\n>               raise Exception(msg)\nE               Exception: Time out occurred while waiting for stats to be as expected\n\ntests/utils/common.py:224: Exception","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"--------------------------------- Captured Log ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1407 Config validation 0.007s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1407 Ports configuration 3.671s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1407 Captures configuration 0.350s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1407 Location hosts ready [novus1-715849.ccu.is.keysight.com] 2.092s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1407 Aggregation mode speed change 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1407 Location connect [p1, p2] 19.745s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1407 Location state check [p1, p2] 0.278s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1407 Location configuration 26.689s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1407 Layer1 configuration 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1407 Lag Configuration 0.081s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1407 Convert device config : 0.260s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1407 Create IxNetwork device config : 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1407 Push IxNetwork device config : 0.081s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1407 Devices configuration 0.428s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1407 Flows configuration 1.610s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1407 Start interfaces 0.245s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1407 IxNet - The Traffic Item was modified. Please perform a Traffic Generate to update the associated traffic Flow Groups","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1407 Captures start 1.439s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1407 Flows generate/apply 2.223s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1407 Flows clear statistics 12.239s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1407 Captures start 0.569s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1407 Flows start 4.444s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"--------------------------------- Captured Out ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":24,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"pytest"},{"name":"host","value":"snappi-ixn-ci-novus10g"},{"name":"testClass","value":"capture.test_combined_capture_filters"},{"name":"package","value":"capture.test_combined_capture_filters"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":37,"unknown":0,"total":38},"items":[{"uid":"5c08eb3aabdf15f1","status":"passed","time":{"start":1740744573760,"stop":1740744809504,"duration":235744}},{"uid":"26a6d9a6804fe9cd","status":"passed","time":{"start":1740671731335,"stop":1740671957961,"duration":226626}},{"uid":"e55ad7f7440c8a77","status":"passed","time":{"start":1740664925192,"stop":1740665156167,"duration":230975}},{"uid":"baf3f617828468dc","status":"passed","time":{"start":1740652499661,"stop":1740652726662,"duration":227001}},{"uid":"b8a11614a0f6ebc5","status":"passed","time":{"start":1740645397455,"stop":1740645629108,"duration":231653}},{"uid":"a96770490ea27497","status":"passed","time":{"start":1740487950975,"stop":1740488178749,"duration":227774}},{"uid":"ea494ca465874f0","status":"passed","time":{"start":1740481290567,"stop":1740481515783,"duration":225216}},{"uid":"4bf5517fbb973740","status":"passed","time":{"start":1740397671135,"stop":1740397902763,"duration":231628}},{"uid":"9078e7b98213495d","status":"passed","time":{"start":1740390857826,"stop":1740391088430,"duration":230604}},{"uid":"b8a28d7ef907ef64","status":"passed","time":{"start":1740165875812,"stop":1740166102937,"duration":227125}},{"uid":"8eae72ee48c0128b","status":"passed","time":{"start":1740159164915,"stop":1740159394895,"duration":229980}},{"uid":"233919b04b11ac","status":"passed","time":{"start":1740148718781,"stop":1740148944856,"duration":226075}},{"uid":"baf16fc5794abe6b","status":"passed","time":{"start":1740141333535,"stop":1740141560891,"duration":227356}},{"uid":"a8b9f8ac89f0ddd8","status":"passed","time":{"start":1740050757017,"stop":1740050984876,"duration":227859}},{"uid":"36ae7153272731","status":"passed","time":{"start":1740044059903,"stop":1740044284935,"duration":225032}},{"uid":"c0c95c70612961e4","status":"passed","time":{"start":1739973488769,"stop":1739973716673,"duration":227904}},{"uid":"9bb49718404691c7","status":"passed","time":{"start":1739953282917,"stop":1739953511259,"duration":228342}},{"uid":"f521029ca958a2d1","status":"passed","time":{"start":1739892194451,"stop":1739892422684,"duration":228233}},{"uid":"95b800452d2a2d45","status":"passed","time":{"start":1739885428297,"stop":1739885657342,"duration":229045}},{"uid":"bb79a3bb95c8ee46","status":"passed","time":{"start":1739878646362,"stop":1739878872406,"duration":226044}}]},"tags":[]},"source":"273aa9b3fb6e49b0.json","parameterValues":[]}