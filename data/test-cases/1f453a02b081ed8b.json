{"uid":"1f453a02b081ed8b","name":"test_vxlan_compact","historyId":"pytest:vxlan.test_vxlan_compact#test_vxlan_compact","time":{"start":1746098916418,"stop":1746098922142,"duration":5724},"status":"failed","statusMessage":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 276, in set_config\n    self.config_ixnetwork(config)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 363, in config_ixnetwork\n    self.ngpf.config()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/device/ngpf.py\", line 69, in config\n    self._configure_topology()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/device/ngpf.py\", line 110, in _configure_topology\n    self.api._remove(self.api._topology, [])\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 1158, in _remove\n    ixn_obj.remove()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/topology/topology_9d0fe0bb2c064aa7010adbdb6cf68958.py\", line 250, in remove\n    self._delete()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 441, in _delete\n    raise e\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 438, in _delete\n    self._connection._delete(url)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 286, in _delete\n    return self._send_recv(\"DELETE\", url, payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 596, in _send_recv\n    self._process_response_status_code(url, headers, response)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 476, in _process_response_status_code\n    raise BadRequestError(message, response.status_code)\n Unable to delete /topology:1 Topology tx: Removing a Topology from a started Topology is not permitted.\n\tCurrent Server Errors/Warnings:\n\t05/02/2025 00:12:18 [ERROR] [Topology tx: Removing a Topology from a started Topology is not permitted.] \n\t05/02/2025 00:07:59 [WARNING] [Traffic Generate required] The Traffic Item was modified. Please perform a Traffic Generate to update the associated traffic Flow Groups\n\t05/02/2025 00:12:13 [WARNING] [Regenerate Traffic Item Required] The Traffic Item configuration has changed and it needs to be regenerated before applying it to the Ixia hardware\n\t05/02/2025 00:11:41 [WARNING] [Frames Size Adjusted] The frame size was increased to 156 bytes to accommodate encapsulation requirements.  - The frame size was adjusted to conform to the encapsulation requirements","statusTrace":"self = <snappi_ixnetwork.snappi_api.Api object at 0x7fdc7afbbfa0>\nconfig = <snappi.snappi.Config object at 0x7fdc762c8400>\n\n    def set_config(self, config):\n        \"\"\"Set or update the configuration\"\"\"\n        try:\n            if isinstance(config, (type(self._config_type), str)) is False:\n                raise TypeError(\n                    \"The content must be of type Union[Config, str]\"\n                )\n    \n            if isinstance(config, str) is True:\n                config = self._config_type.deserialize(config)\n>           self.config_ixnetwork(config)\n\nsnappi_ixnetwork/snappi_api.py:276: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsnappi_ixnetwork/snappi_api.py:363: in config_ixnetwork\n    self.ngpf.config()\nsnappi_ixnetwork/device/ngpf.py:69: in config\n    self._configure_topology()\nsnappi_ixnetwork/device/ngpf.py:110: in _configure_topology\n    self.api._remove(self.api._topology, [])\nsnappi_ixnetwork/snappi_api.py:1158: in _remove\n    ixn_obj.remove()\n.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/topology/topology_9d0fe0bb2c064aa7010adbdb6cf68958.py:250: in remove\n    self._delete()\n.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py:441: in _delete\n    raise e\n.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py:438: in _delete\n    self._connection._delete(url)\n.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py:286: in _delete\n    return self._send_recv(\"DELETE\", url, payload)\n.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py:596: in _send_recv\n    self._process_response_status_code(url, headers, response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ixnetwork_restpy.connection.Connection object at 0x7fdc7b0a1090>\nurl = 'https://novus1-715849.ccu.is.keysight.com:443/api/v1/sessions/26/ixnetwork/globals/appErrors/error'\nheaders = {'Connection': 'keep-alive', 'Content-Type': 'application/json', 'User-Agent': 'ixnetwork-restpy', 'X-Api-Key': '72b147e77ad34d9b95881a58620960f6', ...}\nresponse = <Response [400]>, async_status = False\n\n    def _process_response_status_code(self, url, headers, response, async_status=False):\n        errors = []\n        # add the initial error\n        if async_status is True:\n            async_status = response.json()\n            if (\n                \"message\" in async_status\n                and async_status[\"message\"] is not None\n                and \"API CONTENTION\" in async_status[\"message\"]\n            ):\n                response.status_code = 409\n            else:\n                response.status_code = 400\n            error = \"\"\n            if \"message\" in async_status and async_status[\"message\"] is not None:\n                error += \" \" + async_status[\"message\"]\n            if \"result\" in async_status and async_status[\"result\"] is not None:\n                error += \" \" + async_status[\"result\"]\n            errors.append(error)\n        else:\n            try:\n                for error in response.json()[\"errors\"]:\n                    errors.append(error[\"detail\"])\n            except:\n                errors.append(response.text)\n        # add any /globals/appErrors/error items\n        try:\n            preamble = url[\n                0 : url.find(\"/\", url.find(\"/sessions/\") + len(\"/sessions/\"))\n            ]\n            url = preamble + \"/ixnetwork/globals/appErrors/error\"\n            self._print_request(\"GET\", url)\n            error_response = self._session.request(\n                \"GET\",\n                url,\n                headers=headers,\n                verify=self._verify_cert,\n                allow_redirects=False,\n            )\n            server_info = \"\\tCurrent Server Errors/Warnings:\"\n            for error in error_response.json():\n                if error[\"errorLevel\"] in [\"kError\", \"kWarning\"]:\n                    if server_info is not None:\n                        errors.append(server_info)\n                        server_info = None\n                    errors.append(\n                        \"\\t%s [%s] [%s] %s\"\n                        % (\n                            error[\"lastModified\"],\n                            error[\"errorLevel\"][1:].upper(),\n                            error[\"name\"],\n                            error[\"description\"],\n                        )\n                    )\n        except:\n            pass\n        # raise the appropriate error\n        message = \"\\n\".join(errors)\n        logging.getLogger(__name__).debug(message)\n        if response.status_code == 400:\n>           raise BadRequestError(message, response.status_code)\nE           ixnetwork_restpy.errors.BadRequestError: Unable to delete /topology:1 Topology tx: Removing a Topology from a started Topology is not permitted.\nE           \tCurrent Server Errors/Warnings:\nE           \t05/02/2025 00:12:18 [ERROR] [Topology tx: Removing a Topology from a started Topology is not permitted.] \nE           \t05/02/2025 00:07:59 [WARNING] [Traffic Generate required] The Traffic Item was modified. Please perform a Traffic Generate to update the associated traffic Flow Groups\nE           \t05/02/2025 00:12:13 [WARNING] [Regenerate Traffic Item Required] The Traffic Item configuration has changed and it needs to be regenerated before applying it to the Ixia hardware\nE           \t05/02/2025 00:11:41 [WARNING] [Frames Size Adjusted] The frame size was increased to 156 bytes to accommodate encapsulation requirements.  - The frame size was adjusted to conform to the encapsulation requirements\n\n.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py:476: BadRequestError\n\nDuring handling of the above exception, another exception occurred:\n\napi = <snappi_ixnetwork.snappi_api.Api object at 0x7fdc7afbbfa0>\nutils = <module 'utils' from '/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/tests/utils/__init__.py'>\n\n    def test_vxlan_compact(api, utils):\n        count = 4\n        config = api.config()\n    \n        edge1_macs = get_macs(\"001801000011\", count)\n        edge2_macs = get_macs(\"001601000011\", count)\n    \n        p1, p2 = config.ports.port(\n            name=\"tx\", location=utils.settings.ports[0]\n        ).port(name=\"rx\", location=utils.settings.ports[1])\n    \n        d1, d2 = config.devices.device(name=\"d1\").device(name=\"d2\")\n    \n        api.enable_scaling(True)\n    \n        e1, e2 = d1.ethernets.add(), d2.ethernets.add()\n        e1.connection.port_name, e2.connection.port_name = p1.name, p2.name\n        e1.name, e2.name = \"e1\", \"e2\"\n        e1.mac, e2.mac = \"00:01:00:00:00:01\", \"00:01:00:00:00:02\"\n    \n        ip1, ip2 = e1.ipv4_addresses.add(), e2.ipv4_addresses.add()\n        ip1.name, ip2.name = \"ip_d1\", \"ip_d2\"\n    \n        ip1.address, ip2.address = \"10.10.10.1\", \"10.10.10.2\"\n        ip1.gateway, ip2.gateway = \"10.10.10.2\", \"10.10.10.1\"\n    \n        bgp1, bgp2 = d1.bgp, d2.bgp\n        bgp1.router_id, bgp2.router_id = \"10.10.10.1\", \"10.10.10.2\"\n        bgp1_ipv4 = bgp1.ipv4_interfaces.add()\n        bgp2_ipv4 = bgp2.ipv4_interfaces.add()\n    \n        bgp1_ipv4.ipv4_name, bgp2_ipv4.ipv4_name = ip1.name, ip2.name\n        bgp1_peer, bgp2_peer = bgp1_ipv4.peers.add(), bgp2_ipv4.peers.add()\n        bgp1_peer.name, bgp2_peer.name = \"bgp_router1\", \"bgp_router2\"\n    \n        bgp1_peer.peer_address, bgp2_peer.peer_address = \"10.10.10.2\", \"10.10.10.1\"\n        bgp1_peer.as_type, bgp2_peer.as_type = \"ebgp\", \"ebgp\"\n        bgp1_peer.as_number, bgp2_peer.as_number = 100, 200\n    \n        # Create & advertise loopback under bgp in d1 & d2\n        d1_l1 = d1.ipv4_loopbacks.add()\n        d1_l1.name = \"d1_loopback1\"\n        d1_l1.eth_name = \"e1\"\n        d1_l1.address = \"1.1.1.1\"\n    \n        bgp1_l1 = bgp1_peer.v4_routes.add(name=\"bgp_l1\")\n        bgp1_l1.addresses.add(address=\"1.1.1.1\", prefix=32)\n    \n        d2_l1 = d2.ipv4_loopbacks.add()\n        d2_l1.name = \"d2_loopback1\"\n        d2_l1.eth_name = \"e2\"\n        d2_l1.address = \"2.2.2.2\"\n    \n        bgp2_l1 = bgp2_peer.v4_routes.add(name=\"bgp2_l1\")\n        bgp2_l1.addresses.add(address=\"2.2.2.2\", prefix=32)\n    \n        # Create vxlan on d1\n        d1_vxlan = d1.vxlan.v4_tunnels.add()\n    \n        d1_vxlan.vni = 1000\n        d1_vxlan.source_interface = d1_l1.name\n        d1_vxlan.name = \"d1_vxlan\"\n    \n        # unicast communication\n        vtep = d1_vxlan.destination_ip_mode.unicast.vteps.add()\n        vtep.remote_vtep_address = \"2.2.2.2\"\n        for i in range(1, count + 1):\n            vtep.arp_suppression_cache.add(edge2_macs[i], \"100.1.{}.2\".format(i))\n    \n        # Create vxlan on d2\n        d2_vxlan = d2.vxlan.v4_tunnels.add()\n    \n        d2_vxlan.vni = 1000\n        d2_vxlan.source_interface = d2_l1.name\n        d2_vxlan.name = \"d2_vxlan\"\n    \n        # unicast communication\n        vtep = d2_vxlan.destination_ip_mode.unicast.vteps.add()\n        vtep.remote_vtep_address = \"1.1.1.1\"\n        for i in range(1, count + 1):\n            vtep.arp_suppression_cache.add(edge1_macs[i], \"100.1.{}.1\".format(i))\n    \n        for i in range(1, count + 1):\n            edge1_d = config.devices.device(name=\"edge1_d{}\".format(i))[-1]\n            edge2_d = config.devices.device(name=\"edge2_d{}\".format(i))[-1]\n    \n            edge1_e = edge1_d.ethernets.ethernet()[-1]\n            edge2_e = edge2_d.ethernets.ethernet()[-1]\n    \n            edge1_e.connection.vxlan_name = \"d1_vxlan\"\n            edge2_e.connection.vxlan_name = \"d2_vxlan\"\n    \n            edge1_e.name = \"edge1_e{}\".format(i)\n            edge2_e.name = \"edge2_e{}\".format(i)\n    \n            edge1_e.mac = edge1_macs[i]\n            edge2_e.mac = edge2_macs[i]\n    \n            edge1_ip = edge1_e.ipv4_addresses.add()\n            edge2_ip = edge2_e.ipv4_addresses.add()\n    \n            edge1_ip.name = \"edge1_ip_d{}\".format(i)\n            edge2_ip.name = \"edge2_ip_d{}\".format(i)\n    \n            edge1_ip.address = \"100.1.{}.1\".format(i)\n            edge2_ip.address = \"100.1.{}.2\".format(i)\n    \n            edge1_ip.gateway = \"100.1.{}.2\".format(i)\n            edge2_ip.gateway = \"100.1.{}.1\".format(i)\n    \n            edge1_bgp, edge2_bgp = edge1_d.bgp, edge2_d.bgp\n            edge1_bgp.router_id = \"100.1.{}.1\".format(i)\n            edge2_bgp.router_id = \"100.1.{}.2\".format(i)\n    \n            edge1_bgp_ipv4 = edge1_bgp.ipv4_interfaces.add()\n            edge2_bgp_ipv4 = edge2_bgp.ipv4_interfaces.add()\n    \n            edge1_bgp_ipv4.ipv4_name = \"edge1_ip_d{}\".format(i)\n            edge2_bgp_ipv4.ipv4_name = \"edge2_ip_d{}\".format(i)\n    \n            edge1_bgp_peer = edge1_bgp_ipv4.peers.add()\n            edge2_bgp_peer = edge2_bgp_ipv4.peers.add()\n    \n            edge1_bgp_peer.name = \"edge1_bgp{}\".format(i)\n            edge2_bgp_peer.name = \"edge2_bgp{}\".format(i)\n    \n            edge1_bgp_peer.peer_address = \"100.1.{}.2\".format(i)\n            edge2_bgp_peer.peer_address = \"100.1.{}.1\".format(i)\n    \n            edge1_bgp_peer.as_type, edge2_bgp_peer.as_type = \"ibgp\", \"ibgp\"\n            edge1_bgp_peer.as_number, edge2_bgp_peer.as_number = 1000, 1000\n    \n            edge1_bgp_rr = edge1_bgp_peer.v4_routes.add(name=\"A1{}\".format(i))\n            edge1_bgp_rr.addresses.add(\n                address=\"1.1.0.{}\".format(i), count=180, prefix=32\n            )\n    \n            edge1_bgp_rr2 = edge1_bgp_peer.v4_routes.add(name=\"D1{}\".format(i))\n            edge1_bgp_rr2.addresses.add(\n                address=\"2.1.0.{}\".format(i), count=1, prefix=32\n            )\n    \n            edge2_bgp_rr = edge2_bgp_peer.v4_routes.add(name=\"A2{}\".format(i))\n            edge2_bgp_rr.addresses.add(\n                address=\"3.1.0.{}\".format(i), count=180, prefix=32\n            )\n    \n            edge2_bgp_rr2 = edge2_bgp_peer.v4_routes.add(name=\"D2{}\".format(i))\n            edge2_bgp_rr2.addresses.add(\n                address=\"4.1.0.{}\".format(i), count=1, prefix=32\n            )\n    \n        a1_routes = [\"A1{}\".format(i) for i in range(1, count + 1)]\n        d1_routes = [\"D1{}\".format(i) for i in range(1, count + 1)]\n    \n        a2_routes = [\"A2{}\".format(i) for i in range(1, count + 1)]\n        d2_routes = [\"D2{}\".format(i) for i in range(1, count + 1)]\n    \n        flow = config.flows.flow(name=\"f1\")[-1]\n        flow.tx_rx.device.tx_names = a1_routes + d1_routes\n        flow.tx_rx.device.rx_names = a2_routes + d2_routes\n    \n        flow.duration.fixed_packets.packets = count * 10\n    \n        flow.metrics.enable = True\n        flow.metrics.loss = True\n    \n>       api.set_config(config)\n\ntests/vxlan/test_vxlan_compact.py:171: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <snappi_ixnetwork.snappi_api.Api object at 0x7fdc7afbbfa0>\nconfig = <snappi.snappi.Config object at 0x7fdc762c8400>\n\n    def set_config(self, config):\n        \"\"\"Set or update the configuration\"\"\"\n        try:\n            if isinstance(config, (type(self._config_type), str)) is False:\n                raise TypeError(\n                    \"The content must be of type Union[Config, str]\"\n                )\n    \n            if isinstance(config, str) is True:\n                config = self._config_type.deserialize(config)\n            self.config_ixnetwork(config)\n            # CP-DP Convergence config\n            ixn_cpdpconvergence = self._traffic.Statistics.CpdpConvergence\n            ixn_cpdpconvergence.Enabled = False\n            cfg = config.get(\"events\")\n            if cfg is not None:\n                cp_events = cfg.get(\"cp_events\")\n                if cp_events is not None:\n                    cp_events_enable = cp_events.get(\"enable\")\n                else:\n                    cp_events_enable = False\n                dp_events = cfg.get(\"dp_events\")\n                if dp_events is not None:\n                    dp_events_enable = dp_events.get(\"enable\")\n                    rx_rate_threshold = dp_events.get(\"rx_rate_threshold\")\n                else:\n                    dp_events_enable = False\n                # Enable cp-dp convergence if any one of cp or dp is true\n                if cp_events_enable or dp_events_enable:\n                    ixn_cpdpconvergence.Enabled = True\n                    # For CP events\n                    if cp_events_enable:\n                        ixn_cpdpconvergence.EnableControlPlaneEvents = True\n                    # For DP events\n                    if dp_events_enable:\n                        if self.traffic_item.has_latency is True:\n                            raise Exception(\n                                \"We are supporting either latency or dp convergence\"\n                            )\n                        ixn_cpdpconvergence.EnableDataPlaneEventsRateMonitor = True\n                        ixn_cpdpconvergence.DataPlaneThreshold = rx_rate_threshold\n    \n                for ixn_traffic_item in self._traffic_item.find():\n                    ixn_traffic_item.Tracking.find()[0].TrackBy = [\n                        \"destEndpoint0\",\n                        \"destSessionDescription0\",\n                    ]\n            else:\n                ixn_cpdpconvergence.Enabled = False\n    \n        except Exception as err:\n>           raise SnappiIxnException(err)\nE           snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 276, in set_config\nE               self.config_ixnetwork(config)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 363, in config_ixnetwork\nE               self.ngpf.config()\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/device/ngpf.py\", line 69, in config\nE               self._configure_topology()\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/device/ngpf.py\", line 110, in _configure_topology\nE               self.api._remove(self.api._topology, [])\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 1158, in _remove\nE               ixn_obj.remove()\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/topology/topology_9d0fe0bb2c064aa7010adbdb6cf68958.py\", line 250, in remove\nE               self._delete()\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 441, in _delete\nE               raise e\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 438, in _delete\nE               self._connection._delete(url)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 286, in _delete\nE               return self._send_recv(\"DELETE\", url, payload)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 596, in _send_recv\nE               self._process_response_status_code(url, headers, response)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 476, in _process_response_status_code\nE               raise BadRequestError(message, response.status_code)\nE            Unable to delete /topology:1 Topology tx: Removing a Topology from a started Topology is not permitted.\nE           \tCurrent Server Errors/Warnings:\nE           \t05/02/2025 00:12:18 [ERROR] [Topology tx: Removing a Topology from a started Topology is not permitted.] \nE           \t05/02/2025 00:07:59 [WARNING] [Traffic Generate required] The Traffic Item was modified. Please perform a Traffic Generate to update the associated traffic Flow Groups\nE           \t05/02/2025 00:12:13 [WARNING] [Regenerate Traffic Item Required] The Traffic Item configuration has changed and it needs to be regenerated before applying it to the Ixia hardware\nE           \t05/02/2025 00:11:41 [WARNING] [Frames Size Adjusted] The frame size was increased to 156 bytes to accommodate encapsulation requirements.  - The frame size was adjusted to conform to the encapsulation requirements\n\nsnappi_ixnetwork/snappi_api.py:317: SnappiIxnException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"--------------------------------- Captured Log ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1429 Config validation 0.013s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1429 Ports configuration 0.310s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1429 Captures configuration 0.196s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1429 Location hosts ready [novus1-715849.ccu.is.keysight.com] 0.101s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1429 Aggregation mode speed change 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1429 Location configuration 0.737s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1429 Layer1 configuration 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1429 Lag Configuration 0.091s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"DEBUG    ixnetwork_restpy.connection:connection.py:474 Unable to delete /topology:1 Topology tx: Removing a Topology from a started Topology is not permitted.","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"\tCurrent Server Errors/Warnings:","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"\t05/02/2025 00:12:18 [ERROR] [Topology tx: Removing a Topology from a started Topology is not permitted.] ","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"\t05/02/2025 00:07:59 [WARNING] [Traffic Generate required] The Traffic Item was modified. Please perform a Traffic Generate to update the associated traffic Flow Groups","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"\t05/02/2025 00:12:13 [WARNING] [Regenerate Traffic Item Required] The Traffic Item configuration has changed and it needs to be regenerated before applying it to the Ixia hardware","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"\t05/02/2025 00:11:41 [WARNING] [Frames Size Adjusted] The frame size was increased to 156 bytes to accommodate encapsulation requirements.  - The frame size was adjusted to conform to the encapsulation requirements","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1429 Convert device config : 1.496s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1429 Devices configuration 1.592s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"--------------------------------- Captured Out ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":18,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"pytest"},{"name":"host","value":"snappi-ixn-ci-novus10g"},{"name":"testClass","value":"vxlan.test_vxlan_compact"},{"name":"package","value":"vxlan.test_vxlan_compact"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":1,"passed":99,"unknown":0,"total":107},"items":[{"uid":"cfedf2f4f34e88b5","status":"passed","time":{"start":1746064489784,"stop":1746064503210,"duration":13426}},{"uid":"b3735399b292acc9","status":"skipped","statusDetails":"CI-Testing","time":{"start":1746042370552,"stop":1746042370552,"duration":0}},{"uid":"377557b3858a19a2","status":"passed","time":{"start":1746025407819,"stop":1746025419680,"duration":11861}},{"uid":"f3f0982fb71d6f7d","status":"passed","time":{"start":1746017351140,"stop":1746017364771,"duration":13631}},{"uid":"f6c02c43a6c95710","status":"passed","time":{"start":1745951248306,"stop":1745951261063,"duration":12757}},{"uid":"e284955b4eb0465d","status":"passed","time":{"start":1745944306045,"stop":1745944319187,"duration":13142}},{"uid":"a68594f4a9cb95d2","status":"passed","time":{"start":1745937122343,"stop":1745937137036,"duration":14693}},{"uid":"ec71261271784b45","status":"passed","time":{"start":1745930256769,"stop":1745930268956,"duration":12187}},{"uid":"53c065bd5e39e79","status":"passed","time":{"start":1745921505820,"stop":1745921516383,"duration":10563}},{"uid":"2ef549fe8dec08a","status":"passed","time":{"start":1745907259784,"stop":1745907270221,"duration":10437}},{"uid":"1af8ba608ab2fe0a","status":"failed","statusDetails":"snappi_ixnetwork.exceptions.SnappiIxnException: IxNet - One or more ports were forcefully taken by other user IxNet - The Ixia port is not connected.","time":{"start":1745902727011,"stop":1745902736753,"duration":9742}},{"uid":"1e918566623d8e63","status":"failed","statusDetails":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 276, in set_config\n    self.config_ixnetwork(config)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 364, in config_ixnetwork\n    self.traffic_item.config()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 879, in config\n    ixn_traffic_item = self.get_ixn_config(self._config)[0]\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 535, in get_ixn_config\n    tr = self.create_traffic(config)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 689, in create_traffic\n    for snappi_eotr in config.egress_only_tracking:\n 'Config' object has no attribute 'egress_only_tracking'","time":{"start":1745865135575,"stop":1745865140609,"duration":5034}},{"uid":"79c13a4393a414c8","status":"failed","statusDetails":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 276, in set_config\n    self.config_ixnetwork(config)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 364, in config_ixnetwork\n    self.traffic_item.config()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 879, in config\n    ixn_traffic_item = self.get_ixn_config(self._config)[0]\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 535, in get_ixn_config\n    tr = self.create_traffic(config)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 689, in create_traffic\n    for snappi_eotr in config.egress_only_tracking:\n 'Config' object has no attribute 'egress_only_tracking'","time":{"start":1745841955218,"stop":1745841960971,"duration":5753}},{"uid":"cf139255c401036f","status":"passed","time":{"start":1745837550536,"stop":1745837566646,"duration":16110}},{"uid":"a93ed2ab028db797","status":"passed","time":{"start":1745833086105,"stop":1745833099323,"duration":13218}},{"uid":"15572bf9d7831d65","status":"failed","statusDetails":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 276, in set_config\n    self.config_ixnetwork(config)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 364, in config_ixnetwork\n    self.traffic_item.config()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 880, in config\n    ixn_traffic_item = self.get_ixn_config(self._config)[0]\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 535, in get_ixn_config\n    tr = self.create_traffic(config)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 689, in create_traffic\n    for snappi_eotr in config.egress_only_tracking:\n 'Config' object has no attribute 'egress_only_tracking'","time":{"start":1745687367675,"stop":1745687372639,"duration":4964}},{"uid":"5be22b4ecdd40a75","status":"passed","time":{"start":1745474974403,"stop":1745474988134,"duration":13731}},{"uid":"b959b530bd51d149","status":"passed","time":{"start":1745302321831,"stop":1745302333012,"duration":11181}},{"uid":"e6bcc56e3f514ec5","status":"failed","statusDetails":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 276, in set_config\n    self.config_ixnetwork(config)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 364, in config_ixnetwork\n    self.traffic_item.config()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 867, in config\n    ixn_traffic_item = self.get_ixn_config(self._config)[0]\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 534, in get_ixn_config\n    tr = self.create_traffic(config)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 688, in create_traffic\n    for snappi_eotr in config.egress_only_trackings:\n 'Config' object has no attribute 'egress_only_trackings'","time":{"start":1744642070405,"stop":1744642075371,"duration":4966}},{"uid":"5f1580ce0856e4fe","status":"passed","time":{"start":1744628606357,"stop":1744628618264,"duration":11907}}]},"tags":[]},"source":"1f453a02b081ed8b.json","parameterValues":[]}