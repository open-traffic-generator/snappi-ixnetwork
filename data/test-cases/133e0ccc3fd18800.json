{"uid":"133e0ccc3fd18800","name":"test_traffic_transmit_state","historyId":"pytest:traffic.test_traffic_transmit_state#test_traffic_transmit_state","time":{"start":1738298470362,"stop":1738298518630,"duration":48268},"status":"failed","statusMessage":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 582, in get_metrics\n    response = self.traffic_item.results(request.flow)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 1475, in results\n    ).Page\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/statistics/view/view.py\", line 554, in Page\n    return Page(self)._select()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 548, in _select\n    end = len(self._parent.href)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 158, in href\n    return self._get_attribute(\"href\")\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 218, in _get_attribute\n    raise NotFoundError(msg)\n Failed to get the View.href property as the View object has no encapsulated resources. Either the View.find() method was not called or it failed to retrieve any resources from the server.","statusTrace":"self = <snappi_ixnetwork.snappi_api.Api object at 0x7f3d0c5f4730>\nrequest = <snappi.snappi.MetricsRequest object at 0x7f3d0a072b60>\n\n    def get_metrics(self, request):\n        \"\"\"\n        Gets port, flow and protocol metrics.\n    \n        Args\n        ----\n        - request (Union[MetricsRequest, str]): A request for Port, Flow and\n          protocol metrics.\n          The request content MUST be vase on the OpenAPI model,\n          #/components/schemas/Result.MetricsRequest\n          See the docs/openapi.yaml document for all model details\n        \"\"\"\n        try:\n            self._connect()\n            metric_req = self.metrics_request()\n            if isinstance(request, (type(metric_req), str)) is False:\n                raise TypeError(\n                    \"The content must be of type Union[MetricsRequest, str]\"\n                )\n            if isinstance(request, str) is True:\n                request = metric_req.deserialize(request)\n            # Need to change the code style when the choice Enum grows big\n            if request.get(\"choice\") == \"port\":\n                response = self.vport.results(request.port)\n                metric_res = self.metrics_response()\n                metric_res.port_metrics.deserialize(response)\n                return metric_res\n            if request.get(\"choice\") == \"flow\":\n>               response = self.traffic_item.results(request.flow)\n\nsnappi_ixnetwork/snappi_api.py:582: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsnappi_ixnetwork/trafficitem.py:1475: in results\n    ).Page\n.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/statistics/view/view.py:554: in Page\n    return Page(self)._select()\n.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py:548: in _select\n    end = len(self._parent.href)\n.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py:158: in href\n    return self._get_attribute(\"href\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ixnetwork_restpy.testplatform.sessions.ixnetwork.statistics.view.view.View object at 0x7f3d0b16dbc0>\nname = 'href'\n\n    def _get_attribute(self, name):\n        \"\"\"The main accessor for all attributes\"\"\"\n        if self._mode[0] == \"config\":\n            if name == \"href\":\n                return self._properties[name]\n            else:\n                return name\n        else:\n            if len(self._object_properties) == 0:\n                msg = (\n                    \"Failed to get the {}.{} property as the {} object has no \"\n                    \"encapsulated resources. \"\n                ).format(self.__class__.__name__, name, self.__class__.__name__)\n                if \"find\" in dir(self):\n                    msg += (\n                        \"Either the {}.find() method was not called or it failed \"\n                        \"to retrieve any resources from the server.\"\n                    ).format(self.__class__.__name__)\n>               raise NotFoundError(msg)\nE               ixnetwork_restpy.errors.NotFoundError: Failed to get the View.href property as the View object has no encapsulated resources. Either the View.find() method was not called or it failed to retrieve any resources from the server.\n\n.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py:218: NotFoundError\n\nDuring handling of the above exception, another exception occurred:\n\napi = <snappi_ixnetwork.snappi_api.Api object at 0x7f3d0c5f4730>\nb2b_raw_config = <snappi.snappi.Config object at 0x7f3d0b0ed850>\nutils = <module 'utils' from '/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/tests/utils/__init__.py'>\n\n    def test_traffic_transmit_state(api, b2b_raw_config, utils):\n        \"\"\"\n        configure two flows f1 and f2\n        - Send fixed packets from f1\n        - Send continuous packets from f2\n        - Send fixed packets from f3\n    \n        Validation:\n        1) Validate the transmit state of the f1 & f3\n           as stopped after packets exhausted\n        \"\"\"\n    \n        f1_packets = 1000\n        f1_size = 74\n        f2_size = 1500\n        ports = b2b_raw_config.ports\n        flow1 = b2b_raw_config.flows[0]\n        flow1.name = \"tx_flow1\"\n        flow1.packet.ethernet().ipv4()\n        flow1.packet[0].src.value = \"00:0c:29:1d:10:67\"\n        flow1.packet[0].dst.value = \"00:0c:29:1d:10:71\"\n        flow1.packet[1].src.value = \"10.10.10.1\"\n        flow1.packet[1].dst.value = \"10.10.10.2\"\n        flow2 = b2b_raw_config.flows.flow()[-1]\n        flow2.name = \"tx_flow2\"\n        flow2.tx_rx.port.tx_name = ports[0].name\n        flow2.tx_rx.port.rx_name = ports[1].name\n    \n        flow3 = b2b_raw_config.flows.flow()[-1]\n        flow3.name = \"tx_flow3\"\n        flow3.tx_rx.port.tx_name = ports[0].name\n        flow3.tx_rx.port.rx_name = ports[1].name\n    \n        flow1.duration.fixed_packets.packets = f1_packets\n        flow1.size.fixed = f1_size\n        flow1.rate.percentage = 10\n    \n        flow2.duration.continuous\n        flow2.size.fixed = f2_size\n        flow2.rate.percentage = 10\n    \n        flow3.duration.fixed_packets.packets = f1_packets\n        flow3.size.fixed = f2_size\n        flow3.rate.percentage = 10\n    \n        flow1.metrics.enable = True\n        flow1.metrics.loss = True\n    \n        flow3.metrics.enable = True\n        flow3.metrics.loss = True\n    \n        utils.start_traffic(api, b2b_raw_config)\n        import time\n    \n        time.sleep(10)\n>       utils.wait_for(\n            lambda: utils.is_traffic_stopped(\n                api, flow_names=[\"tx_flow1\", \"tx_flow3\"]\n            ),\n            \"traffic to stop\",\n        )\n\ntests/traffic/test_traffic_transmit_state.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/utils/common.py:216: in wait_for\n    res = func()\ntests/traffic/test_traffic_transmit_state.py:57: in <lambda>\n    lambda: utils.is_traffic_stopped(\ntests/utils/common.py:525: in is_traffic_stopped\n    metrics = api.get_metrics(fq).flow_metrics\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <snappi_ixnetwork.snappi_api.Api object at 0x7f3d0c5f4730>\nrequest = <snappi.snappi.MetricsRequest object at 0x7f3d0a072b60>\n\n    def get_metrics(self, request):\n        \"\"\"\n        Gets port, flow and protocol metrics.\n    \n        Args\n        ----\n        - request (Union[MetricsRequest, str]): A request for Port, Flow and\n          protocol metrics.\n          The request content MUST be vase on the OpenAPI model,\n          #/components/schemas/Result.MetricsRequest\n          See the docs/openapi.yaml document for all model details\n        \"\"\"\n        try:\n            self._connect()\n            metric_req = self.metrics_request()\n            if isinstance(request, (type(metric_req), str)) is False:\n                raise TypeError(\n                    \"The content must be of type Union[MetricsRequest, str]\"\n                )\n            if isinstance(request, str) is True:\n                request = metric_req.deserialize(request)\n            # Need to change the code style when the choice Enum grows big\n            if request.get(\"choice\") == \"port\":\n                response = self.vport.results(request.port)\n                metric_res = self.metrics_response()\n                metric_res.port_metrics.deserialize(response)\n                return metric_res\n            if request.get(\"choice\") == \"flow\":\n                response = self.traffic_item.results(request.flow)\n                metric_res = self.metrics_response()\n                metric_res.flow_metrics.deserialize(response)\n                return metric_res\n            if request.get(\"choice\") == \"lag\":\n                response = self.traffic_item.results(request.lag)\n                metric_res = self.metrics_response()\n                metric_res.lag_metrics.deserialize(response)\n                return metric_res\n            if request.get(\"choice\") == \"lacp\":\n                response = self.traffic_item.results(request.lacp)\n                metric_res = self.metrics_response()\n                metric_res.lacp_metrics.deserialize(response)\n                return metric_res\n            if request.get(\"choice\") == \"convergence\":\n                response = self._result(request.convergence)\n                metric_res = self.metrics_response()\n                metric_res.convergence_metrics.deserialize(response)\n                return metric_res\n            if (\n                request.get(\"choice\")\n                in self.protocol_metrics.get_supported_protocols()\n            ):\n                response = self.protocol_metrics.results(request)\n                metric_res = self.metrics_response()\n                getattr(metric_res, request.choice + \"_metrics\").deserialize(\n                    response\n                )\n                return metric_res\n        except Exception as err:\n>           raise SnappiIxnException(err)\nE           snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 582, in get_metrics\nE               response = self.traffic_item.results(request.flow)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 1475, in results\nE               ).Page\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/statistics/view/view.py\", line 554, in Page\nE               return Page(self)._select()\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 548, in _select\nE               end = len(self._parent.href)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 158, in href\nE               return self._get_attribute(\"href\")\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 218, in _get_attribute\nE               raise NotFoundError(msg)\nE            Failed to get the View.href property as the View object has no encapsulated resources. Either the View.find() method was not called or it failed to retrieve any resources from the server.\n\nsnappi_ixnetwork/snappi_api.py:612: SnappiIxnException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"--------------------------------- Captured Log ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1440 Config validation 0.007s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1440 Ports configuration 0.274s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1440 Captures configuration 0.342s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1440 Location hosts ready [novus1-715849.ccu.is.keysight.com] 2.099s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1440 Speed change not require due to redundant Layer1 config","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1440 Aggregation mode speed change 0.002s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1440 Location configuration 6.579s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1440 Layer1 configuration 1.603s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1440 Lag Configuration 0.081s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1440 Convert device config : 0.267s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1440 Create IxNetwork device config : 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1440 Push IxNetwork device config : 0.084s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1440 Devices configuration 0.434s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1440 Flows configuration 3.095s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1440 Start interfaces 0.247s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1440 IxNet - The Traffic Item was modified. Please perform a Traffic Generate to update the associated traffic Flow Groups","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1440 Captures start 1.812s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1440 Flows generate/apply 1.672s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1440 Flows clear statistics 10.802s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1440 Captures start 2.072s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1440 Flows start 4.738s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1440 IxNet - The Traffic Item was modified. Please perform a Traffic Generate to update the associated traffic Flow Groups","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"--------------------------------- Captured Out ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":24,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"pytest"},{"name":"host","value":"snappi-ixn-ci-novus10g"},{"name":"testClass","value":"traffic.test_traffic_transmit_state"},{"name":"package","value":"traffic.test_traffic_transmit_state"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":4},"items":[{"uid":"e68f58a424481b5f","status":"passed","time":{"start":1738140099302,"stop":1738140158467,"duration":59165}},{"uid":"1cd2b1030e1b358","status":"passed","time":{"start":1738069870993,"stop":1738069930002,"duration":59009}},{"uid":"19a5e34ca20b8e52","status":"passed","time":{"start":1738051659120,"stop":1738051717860,"duration":58740}}]},"tags":[]},"source":"133e0ccc3fd18800.json","parameterValues":[]}