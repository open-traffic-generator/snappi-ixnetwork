{"uid":"da66471ca7c294ea","name":"test_device_connection","historyId":"pytest:test_device_connection#test_device_connection","time":{"start":1746414762134,"stop":1746414821230,"duration":59096},"status":"failed","statusMessage":"assert 400 == 500","statusTrace":"self = <snappi_ixnetwork.snappi_api.Api object at 0x7f99c6897040>\nconfig = <snappi.snappi.Config object at 0x7f99c50c4720>\n\n    def set_config(self, config):\n        \"\"\"Set or update the configuration\"\"\"\n        try:\n            if isinstance(config, (type(self._config_type), str)) is False:\n                raise TypeError(\n                    \"The content must be of type Union[Config, str]\"\n                )\n    \n            if isinstance(config, str) is True:\n                config = self._config_type.deserialize(config)\n>           self.config_ixnetwork(config)\n\nsnappi_ixnetwork/snappi_api.py:276: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsnappi_ixnetwork/snappi_api.py:374: in config_ixnetwork\n    self._ixnetwork.StartAllProtocols()\n.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/ixnetwork.py:2862: in StartAllProtocols\n    return self._execute(\"startAllProtocols\", payload=payload, response_object=None)\n.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py:452: in _execute\n    response = self._connection._execute(url, payload)\n.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py:289: in _execute\n    return self._send_recv(\"POST\", url, payload)\n.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py:572: in _send_recv\n    return self._poll()\n.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py:640: in _poll\n    return self._process_response_status_code(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ixnetwork_restpy.connection.Connection object at 0x7f99c67744f0>\nurl = None\nheaders = {'Connection': 'keep-alive', 'Content-Type': 'application/json', 'User-Agent': 'ixnetwork-restpy', 'X-Api-Key': '72b147e77ad34d9b95881a58620960f6', ...}\nresponse = <Response [400]>\nasync_status = {'executionTimeMs': 1118.0, 'id': '', 'message': None, 'progress': 100, ...}\n\n    def _process_response_status_code(self, url, headers, response, async_status=False):\n        errors = []\n        # add the initial error\n        if async_status is True:\n            async_status = response.json()\n            if (\n                \"message\" in async_status\n                and async_status[\"message\"] is not None\n                and \"API CONTENTION\" in async_status[\"message\"]\n            ):\n                response.status_code = 409\n            else:\n                response.status_code = 400\n            error = \"\"\n            if \"message\" in async_status and async_status[\"message\"] is not None:\n                error += \" \" + async_status[\"message\"]\n            if \"result\" in async_status and async_status[\"result\"] is not None:\n                error += \" \" + async_status[\"result\"]\n            errors.append(error)\n        else:\n            try:\n                for error in response.json()[\"errors\"]:\n                    errors.append(error[\"detail\"])\n            except:\n                errors.append(response.text)\n        # add any /globals/appErrors/error items\n        try:\n            preamble = url[\n                0 : url.find(\"/\", url.find(\"/sessions/\") + len(\"/sessions/\"))\n            ]\n            url = preamble + \"/ixnetwork/globals/appErrors/error\"\n            self._print_request(\"GET\", url)\n            error_response = self._session.request(\n                \"GET\",\n                url,\n                headers=headers,\n                verify=self._verify_cert,\n                allow_redirects=False,\n            )\n            server_info = \"\\tCurrent Server Errors/Warnings:\"\n            for error in error_response.json():\n                if error[\"errorLevel\"] in [\"kError\", \"kWarning\"]:\n                    if server_info is not None:\n                        errors.append(server_info)\n                        server_info = None\n                    errors.append(\n                        \"\\t%s [%s] [%s] %s\"\n                        % (\n                            error[\"lastModified\"],\n                            error[\"errorLevel\"][1:].upper(),\n                            error[\"name\"],\n                            error[\"description\"],\n                        )\n                    )\n        except:\n            pass\n        # raise the appropriate error\n        message = \"\\n\".join(errors)\n        logging.getLogger(__name__).debug(message)\n        if response.status_code == 400:\n>           raise BadRequestError(message, response.status_code)\nE           ixnetwork_restpy.errors.BadRequestError:  Failure message received from Interface Manager on port novus1-715849.ccu.is.keysight.com;1;1: unknown-error - Could not load plugin cpf: static ixePlugin* ixePlugin::LoadPlugin(const string&, const string&): dlopen: /usr/lib/ixe/plugins/libcpf.so: undefined symbol: _ZNK7DataSeq8IMPlugin33localTimestampMilliImplementationEv.\nE           System Exception Caught. Exception Text: Failure message received from Interface Manager on port novus1-715849.ccu.is.keysight.com;1;1: unknown-error - Could not load plugin cpf: static ixePlugin* ixePlugin::LoadPlugin(const string&, const string&): dlopen: /usr/lib/ixe/plugins/libcpf.so: undefined symbol: _ZNK7DataSeq8IMPlugin33localTimestampMilliImplementationEv.\n\n.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py:476: BadRequestError\n\nDuring handling of the above exception, another exception occurred:\n\napi = <snappi_ixnetwork.snappi_api.Api object at 0x7f99c6897040>\nutils = <module 'utils' from '/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/tests/utils/__init__.py'>\n\n    def test_device_connection(api, utils):\n        \"\"\"\n        Test when both port_name and connection.port_name is set in the config\n        \"\"\"\n        config = api.config()\n        p1, p2 = config.ports.port(\n            name=\"p1\", location=utils.settings.ports[0]\n        ).port(name=\"p2\", location=utils.settings.ports[1])\n        config.options.port_options.location_preemption = True\n        d1 = config.devices.device(name=\"d1\")[-1]\n        eth1 = d1.ethernets.add()\n        eth1.connection.port_name = p2.name\n        eth1.connection.port_name = p1.name\n        eth1.name = \"eth1\"\n        eth1.mac = \"00:01:00:00:00:01\"\n        try:\n>           api.set_config(config)\n\ntests/test_device_connection.py:62: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <snappi_ixnetwork.snappi_api.Api object at 0x7f99c6897040>\nconfig = <snappi.snappi.Config object at 0x7f99c50c4720>\n\n    def set_config(self, config):\n        \"\"\"Set or update the configuration\"\"\"\n        try:\n            if isinstance(config, (type(self._config_type), str)) is False:\n                raise TypeError(\n                    \"The content must be of type Union[Config, str]\"\n                )\n    \n            if isinstance(config, str) is True:\n                config = self._config_type.deserialize(config)\n            self.config_ixnetwork(config)\n            # CP-DP Convergence config\n            ixn_cpdpconvergence = self._traffic.Statistics.CpdpConvergence\n            ixn_cpdpconvergence.Enabled = False\n            cfg = config.get(\"events\")\n            if cfg is not None:\n                cp_events = cfg.get(\"cp_events\")\n                if cp_events is not None:\n                    cp_events_enable = cp_events.get(\"enable\")\n                else:\n                    cp_events_enable = False\n                dp_events = cfg.get(\"dp_events\")\n                if dp_events is not None:\n                    dp_events_enable = dp_events.get(\"enable\")\n                    rx_rate_threshold = dp_events.get(\"rx_rate_threshold\")\n                else:\n                    dp_events_enable = False\n                # Enable cp-dp convergence if any one of cp or dp is true\n                if cp_events_enable or dp_events_enable:\n                    ixn_cpdpconvergence.Enabled = True\n                    # For CP events\n                    if cp_events_enable:\n                        ixn_cpdpconvergence.EnableControlPlaneEvents = True\n                    # For DP events\n                    if dp_events_enable:\n                        if self.traffic_item.has_latency is True:\n                            raise Exception(\n                                \"We are supporting either latency or dp convergence\"\n                            )\n                        ixn_cpdpconvergence.EnableDataPlaneEventsRateMonitor = True\n                        ixn_cpdpconvergence.DataPlaneThreshold = rx_rate_threshold\n    \n                for ixn_traffic_item in self._traffic_item.find():\n                    ixn_traffic_item.Tracking.find()[0].TrackBy = [\n                        \"destEndpoint0\",\n                        \"destSessionDescription0\",\n                    ]\n            else:\n                ixn_cpdpconvergence.Enabled = False\n    \n        except Exception as err:\n>           raise SnappiIxnException(err)\nE           snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 276, in set_config\nE               self.config_ixnetwork(config)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 374, in config_ixnetwork\nE               self._ixnetwork.StartAllProtocols()\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/ixnetwork.py\", line 2862, in StartAllProtocols\nE               return self._execute(\"startAllProtocols\", payload=payload, response_object=None)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 452, in _execute\nE               response = self._connection._execute(url, payload)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 289, in _execute\nE               return self._send_recv(\"POST\", url, payload)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 572, in _send_recv\nE               return self._poll()\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 640, in _poll\nE               return self._process_response_status_code(\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 476, in _process_response_status_code\nE               raise BadRequestError(message, response.status_code)\nE             Failure message received from Interface Manager on port novus1-715849.ccu.is.keysight.com;1;1: unknown-error - Could not load plugin cpf: static ixePlugin* ixePlugin::LoadPlugin(const string&, const string&): dlopen: /usr/lib/ixe/plugins/libcpf.so: undefined symbol: _ZNK7DataSeq8IMPlugin33localTimestampMilliImplementationEv.\nE           System Exception Caught. Exception Text: Failure message received from Interface Manager on port novus1-715849.ccu.is.keysight.com;1;1: unknown-error - Could not load plugin cpf: static ixePlugin* ixePlugin::LoadPlugin(const string&, const string&): dlopen: /usr/lib/ixe/plugins/libcpf.so: undefined symbol: _ZNK7DataSeq8IMPlugin33localTimestampMilliImplementationEv.\n\nsnappi_ixnetwork/snappi_api.py:317: SnappiIxnException\n\nDuring handling of the above exception, another exception occurred:\n\napi = <snappi_ixnetwork.snappi_api.Api object at 0x7f99c6897040>\nutils = <module 'utils' from '/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/tests/utils/__init__.py'>\n\n    def test_device_connection(api, utils):\n        \"\"\"\n        Test when both port_name and connection.port_name is set in the config\n        \"\"\"\n        config = api.config()\n        p1, p2 = config.ports.port(\n            name=\"p1\", location=utils.settings.ports[0]\n        ).port(name=\"p2\", location=utils.settings.ports[1])\n        config.options.port_options.location_preemption = True\n        d1 = config.devices.device(name=\"d1\")[-1]\n        eth1 = d1.ethernets.add()\n        eth1.connection.port_name = p2.name\n        eth1.connection.port_name = p1.name\n        eth1.name = \"eth1\"\n        eth1.mac = \"00:01:00:00:00:01\"\n        try:\n            api.set_config(config)\n        except Exception as err:\n>           assert err.args[0] == 500\nE           assert 400 == 500\n\ntests/test_device_connection.py:64: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"--------------------------------- Captured Log ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Config validation 0.002s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Ports configuration 49.399s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Captures configuration 0.205s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Location hosts ready [novus1-715849.ccu.is.keysight.com] 0.114s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Aggregation mode speed change 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Location preemption [novus1-715849.ccu.is.keysight.com;1;1, novus1-715849.ccu.is.keysight.com;1;2] 0.109s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Location connect [p1, p2] 2.117s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1440 p1 connectedLinkDown","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1440 p2 connectedLinkDown","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Location state check [p1, p2] 0.303s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Location configuration 3.668s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Layer1 configuration 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Lag Configuration 0.090s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Convert device config : 0.634s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Create IxNetwork device config : 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Push IxNetwork device config : 0.133s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Devices configuration 0.859s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Flows configuration 0.825s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"DEBUG    ixnetwork_restpy.connection:connection.py:474  Failure message received from Interface Manager on port novus1-715849.ccu.is.keysight.com;1;1: unknown-error - Could not load plugin cpf: static ixePlugin* ixePlugin::LoadPlugin(const string&, const string&): dlopen: /usr/lib/ixe/plugins/libcpf.so: undefined symbol: _ZNK7DataSeq8IMPlugin33localTimestampMilliImplementationEv.","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"System Exception Caught. Exception Text: Failure message received from Interface Manager on port novus1-715849.ccu.is.keysight.com;1;1: unknown-error - Could not load plugin cpf: static ixePlugin* ixePlugin::LoadPlugin(const string&, const string&): dlopen: /usr/lib/ixe/plugins/libcpf.so: undefined symbol: _ZNK7DataSeq8IMPlugin33localTimestampMilliImplementationEv.","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Start interfaces 2.620s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"--------------------------------- Captured Out ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":25,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"pytest"},{"name":"host","value":"snappi-ixn-ci-novus10g"},{"name":"testClass","value":"test_device_connection"},{"name":"package","value":"test_device_connection"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":112,"unknown":0,"total":115},"items":[{"uid":"d2b45445fafc8a21","status":"passed","time":{"start":1746232601079,"stop":1746232635264,"duration":34185}},{"uid":"3e252bd6982c38ed","status":"passed","time":{"start":1746224382039,"stop":1746224417637,"duration":35598}},{"uid":"3c03bdbd00e3d4fe","status":"passed","time":{"start":1746217344058,"stop":1746217376683,"duration":32625}},{"uid":"66209b7d8a1899cd","status":"passed","time":{"start":1746199805015,"stop":1746199836502,"duration":31487}},{"uid":"35df6cf8284ce126","status":"passed","time":{"start":1746181689995,"stop":1746181727054,"duration":37059}},{"uid":"576b880a1fe4c90e","status":"passed","time":{"start":1746174663641,"stop":1746174699003,"duration":35362}},{"uid":"fbbb087fde639b83","status":"passed","time":{"start":1746117825457,"stop":1746117856631,"duration":31174}},{"uid":"d8c938c221e56a0","status":"passed","time":{"start":1746098916418,"stop":1746098952333,"duration":35915}},{"uid":"9aa066bac5d03abd","status":"passed","time":{"start":1746064489784,"stop":1746064533258,"duration":43474}},{"uid":"2bb6c01b7ec125ba","status":"passed","time":{"start":1746042370552,"stop":1746042410509,"duration":39957}},{"uid":"851e35a5db500f39","status":"passed","time":{"start":1746025407819,"stop":1746025442335,"duration":34516}},{"uid":"2ec2b47336b49dc5","status":"passed","time":{"start":1746017351140,"stop":1746017388963,"duration":37823}},{"uid":"cf5693eb2b32203e","status":"passed","time":{"start":1745951248306,"stop":1745951291438,"duration":43132}},{"uid":"39dafc484fdcf483","status":"passed","time":{"start":1745944306045,"stop":1745944339383,"duration":33338}},{"uid":"b85b2d586df80121","status":"passed","time":{"start":1745937122343,"stop":1745937157341,"duration":34998}},{"uid":"546351b194f990f1","status":"passed","time":{"start":1745930256769,"stop":1745930291284,"duration":34515}},{"uid":"8cd3fc8e55eb4d39","status":"passed","time":{"start":1745921505820,"stop":1745921546150,"duration":40330}},{"uid":"80ba1d0d8cc14f04","status":"passed","time":{"start":1745907259784,"stop":1745907293973,"duration":34189}},{"uid":"2370b71f011d6413","status":"passed","time":{"start":1745902727011,"stop":1745902755244,"duration":28233}},{"uid":"2872aad353c89db4","status":"passed","time":{"start":1745865135575,"stop":1745865153091,"duration":17516}}]},"tags":[]},"source":"da66471ca7c294ea.json","parameterValues":[]}