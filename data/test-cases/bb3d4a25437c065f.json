{"uid":"bb3d4a25437c065f","name":"test_encrypt_with_mka_multiple_devices","historyId":"pytest:macsec.test_macsec_mka_multiple_devices#test_encrypt_with_mka_multiple_devices","time":{"start":1747017408213,"stop":1747017522986,"duration":114773},"status":"failed","statusMessage":"assert 2 == 1\n +  where 2 = len(<snappi.snappi.MacsecMetricIter object at 0x7f8f9ee5fec0>)\n +    where <snappi.snappi.MacsecMetricIter object at 0x7f8f9ee5fec0> = <snappi.snappi.MetricsResponse object at 0x7f8f9de52700>.macsec_metrics","statusTrace":"api = <snappi_ixnetwork.snappi_api.Api object at 0x7f8f9f5f3a90>\nb2b_raw_config = <snappi.snappi.Config object at 0x7f8f9eb7bba0>\nutils = <module 'utils' from '/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/tests/utils/__init__.py'>\n\n    def test_encrypt_with_mka_multiple_devices(api, b2b_raw_config, utils):\n        \"\"\"\n        Test for the macsec configuration\n        \"\"\"\n        config = b2b_raw_config\n        api.set_config(api.config())\n        config.flows.clear()\n        #ixnetwork = api._ixnetwork\n    \n        p1, p2 = config.ports\n        d1, d2, d3, d4 = config.devices.device(name=\"enc_only_macsec1\").device(name=\"enc_only_macsec2\").device(name=\"enc_only_macsec3\").device(name=\"enc_only_macsec4\")\n    \n        eth1, eth2 = d1.ethernets.add(), d2.ethernets.add()\n        eth3, eth4 = d3.ethernets.add(), d4.ethernets.add()\n    \n        eth1.connection.port_name, eth2.connection.port_name = p1.name, p2.name\n        eth3.connection.port_name, eth4.connection.port_name = p1.name, p2.name\n    \n        eth1.mac, eth2.mac = \"00:00:11:00:00:01\", \"00:00:22:00:00:02\"\n        eth3.mac, eth4.mac = \"00:00:33:00:00:01\", \"00:00:44:00:00:02\"\n    \n        ip1, ip2 = eth1.ipv4_addresses.add(), eth2.ipv4_addresses.add()\n        ip3, ip4 = eth3.ipv4_addresses.add(), eth4.ipv4_addresses.add()\n    \n        eth1.name, eth2.name = \"eth1\", \"eth2\"\n        eth3.name, eth4.name = \"eth3\", \"eth4\"\n    \n        ip1.name, ip2.name = \"ip1\", \"ip2\"\n        ip3.name, ip4.name = \"ip3\", \"ip4\"\n    \n        ####################\n        # MACsec\n        ####################\n        macsec1, macsec2 = d1.macsec, d2.macsec\n        macsec3, macsec4 = d3.macsec, d4.macsec\n    \n        macsec1_int, macsec2_int = macsec1.ethernet_interfaces.add(), macsec2.ethernet_interfaces.add()\n        macsec3_int, macsec4_int = macsec3.ethernet_interfaces.add(), macsec4.ethernet_interfaces.add()\n    \n        macsec1_int.eth_name, macsec2_int.eth_name = eth1.name, eth2.name\n        macsec3_int.eth_name, macsec4_int.eth_name = eth3.name, eth4.name\n    \n        secy1, secy2 = macsec1_int.secure_entity, macsec2_int.secure_entity\n        secy3, secy4 = macsec3_int.secure_entity, macsec4_int.secure_entity\n    \n        secy1.name, secy2.name = \"macsec1\", \"macsec2\"\n        secy3.name, secy4.name = \"macsec3\", \"macsec4\"\n    \n        # Data plane and crypto engine\n        secy1.data_plane.choice = secy2.data_plane.choice = \"encapsulation\"\n        secy3.data_plane.choice = secy4.data_plane.choice = \"encapsulation\"\n    \n        secy1.data_plane.encapsulation.crypto_engine.choice = secy2.data_plane.encapsulation.crypto_engine.choice = \"encrypt_only\"\n        secy3.data_plane.encapsulation.crypto_engine.choice = secy4.data_plane.encapsulation.crypto_engine.choice = \"encrypt_only\"\n    \n        # Data plane and crypto engine\n        secy1_crypto_engine_enc_only, secy2_crypto_engine_enc_only = secy1.data_plane.encapsulation.crypto_engine.encrypt_only, secy2.data_plane.encapsulation.crypto_engine.encrypt_only\n        secy3_crypto_engine_enc_only, secy4_crypto_engine_enc_only = secy3.data_plane.encapsulation.crypto_engine.encrypt_only, secy4.data_plane.encapsulation.crypto_engine.encrypt_only\n    \n        # Data plane Tx SC\n        secy1_dataplane_txsc1, secy2_dataplane_txsc1 = secy1_crypto_engine_enc_only.secure_channels.add(), secy2_crypto_engine_enc_only.secure_channels.add()\n        secy3_dataplane_txsc1, secy4_dataplane_txsc1 = secy3_crypto_engine_enc_only.secure_channels.add(), secy4_crypto_engine_enc_only.secure_channels.add()\n    \n        # Fixed PN\n        secy1_dataplane_txsc1.tx_pn.choice = secy2_dataplane_txsc1.tx_pn.choice = \"fixed_pn\"\n        secy3_dataplane_txsc1.tx_pn.choice = secy4_dataplane_txsc1.tx_pn.choice = \"fixed_pn\"\n    \n        ####################\n        # MKA\n        ####################\n        secy1_key_gen_proto, secy2_key_gen_proto = secy1.key_generation_protocol, secy2.key_generation_protocol\n        secy3_key_gen_proto, secy4_key_gen_proto = secy3.key_generation_protocol, secy4.key_generation_protocol\n    \n        secy1_key_gen_proto.choice = secy2_key_gen_proto.choice = \"mka\"\n        secy3_key_gen_proto.choice = secy4_key_gen_proto.choice = \"mka\"\n    \n        kay1, kay2 = secy1_key_gen_proto.mka, secy2_key_gen_proto.mka\n        kay3, kay4 = secy3_key_gen_proto.mka, secy4_key_gen_proto.mka\n    \n        kay1.name, kay2.name = \"mka1\", \"mka2\"\n        kay3.name, kay4.name = \"mka3\", \"mka4\"\n    \n        # Basic properties\n        kay1.basic.key_derivation_function = kay2.basic.key_derivation_function = \"aes_cmac_128\"\n        kay3.basic.key_derivation_function = kay4.basic.key_derivation_function = \"aes_cmac_128\"\n    \n        # Key source: PSK\n        kay1_key_src, kay2_key_src = kay1.basic.key_source, kay2.basic.key_source\n        kay3_key_src, kay4_key_src = kay3.basic.key_source, kay4.basic.key_source\n    \n        kay1_key_src.choice = kay2_key_src.choice = \"psk\"\n        kay3_key_src.choice = kay4_key_src.choice = \"psk\"\n    \n        kay1_psk_chain, kay2_psk_chain = kay1_key_src.psks, kay2_key_src.psks\n        kay3_psk_chain, kay4_psk_chain = kay3_key_src.psks, kay4_key_src.psks\n    \n        # PSK 1\n        kay1_psk1, kay2_psk1 = kay1_psk_chain.add(), kay2_psk_chain.add()\n        kay3_psk1, kay4_psk1 = kay3_psk_chain.add(), kay4_psk_chain.add()\n    \n        kay1_psk1.cak_name = kay2_psk1.cak_name = kay3_psk1.cak_name = kay4_psk1.cak_name = \"0xF123456789ABCDEF0123456789ABCDEFF123456789ABCDEF0123456789ABCD01\"\n        kay1_psk1.cak_value = kay2_psk1.cak_value = kay3_psk1.cak_value = kay4_psk1.cak_value = \"0xF123456789ABCDEF0123456789ABCD01\"\n    \n        kay1_psk1.start_offset_time.hh = kay2_psk1.start_offset_time.hh = kay3_psk1.start_offset_time.hh = kay4_psk1.start_offset_time.hh = 0\n        kay1_psk1.start_offset_time.mm = kay2_psk1.start_offset_time.mm = kay3_psk1.start_offset_time.mm = kay4_psk1.start_offset_time.mm = 0\n    \n        kay1_psk1.end_offset_time.hh = kay2_psk1.end_offset_time.hh = kay3_psk1.end_offset_time.hh = kay4_psk1.end_offset_time.hh = 0\n        kay1_psk1.end_offset_time.hh = kay2_psk1.end_offset_time.hh = kay3_psk1.end_offset_time.hh = kay4_psk1.end_offset_time.hh = 0\n    \n        # Rekey mode\n        kay1_rekey_mode, kay2_rekey_mode, kay3_rekey_mode, kay4_rekey_mode = kay1.basic.rekey_mode, kay2.basic.rekey_mode, kay3.basic.rekey_mode, kay4.basic.rekey_mode\n        kay1_rekey_mode.choice = kay2_rekey_mode.choice = kay3_rekey_mode.choice = kay4_rekey_mode.choice = \"dont_rekey\"\n    \n        # Remaining basic properties autofilled\n    \n        # Key server\n        kay1_key_server, kay2_key_server, kay3_key_server, kay4_key_server = kay1.key_server, kay2.key_server, kay3.key_server, kay4.key_server\n        kay1_key_server.cipher_suite = kay2_key_server.cipher_suite = kay3_key_server.cipher_suite = kay4_key_server.cipher_suite = \"gcm_aes_128\"\n    \n        # Tx SC\n        kay1_tx, kay2_tx, kay3_tx, kay4_tx = kay1.tx, kay2.tx, kay3.tx, kay4.tx\n        kay1_txsc1, kay2_txsc1, kay3_txsc1, kay4_txsc1 = kay1_tx.secure_channels.add(), kay2_tx.secure_channels.add(), kay3_tx.secure_channels.add(), kay4_tx.secure_channels.add()\n    \n        kay1_txsc1.name, kay2_txsc1.name, kay3_txsc1.name, kay4_txsc1.name = \"txsc1\", \"txsc2\", \"txsc3\", \"txsc4\"\n        kay1_txsc1.system_id, kay2_txsc1.system_id, kay3_txsc1.system_id, kay4_txsc1.system_id = eth1.mac, eth2.mac, eth3.mac, eth4.mac\n        # Remaining Tx SC settings autofilled\n    \n        ####################\n        # Traffic\n        ####################\n        # Gratuitous ARP is sent so that DUT can learn our IP. Grat ARP source/destination are local address\n        # DUT MAC needs to be configured manually stateless encyption only engine cannot decrypt any packet including DUT ARP\n        ip1.address = \"10.1.1.1\"\n        ip2.address = \"10.1.1.2\"\n        ip3.address = \"10.1.1.3\"\n        ip4.address = \"10.1.1.4\"\n    \n        ip1.prefix = ip2.prefix = ip3.prefix = ip4.prefix =24\n    \n        ip1.gateway = ip2.address\n        ip2.gateway = ip1.address\n    \n        ip3.gateway = ip4.address\n        ip4.gateway = ip3.address\n    \n        ip1.gateway_mac.choice = \"value\"\n        ip1.gateway_mac.value = eth2.mac\n    \n        ip2.gateway_mac.choice = \"value\"\n        ip2.gateway_mac.value = eth1.mac\n    \n        ip3.gateway_mac.choice = \"value\"\n        ip3.gateway_mac.value = eth4.mac\n    \n        ip4.gateway_mac.choice = \"value\"\n        ip4.gateway_mac.value = eth3.mac\n    \n        # Flows\n        f1 = config.flows.flow(name=\"f1\")[-1]\n        f2 = config.flows.flow(name=\"f2\")[-1]\n    \n        # IP\n        f1.packet.ethernet().macsec().ipv4()\n        f2.packet.ethernet().macsec().ipv4()\n    \n        # DSCP\n        f1_ip = f1.packet[-1]\n        f2_ip = f2.packet[-1]\n    \n        f1_ip.priority.choice = f1_ip.priority.DSCP\n        f1_ip.priority.dscp.phb.values = [\n        f1_ip.priority.dscp.phb.CS2,\n        f1_ip.priority.dscp.phb.CS1,\n        f1_ip.priority.dscp.phb.CS5,\n        ]\n    \n        f2_ip.priority.choice = f2_ip.priority.DSCP\n        f2_ip.priority.dscp.phb.values = [\n        f2_ip.priority.dscp.phb.CS2,\n        f2_ip.priority.dscp.phb.CS1,\n        f2_ip.priority.dscp.phb.CS5,\n        ]\n    \n        f1_ip.priority.dscp.ecn.value = 3\n        f2_ip.priority.dscp.ecn.value = 3\n    \n        # IPv4 traffic from IP to IP endpoints\n        f1.tx_rx.device.tx_names = [ip1.name]\n        f2.tx_rx.device.tx_names = [ip3.name]\n    \n        f1.tx_rx.device.rx_names = [ip2.name]\n        f2.tx_rx.device.rx_names = [ip4.name]\n    \n        # Rate\n        f1.rate.pps = 5\n        f2.rate.pps = 5\n    \n        utils.start_traffic(api, config)\n    \n        ####################\n        # MKA stats\n        ####################\n        utils.wait_for(\n            lambda: results_mka_ok(api), \"stats to be as expected\", timeout_seconds=20\n        )\n        enums = [\n            \"mkpdu_tx\",\n            \"mkpdu_rx\",\n            \"live_peer_count\",\n            \"potential_peer_count\",\n            \"latest_key_tx_peer_count\",\n            \"latest_key_rx_peer_count\",\n            \"malformed_mkpdu\",\n            \"icv_mismatch\",\n        ]\n        expected_results = {\n            \"enc_only_macsec1\": [0, 0, 0, 0, 0, 0, 0, 0],\n            \"enc_only_macsec2\": [0, 0, 0, 0, 0, 0, 0, 0],\n        }\n        req = api.metrics_request()\n        req.mka.peer_names = [\"enc_only_macsec1\"]\n        results = api.get_metrics(req)\n        assert len(results.mka_metrics) == 1\n        assert results.mka_metrics[0].name == \"enc_only_macsec1\"\n        print(f\"\\n\\nMKA Result : enc_only_macsec1\\n\")\n        for mka_res in results.mka_metrics:\n            for i, enum in enumerate(enums):\n                val = expected_results[mka_res.name][i]\n                if \"session_state\" in enum:\n                    assert getattr(mka_res, enum) == val\n                else:\n                    assert getattr(mka_res, enum) >= val\n                print(f\"{enum} : {getattr(mka_res, enum)}\")\n    \n        req = api.metrics_request()\n        req.mka.peer_names = [\"enc_only_macsec2\"]\n        results = api.get_metrics(req)\n        assert len(results.mka_metrics) == 1\n        assert results.mka_metrics[0].name == \"enc_only_macsec2\"\n        print(f\"\\n\\nMKA Result : enc_only_macsec2\")\n        for mka_res in results.mka_metrics:\n            for i, enum in enumerate(enums):\n                val = expected_results[mka_res.name][i]\n                if \"session_state\" in enum:\n                    assert getattr(mka_res, enum) == val\n                else:\n                    assert getattr(mka_res, enum) >= val\n                print(f\"{enum} : {getattr(mka_res, enum)}\")\n    \n    \n        ####################\n        # MACsec stats\n        ####################\n        utils.wait_for(\n            lambda: results_macsec_ok(api), \"stats to be as expected\", timeout_seconds=30\n        )\n    \n        enums = [\n            \"session_state\",\n            \"out_pkts_protected\",\n            \"out_pkts_encrypted\",\n            \"in_pkts_ok\",\n            \"in_pkts_bad\",\n            \"in_pkts_bad_tag\",\n            \"in_pkts_late\",\n            \"in_pkts_no_sci\",\n            \"in_pkts_not_using_sa\",\n            \"in_pkts_not_valid\",\n            \"in_pkts_unknown_sci\",\n            \"in_pkts_unused_sa\",\n            \"in_pkts_invalid\",\n            \"in_pkts_untagged\",\n            \"out_octets_protected\",\n            \"out_octets_encrypted\",\n            \"in_octets_validated\",\n            \"in_octets_decrypted\",\n        ]\n        expected_results = {\n            \"enc_only_macsec1\": [\"up\", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            \"enc_only_macsec2\": [\"up\", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        }\n        req = api.metrics_request()\n        req.macsec.secure_entity_names = [\"enc_only_macsec1\"]\n        results = api.get_metrics(req)\n>       assert len(results.macsec_metrics) == 1\nE       assert 2 == 1\nE        +  where 2 = len(<snappi.snappi.MacsecMetricIter object at 0x7f8f9ee5fec0>)\nE        +    where <snappi.snappi.MacsecMetricIter object at 0x7f8f9ee5fec0> = <snappi.snappi.MetricsResponse object at 0x7f8f9de52700>.macsec_metrics\n\ntests/macsec/test_macsec_mka_multiple_devices.py:290: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"--------------------------------- Captured Log ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Config validation 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Ports configuration 4.145s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Captures configuration 0.191s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Aggregation mode speed change 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Location configuration 0.459s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Layer1 configuration 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Lag Configuration 0.088s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Convert device config : 0.554s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Create IxNetwork device config : 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Push IxNetwork device config : 0.100s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Devices configuration 0.743s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Flows configuration 0.358s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Start interfaces 0.265s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 IxNet - The Traffic Item configuration has changed and it needs to be regenerated before applying it to the Ixia hardware","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Config validation 0.014s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Ports configuration 1.219s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Captures configuration 1.248s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Location hosts ready [novus1-715849.ccu.is.keysight.com] 0.095s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Speed change not require due to redundant Layer1 config","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Aggregation mode speed change 0.005s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Location preemption [novus1-715849.ccu.is.keysight.com;1;1, novus1-715849.ccu.is.keysight.com;1;2] 0.114s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Location connect [tx, rx] 21.237s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Location state check [tx, rx] 0.347s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Location configuration 22.833s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Layer1 configuration 2.065s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Lag Configuration 0.092s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.device.macsec:macsec.py:104 MKA is configured in test","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.device.macsec:macsec.py:104 MKA is configured in test","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.device.macsec:macsec.py:104 MKA is configured in test","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.device.macsec:macsec.py:104 MKA is configured in test","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Convert device config : 0.284s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Create IxNetwork device config : 0.001s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Push IxNetwork device config : 0.754s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Devices configuration 1.126s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Flows configuration 3.908s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Start interfaces 1.915s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 IxNet - Protocols Version Mismatch.","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"IxNetwork Protocols Version: 10.80.2412.12","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Chassis Protocols Version: 10.50.2410.2","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 IxNet - The Traffic Item was modified. Please perform a Traffic Generate to update the associated traffic Flow Groups","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 IxNet - This protocol stack does not support dynamic update traffic. Please disable dynamic update on this Traffic Item.","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Captures start 2.882s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Flows generate/apply 16.656s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Flows clear statistics 10.381s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Captures start 1.692s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 Flows start 4.714s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 IxNet - The Traffic Item was modified. Please perform a Traffic Generate to update the associated traffic Flow Groups","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 IxNet - Please verify settings, available below.","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1474 IxNet - Minimum recommended offset is 5 for ports in End Of Frame Timestamp mode and 6 for ports in Floating Timestamp mode.","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"--------------------------------- Captured Out ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":51,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"pytest"},{"name":"host","value":"snappi-ixn-ci-novus10g"},{"name":"testClass","value":"macsec.test_macsec_mka_multiple_devices"},{"name":"package","value":"macsec.test_macsec_mka_multiple_devices"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":25,"broken":0,"skipped":1,"passed":22,"unknown":0,"total":48},"items":[{"uid":"a44e42924c4cd824","status":"passed","time":{"start":1747008149336,"stop":1747008270031,"duration":120695}},{"uid":"fd1fe1c56cdcaaeb","status":"passed","time":{"start":1747000959729,"stop":1747001084606,"duration":124877}},{"uid":"eb9dd35b0c5dd13c","status":"passed","time":{"start":1746646967556,"stop":1746647112671,"duration":145115}},{"uid":"87611e878bdaa286","status":"passed","time":{"start":1746534161940,"stop":1746534287432,"duration":125492}},{"uid":"f5b2faef908c04fb","status":"failed","statusDetails":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 450, in set_control_state\n    self.traffic_item.transmit(request_payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 1484, in transmit\n    self._api._traffic.Apply()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/traffic/traffic.py\", line 1395, in Apply\n    return self._execute(\"apply\", payload=payload, response_object=None)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 452, in _execute\n    response = self._connection._execute(url, payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 289, in _execute\n    return self._send_recv(\"POST\", url, payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 572, in _send_recv\n    return self._poll()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 640, in _poll\n    return self._process_response_status_code(\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 476, in _process_response_status_code\n    raise BadRequestError(message, response.status_code)\n  Error in L2/L3 Traffic Apply","time":{"start":1746512584420,"stop":1746512660100,"duration":75680}},{"uid":"4e368b857de81762","status":"passed","time":{"start":1746463364453,"stop":1746463494560,"duration":130107}},{"uid":"653ee27f6e85e809","status":"passed","time":{"start":1746454829753,"stop":1746454958232,"duration":128479}},{"uid":"d9960e63e100ce2f","status":"passed","time":{"start":1746433188387,"stop":1746433309976,"duration":121589}},{"uid":"b58e2f5894a2e562","status":"passed","time":{"start":1746421868637,"stop":1746422002927,"duration":134290}},{"uid":"3217d929f7ec2ff4","status":"failed","statusDetails":"Exception: Time out occurred while waiting for stats to be as expected","time":{"start":1746414762134,"stop":1746414881854,"duration":119720}},{"uid":"ed6378b6a71b22e8","status":"passed","time":{"start":1746232601079,"stop":1746232724699,"duration":123620}},{"uid":"7d725ac7a159ccd6","status":"passed","time":{"start":1746224382039,"stop":1746224510675,"duration":128636}},{"uid":"77547dc340d6af64","status":"passed","time":{"start":1746217344058,"stop":1746217469299,"duration":125241}},{"uid":"820a66e8fd0a1bac","status":"passed","time":{"start":1746199805015,"stop":1746199930883,"duration":125868}},{"uid":"c922fe97d54cb223","status":"passed","time":{"start":1746181689995,"stop":1746181817784,"duration":127789}},{"uid":"c781bdcc34879288","status":"passed","time":{"start":1746174663641,"stop":1746174789772,"duration":126131}},{"uid":"b1b1ba59a2bc3602","status":"passed","time":{"start":1746117825457,"stop":1746117947931,"duration":122474}},{"uid":"4317ddf6c640882e","status":"failed","statusDetails":"assert 2 == 1\n +  where 2 = len(<snappi.snappi.MkaMetricIter object at 0x7fdc7d866080>)\n +    where <snappi.snappi.MkaMetricIter object at 0x7fdc7d866080> = <snappi.snappi.MetricsResponse object at 0x7fdc79bacdb0>.mka_metrics","time":{"start":1746098916418,"stop":1746099016497,"duration":100079}},{"uid":"9c775c867954a226","status":"passed","time":{"start":1746064489784,"stop":1746064624947,"duration":135163}},{"uid":"afd60156aa48604a","status":"skipped","statusDetails":"CI-Testing","time":{"start":1746042370552,"stop":1746042370552,"duration":0}}]},"tags":[]},"source":"bb3d4a25437c065f.json","parameterValues":[]}