{"uid":"faf35a6ff567ae56","name":"test_bgpv6_routes","historyId":"pytest:traffic.test_device_bgp_ep#test_bgpv6_routes","time":{"start":1753390964676,"stop":1753391675138,"duration":710462},"status":"failed","statusMessage":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 621, in get_metrics\n    response = self.protocol_metrics.results(request)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/protocolmetrics.py\", line 518, in results\n    return self._filter_stats(protocol)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/protocolmetrics.py\", line 491, in _filter_stats\n    return self._get_per_device_group_stats(protocol)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/protocolmetrics.py\", line 381, in _get_per_device_group_stats\n    raise Exception(msg)\n \n                Could not retrive drill down view                 at row index 0 <html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html;charset=ISO-8859-1\"/>\n<title>Error 504 Gateway Timeout</title>\n</head>\n<body><h2>HTTP ERROR 504 Gateway Timeout</h2>\n<table>\n<tr><th>URI:</th><td>/api/v1/sessions/7/ixnetwork/statistics/view/14/operations/refresh</td></tr>\n<tr><th>STATUS:</th><td>504</td></tr>\n<tr><th>MESSAGE:</th><td>Gateway Timeout</td></tr>\n<tr><th>SERVLET:</th><td>default</td></tr>\n</table>\n<hr/><a href=\"https://eclipse.org/jetty\">Powered by Jetty:// 9.4.51.v20230217</a><hr/>\n\n</body>\n</html>\n\n\tCurrent Server Errors/Warnings:\n\t07/24/2025 18:11:40 [WARNING] [Traffic Generate required] The Traffic Item was modified. Please perform a Traffic Generate to update the associated traffic Flow Groups\n\t07/24/2025 18:11:55 [WARNING] [Regenerate Traffic Item Required] The Traffic Item configuration has changed and it needs to be regenerated before applying it to the Ixia hardware","statusTrace":"self = <snappi_ixnetwork.protocolmetrics.ProtocolMetrics object at 0x7f22678f0220>\nprotocol = 'bgpv6'\n\n    def _get_per_device_group_stats(self, protocol):\n        ports, v = self._port_list_in_per_port(protocol)\n        config_ports = self._port_names_from_devices()\n        indices = set(\n            [ports.index(p) for p in list(set(config_ports)) if p in ports]\n        )\n        drill_options = self._PROTO_NAME_MAP_[protocol].get(\n            \"drill_down_options\", []\n        )\n        drill_name = self._PROTO_NAME_MAP_[protocol][\"drill_down\"]\n        per_port = self._PROTO_NAME_MAP_[protocol][\"per_port\"]\n        column_names = self._RESULT_COLUMNS.get(protocol, [])\n        row_lst = list()\n        for i in indices:\n            try:\n                drill = self.ixn.Statistics.View.find(Caption=drill_name)\n                for option in drill_options:\n                    self._do_drill_down(v, per_port, i, option)\n>               self._check_if_page_ready(drill)\n\nsnappi_ixnetwork/protocolmetrics.py:374: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsnappi_ixnetwork/protocolmetrics.py:294: in _check_if_page_ready\n    view.Refresh()\n.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/statistics/view/view.py:1217: in Refresh\n    return self._execute(\"refresh\", payload=payload, response_object=None)\n.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py:452: in _execute\n    response = self._connection._execute(url, payload)\n.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py:293: in _execute\n    return self._send_recv(\"POST\", url, payload)\n.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py:600: in _send_recv\n    self._process_response_status_code(url, headers, response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ixnetwork_restpy.connection.Connection object at 0x7f2267918f10>\nurl = 'https://10.36.70.119:443/api/v1/sessions/7/ixnetwork/globals/appErrors/error'\nheaders = {'Connection': 'keep-alive', 'Content-Type': 'application/json', 'User-Agent': 'ixnetwork-restpy', 'X-Api-Key': 'd4b68b7dac174f9a98cae783a4010716', ...}\nresponse = <Response [504]>, async_status = False\n\n    def _process_response_status_code(self, url, headers, response, async_status=False):\n        errors = []\n        # add the initial error\n        if async_status is True:\n            async_status = response.json()\n            if (\n                \"message\" in async_status\n                and async_status[\"message\"] is not None\n                and \"API CONTENTION\" in async_status[\"message\"]\n            ):\n                response.status_code = 409\n            else:\n                response.status_code = 400\n            error = \"\"\n            if \"message\" in async_status and async_status[\"message\"] is not None:\n                error += \" \" + async_status[\"message\"]\n            if \"result\" in async_status and async_status[\"result\"] is not None:\n                error += \" \" + async_status[\"result\"]\n            errors.append(error)\n        else:\n            try:\n                for error in response.json()[\"errors\"]:\n                    errors.append(error[\"detail\"])\n            except:\n                errors.append(response.text)\n        # add any /globals/appErrors/error items\n        try:\n            preamble = url[\n                0 : url.find(\"/\", url.find(\"/sessions/\") + len(\"/sessions/\"))\n            ]\n            url = preamble + \"/ixnetwork/globals/appErrors/error\"\n            self._print_request(\"GET\", url)\n            error_response = self._session.request(\n                \"GET\",\n                url,\n                headers=headers,\n                verify=self._verify_cert,\n                allow_redirects=False,\n            )\n            server_info = \"\\tCurrent Server Errors/Warnings:\"\n            for error in error_response.json():\n                if error[\"errorLevel\"] in [\"kError\", \"kWarning\"]:\n                    if server_info is not None:\n                        errors.append(server_info)\n                        server_info = None\n                    errors.append(\n                        \"\\t%s [%s] [%s] %s\"\n                        % (\n                            error[\"lastModified\"],\n                            error[\"errorLevel\"][1:].upper(),\n                            error[\"name\"],\n                            error[\"description\"],\n                        )\n                    )\n        except:\n            pass\n        # raise the appropriate error\n        message = \"\\n\".join(errors)\n        logging.getLogger(__name__).debug(message)\n        if response.status_code == 400:\n            raise BadRequestError(message, response.status_code)\n        elif response.status_code == 401:\n            raise UnauthorizedError(message, response.status_code)\n        elif response.status_code == 404:\n            raise NotFoundError(message, response.status_code)\n        elif response.status_code == 409:\n            raise ResourceInUseError(message, response.status_code)\n        else:\n>           raise ServerError(message, response.status_code)\nE           ixnetwork_restpy.errors.ServerError: <html>\nE           <head>\nE           <meta http-equiv=\"Content-Type\" content=\"text/html;charset=ISO-8859-1\"/>\nE           <title>Error 504 Gateway Timeout</title>\nE           </head>\nE           <body><h2>HTTP ERROR 504 Gateway Timeout</h2>\nE           <table>\nE           <tr><th>URI:</th><td>/api/v1/sessions/7/ixnetwork/statistics/view/14/operations/refresh</td></tr>\nE           <tr><th>STATUS:</th><td>504</td></tr>\nE           <tr><th>MESSAGE:</th><td>Gateway Timeout</td></tr>\nE           <tr><th>SERVLET:</th><td>default</td></tr>\nE           </table>\nE           <hr/><a href=\"https://eclipse.org/jetty\">Powered by Jetty:// 9.4.51.v20230217</a><hr/>\nE           \nE           </body>\nE           </html>\nE           \nE           \tCurrent Server Errors/Warnings:\nE           \t07/24/2025 18:11:40 [WARNING] [Traffic Generate required] The Traffic Item was modified. Please perform a Traffic Generate to update the associated traffic Flow Groups\nE           \t07/24/2025 18:11:55 [WARNING] [Regenerate Traffic Item Required] The Traffic Item configuration has changed and it needs to be regenerated before applying it to the Ixia hardware\n\n.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py:488: ServerError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <snappi_ixnetwork.snappi_api.Api object at 0x7f2267aefa60>\nrequest = <snappi.snappi.MetricsRequest object at 0x7f22657db650>\n\n    def get_metrics(self, request):\n        \"\"\"\n        Gets port, flow and protocol metrics.\n    \n        Args\n        ----\n        - request (Union[MetricsRequest, str]): A request for Port, Flow and\n          protocol metrics.\n          The request content MUST be vase on the OpenAPI model,\n          #/components/schemas/Result.MetricsRequest\n          See the docs/openapi.yaml document for all model details\n        \"\"\"\n        try:\n            self._connect()\n            metric_req = self.metrics_request()\n            if isinstance(request, (type(metric_req), str)) is False:\n                raise TypeError(\n                    \"The content must be of type Union[MetricsRequest, str]\"\n                )\n            if isinstance(request, str) is True:\n                request = metric_req.deserialize(request)\n            # Need to change the code style when the choice Enum grows big\n            if request.get(\"choice\") == \"port\":\n                response = self.vport.results(request.port)\n                metric_res = self.metrics_response()\n                metric_res.port_metrics.deserialize(response)\n                return metric_res\n            if request.get(\"choice\") == \"flow\":\n                response = self.traffic_item.results(request.flow)\n                metric_res = self.metrics_response()\n                metric_res.flow_metrics.deserialize(response)\n                return metric_res\n            if request.get(\"choice\") == \"egress_only_tracking\":\n                response = self.traffic_item.results_egress_only_tracking(\n                    request.egress_only_tracking\n                )\n                metric_res = self.metrics_response()\n                metric_res.egress_only_tracking_metrics.deserialize(response)\n                return metric_res\n            if request.get(\"choice\") == \"lag\":\n                response = self.traffic_item.results(request.lag)\n                metric_res = self.metrics_response()\n                metric_res.lag_metrics.deserialize(response)\n                return metric_res\n            if request.get(\"choice\") == \"lacp\":\n                response = self.traffic_item.results(request.lacp)\n                metric_res = self.metrics_response()\n                metric_res.lacp_metrics.deserialize(response)\n                return metric_res\n            if request.get(\"choice\") == \"convergence\":\n                response = self._result(request.convergence)\n                metric_res = self.metrics_response()\n                metric_res.convergence_metrics.deserialize(response)\n                return metric_res\n            if request.get(\"choice\") == \"rocev2_flow\":\n                response = self.traffic_item.rocev2_flow_results(\n                    request.rocev2_flow\n                )  # noqa\n                metric_res = self.metrics_response()\n                metric_res.rocev2_flow_per_qp_metrics.deserialize(response)\n                return metric_res\n            if (\n                request.get(\"choice\")\n                in self.protocol_metrics.get_supported_protocols()\n            ):\n>               response = self.protocol_metrics.results(request)\n\nsnappi_ixnetwork/snappi_api.py:621: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsnappi_ixnetwork/protocolmetrics.py:518: in results\n    return self._filter_stats(protocol)\nsnappi_ixnetwork/protocolmetrics.py:491: in _filter_stats\n    return self._get_per_device_group_stats(protocol)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <snappi_ixnetwork.protocolmetrics.ProtocolMetrics object at 0x7f22678f0220>\nprotocol = 'bgpv6'\n\n    def _get_per_device_group_stats(self, protocol):\n        ports, v = self._port_list_in_per_port(protocol)\n        config_ports = self._port_names_from_devices()\n        indices = set(\n            [ports.index(p) for p in list(set(config_ports)) if p in ports]\n        )\n        drill_options = self._PROTO_NAME_MAP_[protocol].get(\n            \"drill_down_options\", []\n        )\n        drill_name = self._PROTO_NAME_MAP_[protocol][\"drill_down\"]\n        per_port = self._PROTO_NAME_MAP_[protocol][\"per_port\"]\n        column_names = self._RESULT_COLUMNS.get(protocol, [])\n        row_lst = list()\n        for i in indices:\n            try:\n                drill = self.ixn.Statistics.View.find(Caption=drill_name)\n                for option in drill_options:\n                    self._do_drill_down(v, per_port, i, option)\n                self._check_if_page_ready(drill)\n            except Exception as e:\n                msg = \"\"\"\n                Could not retrive drill down view \\\n                at row index {} {}\"\"\".format(\n                    i, e\n                )\n>               raise Exception(msg)\nE               Exception: \nE                               Could not retrive drill down view                 at row index 0 <html>\nE               <head>\nE               <meta http-equiv=\"Content-Type\" content=\"text/html;charset=ISO-8859-1\"/>\nE               <title>Error 504 Gateway Timeout</title>\nE               </head>\nE               <body><h2>HTTP ERROR 504 Gateway Timeout</h2>\nE               <table>\nE               <tr><th>URI:</th><td>/api/v1/sessions/7/ixnetwork/statistics/view/14/operations/refresh</td></tr>\nE               <tr><th>STATUS:</th><td>504</td></tr>\nE               <tr><th>MESSAGE:</th><td>Gateway Timeout</td></tr>\nE               <tr><th>SERVLET:</th><td>default</td></tr>\nE               </table>\nE               <hr/><a href=\"https://eclipse.org/jetty\">Powered by Jetty:// 9.4.51.v20230217</a><hr/>\nE               \nE               </body>\nE               </html>\nE               \nE               \tCurrent Server Errors/Warnings:\nE               \t07/24/2025 18:11:40 [WARNING] [Traffic Generate required] The Traffic Item was modified. Please perform a Traffic Generate to update the associated traffic Flow Groups\nE               \t07/24/2025 18:11:55 [WARNING] [Regenerate Traffic Item Required] The Traffic Item configuration has changed and it needs to be regenerated before applying it to the Ixia hardware\n\nsnappi_ixnetwork/protocolmetrics.py:381: Exception\n\nDuring handling of the above exception, another exception occurred:\n\napi = <snappi_ixnetwork.snappi_api.Api object at 0x7f2267aefa60>\nb2b_raw_config = <snappi.snappi.Config object at 0x7f2264ba12b0>\nutils = <module 'utils' from '/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/tests/utils/__init__.py'>\n\n    def test_bgpv6_routes(api, b2b_raw_config, utils):\n        \"\"\"\n        Test for the bgpv6 routes\n        \"\"\"\n        size = 1500\n        packets = 1000\n        api.set_config(api.config())\n        b2b_raw_config.flows.clear()\n    \n        p1, p2 = b2b_raw_config.ports\n        d1, d2 = b2b_raw_config.devices.device(name=\"tx_bgp\").device(name=\"rx_bgp\")\n        eth1, eth2 = d1.ethernets.add(), d2.ethernets.add()\n        eth1.connection.port_name, eth2.connection.port_name = p1.name, p2.name\n        eth1.mac, eth2.mac = \"00:00:00:00:00:11\", \"00:00:00:00:00:22\"\n        ip1, ip2 = eth1.ipv6_addresses.add(), eth2.ipv6_addresses.add()\n        bgp1, bgp2 = d1.bgp, d2.bgp\n    \n        eth1.name, eth2.name = \"eth1\", \"eth2\"\n        ip1.name, ip2.name = \"ip1\", \"ip2\"\n    \n        ip1.address = \"2000::1\"\n        ip1.gateway = \"3000::1\"\n        ip1.prefix = 64\n    \n        ip2.address = \"3000::1\"\n        ip2.gateway = \"2000::1\"\n        ip2.prefix = 64\n    \n        bgp1.router_id, bgp2.router_id = \"192.0.0.1\", \"192.0.0.2\"\n        bgp1_int, bgp2_int = bgp1.ipv6_interfaces.add(), bgp2.ipv6_interfaces.add()\n        bgp1_int.ipv6_name, bgp2_int.ipv6_name = ip1.name, ip2.name\n        bgp1_peer, bgp2_peer = bgp1_int.peers.add(), bgp2_int.peers.add()\n        bgp1_peer.name, bgp2_peer.name = \"bgp1\", \"bpg2\"\n    \n        bgp1_peer.peer_address = \"3000::1\"\n        bgp1_peer.as_type = \"ibgp\"\n        bgp1_peer.as_number = 10\n    \n        bgp2_peer.peer_address = \"2000::1\"\n        bgp2_peer.as_type = \"ibgp\"\n        bgp2_peer.as_number = 10\n    \n        bgp1_rr1 = bgp1_peer.v6_routes.add(name=\"bgp1_rr1\")\n        bgp1_rr2 = bgp1_peer.v6_routes.add(name=\"bgp1_rr2\")\n        bgp2_rr1 = bgp2_peer.v6_routes.add(name=\"bgp2_rr1\")\n        bgp2_rr2 = bgp2_peer.v6_routes.add(name=\"bgp2_rr2\")\n    \n        bgp1_rr1.addresses.add(address=\"4000::1\", prefix=64)\n        bgp1_rr2.addresses.add(address=\"5000::1\", prefix=64)\n    \n        bgp2_rr1.addresses.add(address=\"4000::1\", prefix=64)\n        bgp2_rr2.addresses.add(address=\"5000::1\", prefix=64)\n    \n        flow_bgp = b2b_raw_config.flows.flow(name=\"flow_bgp\")[-1]\n    \n        flow_bgp.rate.percentage = 1\n        flow_bgp.duration.fixed_packets.packets = packets\n        flow_bgp.size.fixed = size\n        flow_bgp.tx_rx.device.tx_names = [\n            bgp1_rr1.name,\n            bgp1_rr2.name,\n        ]\n        flow_bgp.tx_rx.device.rx_names = [\n            bgp2_rr1.name,\n            bgp2_rr2.name,\n        ]\n        flow_bgp.metrics.enable = True\n        flow_bgp.metrics.loss = True\n        utils.start_traffic(api, b2b_raw_config, start_capture=False)\n    \n        req = api.metrics_request()\n        req.bgpv6.peer_names = []\n>       results = api.get_metrics(req)\n\ntests/traffic/test_device_bgp_ep.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <snappi_ixnetwork.snappi_api.Api object at 0x7f2267aefa60>\nrequest = <snappi.snappi.MetricsRequest object at 0x7f22657db650>\n\n    def get_metrics(self, request):\n        \"\"\"\n        Gets port, flow and protocol metrics.\n    \n        Args\n        ----\n        - request (Union[MetricsRequest, str]): A request for Port, Flow and\n          protocol metrics.\n          The request content MUST be vase on the OpenAPI model,\n          #/components/schemas/Result.MetricsRequest\n          See the docs/openapi.yaml document for all model details\n        \"\"\"\n        try:\n            self._connect()\n            metric_req = self.metrics_request()\n            if isinstance(request, (type(metric_req), str)) is False:\n                raise TypeError(\n                    \"The content must be of type Union[MetricsRequest, str]\"\n                )\n            if isinstance(request, str) is True:\n                request = metric_req.deserialize(request)\n            # Need to change the code style when the choice Enum grows big\n            if request.get(\"choice\") == \"port\":\n                response = self.vport.results(request.port)\n                metric_res = self.metrics_response()\n                metric_res.port_metrics.deserialize(response)\n                return metric_res\n            if request.get(\"choice\") == \"flow\":\n                response = self.traffic_item.results(request.flow)\n                metric_res = self.metrics_response()\n                metric_res.flow_metrics.deserialize(response)\n                return metric_res\n            if request.get(\"choice\") == \"egress_only_tracking\":\n                response = self.traffic_item.results_egress_only_tracking(\n                    request.egress_only_tracking\n                )\n                metric_res = self.metrics_response()\n                metric_res.egress_only_tracking_metrics.deserialize(response)\n                return metric_res\n            if request.get(\"choice\") == \"lag\":\n                response = self.traffic_item.results(request.lag)\n                metric_res = self.metrics_response()\n                metric_res.lag_metrics.deserialize(response)\n                return metric_res\n            if request.get(\"choice\") == \"lacp\":\n                response = self.traffic_item.results(request.lacp)\n                metric_res = self.metrics_response()\n                metric_res.lacp_metrics.deserialize(response)\n                return metric_res\n            if request.get(\"choice\") == \"convergence\":\n                response = self._result(request.convergence)\n                metric_res = self.metrics_response()\n                metric_res.convergence_metrics.deserialize(response)\n                return metric_res\n            if request.get(\"choice\") == \"rocev2_flow\":\n                response = self.traffic_item.rocev2_flow_results(\n                    request.rocev2_flow\n                )  # noqa\n                metric_res = self.metrics_response()\n                metric_res.rocev2_flow_per_qp_metrics.deserialize(response)\n                return metric_res\n            if (\n                request.get(\"choice\")\n                in self.protocol_metrics.get_supported_protocols()\n            ):\n                response = self.protocol_metrics.results(request)\n                metric_res = self.metrics_response()\n                if (\n                    request.choice == \"rocev2_ipv4\"\n                    or request.choice == \"rocev2_ipv6\"\n                ):\n                    getattr(\n                        metric_res, request.choice + \"_per_peer\" + \"_metrics\"\n                    ).deserialize(response)\n                else:\n                    getattr(\n                        metric_res, request.choice + \"_metrics\"\n                    ).deserialize(response)\n                return metric_res\n        except Exception as err:\n>           raise SnappiIxnException(err)\nE           snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 621, in get_metrics\nE               response = self.protocol_metrics.results(request)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/protocolmetrics.py\", line 518, in results\nE               return self._filter_stats(protocol)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/protocolmetrics.py\", line 491, in _filter_stats\nE               return self._get_per_device_group_stats(protocol)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/protocolmetrics.py\", line 381, in _get_per_device_group_stats\nE               raise Exception(msg)\nE            \nE                           Could not retrive drill down view                 at row index 0 <html>\nE           <head>\nE           <meta http-equiv=\"Content-Type\" content=\"text/html;charset=ISO-8859-1\"/>\nE           <title>Error 504 Gateway Timeout</title>\nE           </head>\nE           <body><h2>HTTP ERROR 504 Gateway Timeout</h2>\nE           <table>\nE           <tr><th>URI:</th><td>/api/v1/sessions/7/ixnetwork/statistics/view/14/operations/refresh</td></tr>\nE           <tr><th>STATUS:</th><td>504</td></tr>\nE           <tr><th>MESSAGE:</th><td>Gateway Timeout</td></tr>\nE           <tr><th>SERVLET:</th><td>default</td></tr>\nE           </table>\nE           <hr/><a href=\"https://eclipse.org/jetty\">Powered by Jetty:// 9.4.51.v20230217</a><hr/>\nE           \nE           </body>\nE           </html>\nE           \nE           \tCurrent Server Errors/Warnings:\nE           \t07/24/2025 18:11:40 [WARNING] [Traffic Generate required] The Traffic Item was modified. Please perform a Traffic Generate to update the associated traffic Flow Groups\nE           \t07/24/2025 18:11:55 [WARNING] [Regenerate Traffic Item Required] The Traffic Item configuration has changed and it needs to be regenerated before applying it to the Ixia hardware\n\nsnappi_ixnetwork/snappi_api.py:636: SnappiIxnException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"--------------------------------- Captured Log ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Config validation 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Ports configuration 2.123s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Captures configuration 0.645s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Aggregation mode speed change 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Location configuration 1.365s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Layer1 configuration 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Lag Configuration 0.313s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Convert device config : 1.037s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Create IxNetwork device config : 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Push IxNetwork device config : 0.314s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Devices configuration 1.668s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Flows configuration 1.259s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Start interfaces 0.953s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 IxNet - The Traffic Item configuration has changed and it needs to be regenerated before applying it to the Ixia hardware","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Config validation 0.008s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Ports configuration 2.189s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Captures configuration 1.822s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Location hosts ready [10.36.70.119] 0.322s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Speed change not require due to redundant Layer1 config","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Aggregation mode speed change 0.005s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"DEBUG    ixnetwork_restpy.connection:connection.py:339 BatchFind select operation payload: {'selects': [{'from': '/api/v1/sessions/7/ixnetwork/', 'properties': [], 'children': [{'child': 'locations', 'properties': ['*'], 'filters': []}, {'child': 'ports', 'properties': ['*'], 'filters': []}], 'inlines': []}]}","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     ixnetwork_restpy.connection:connection.py:333 [0.359s] Timer @ batchfind.py:83 -> BatchFind.results: .locations 1, .ports 16","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Location preemption [10.36.70.119;1;9, 10.36.70.119;1;10] 0.344s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Location connect [tx, rx] 9.627s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Location state check [tx, rx] 1.021s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Location configuration 14.257s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Layer1 configuration 8.264s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Lag Configuration 0.409s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Convert device config : 0.996s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Create IxNetwork device config : 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Push IxNetwork device config : 2.380s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Devices configuration 3.710s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Flows configuration 4.293s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Start interfaces 7.233s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 IxNet - The Traffic Item was modified. Please perform a Traffic Generate to update the associated traffic Flow Groups","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 IxNet - One or more destination MACs or VPNs are invalid or unreachable and the packets configured to be sent to them were not created","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Flows generate/apply 2.239s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Flows clear statistics 14.478s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Captures start 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 Flows start 1.678s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1513 IxNet - The Traffic Item was modified. Please perform a Traffic Generate to update the associated traffic Flow Groups","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"DEBUG    ixnetwork_restpy.connection:connection.py:478 <html>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<head>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<meta http-equiv=\"Content-Type\" content=\"text/html;charset=ISO-8859-1\"/>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<title>Error 504 Gateway Timeout</title>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"</head>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<body><h2>HTTP ERROR 504 Gateway Timeout</h2>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<table>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<tr><th>URI:</th><td>/api/v1/sessions/7/ixnetwork/statistics/view/14/operations/refresh</td></tr>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<tr><th>STATUS:</th><td>504</td></tr>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<tr><th>MESSAGE:</th><td>Gateway Timeout</td></tr>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<tr><th>SERVLET:</th><td>default</td></tr>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"</table>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<hr/><a href=\"https://eclipse.org/jetty\">Powered by Jetty:// 9.4.51.v20230217</a><hr/>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"</body>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"</html>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"\tCurrent Server Errors/Warnings:","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"\t07/24/2025 18:11:40 [WARNING] [Traffic Generate required] The Traffic Item was modified. Please perform a Traffic Generate to update the associated traffic Flow Groups","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"\t07/24/2025 18:11:55 [WARNING] [Regenerate Traffic Item Required] The Traffic Item configuration has changed and it needs to be regenerated before applying it to the Ixia hardware","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"--------------------------------- Captured Out ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":63,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"pytest"},{"name":"host","value":"snappi-ixn-ci-novus10g"},{"name":"testClass","value":"traffic.test_device_bgp_ep"},{"name":"package","value":"traffic.test_device_bgp_ep"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":26,"broken":0,"skipped":1,"passed":151,"unknown":0,"total":178},"items":[{"uid":"f8208c95d0d8a381","status":"failed","statusDetails":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 283, in set_config\n    self.config_ixnetwork(config)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 362, in config_ixnetwork\n    self._connect()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 1007, in _connect\n    platform = TestPlatform(self._address, rest_port=self._port)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/testplatform.py\", line 80, in __init__\n    self._connection = Connection(\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 151, in __init__\n    self._scheme = self._determine_test_tool_platform(platform)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 220, in _determine_test_tool_platform\n    raise ConnectionError(\n Unable to connect to novus1-715849.ccu.is.keysight.com. Check the ip address and consider the rest_port parameter.","time":{"start":1753368506584,"stop":1753368506627,"duration":43}},{"uid":"45da59ba5dba5e84","status":"passed","time":{"start":1752836398951,"stop":1752836513653,"duration":114702}},{"uid":"eea7b1c1f0fb5a28","status":"passed","time":{"start":1752760243902,"stop":1752760333652,"duration":89750}},{"uid":"3d3fc82dfbe49cf6","status":"passed","time":{"start":1752244885705,"stop":1752244983221,"duration":97516}},{"uid":"895fbf58a89a8c8","status":"passed","time":{"start":1752145840252,"stop":1752145948454,"duration":108202}},{"uid":"8beff0638eb41b37","status":"passed","time":{"start":1751479010972,"stop":1751479123669,"duration":112697}},{"uid":"9016710e0d7d115e","status":"passed","time":{"start":1751472402834,"stop":1751472509606,"duration":106772}},{"uid":"68b5b93a04c1b844","status":"passed","time":{"start":1751283215057,"stop":1751283322418,"duration":107361}},{"uid":"2da51b21bac54400","status":"passed","time":{"start":1751276144532,"stop":1751276241571,"duration":97039}},{"uid":"2e80d84481bb5b17","status":"passed","time":{"start":1751231642336,"stop":1751231733048,"duration":90712}},{"uid":"66e8027ca08c9028","status":"passed","time":{"start":1750985352305,"stop":1750985463493,"duration":111188}},{"uid":"6831d322e60c60df","status":"passed","time":{"start":1750836697285,"stop":1750836798644,"duration":101359}},{"uid":"b3529d1f0f9c77b2","status":"passed","time":{"start":1750656827226,"stop":1750656927744,"duration":100518}},{"uid":"9f23813593f21ea4","status":"passed","time":{"start":1750246239210,"stop":1750246334997,"duration":95787}},{"uid":"b6e8c596ec0fc798","status":"passed","time":{"start":1750239203710,"stop":1750239313428,"duration":109718}},{"uid":"a3b3ee7692f84b9c","status":"passed","time":{"start":1749770085540,"stop":1749770188875,"duration":103335}},{"uid":"d02ba01dc00ca324","status":"passed","time":{"start":1749546564693,"stop":1749546674459,"duration":109766}},{"uid":"a149ca64db02ebd8","status":"passed","time":{"start":1748968328989,"stop":1748968426239,"duration":97250}},{"uid":"53f7008ad0035dc9","status":"passed","time":{"start":1748929822995,"stop":1748929915699,"duration":92704}},{"uid":"652c59dc6b92aed7","status":"passed","time":{"start":1748864245704,"stop":1748864340572,"duration":94868}}]},"tags":[]},"source":"faf35a6ff567ae56.json","parameterValues":[]}