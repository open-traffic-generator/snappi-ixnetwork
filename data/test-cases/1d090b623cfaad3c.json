{"uid":"1d090b623cfaad3c","name":"test_isis_v6_rr","historyId":"pytest:isis.test_isis_v6_route#test_isis_v6_rr","time":{"start":1761628348841,"stop":1761628457496,"duration":108655},"status":"failed","statusMessage":"AssertionError: assert 1 >= 2\n +  where 1 = getattr(<snappi.snappi.IsisMetric object at 0x7f6f96dd9990>, 'l1_database_size')","statusTrace":"api = <snappi_ixnetwork.snappi_api.Api object at 0x7f6f9777a710>\nb2b_raw_config = <snappi.snappi.Config object at 0x7f6f96f95030>\nutils = <module 'utils' from '/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/tests/utils/__init__.py'>\n\n    def test_isis_v6_rr(api, b2b_raw_config, utils):\n        \"\"\"Test only isis with v6 route range\n        - set_config\n        - start protocols\n        - verify isis metrics\n        \"\"\"\n        api.set_config(api.config())\n        b2b_raw_config.flows.clear()\n    \n        # Adding ports\n        p1, p2 = b2b_raw_config.ports\n    \n        # Device\n        p1d1, p2d1 = b2b_raw_config.devices.device(name=\"p1d1\").device(name=\"p2d1\")\n    \n        # Ethernet\n        p1d1_eth, p2d1_eth = p1d1.ethernets.add(), p2d1.ethernets.add()\n        p1d1_eth.connection.port_name = p1.name\n        p1d1_eth.name = \"p1d1_eth\"\n        p1d1_eth.mac = \"00:00:00:01:01:01\"\n        p1d1_eth.mtu = 1500\n    \n        p2d1_eth.connection.port_name = p2.name\n        p2d1_eth.name = \"p2d1_eth\"\n        p2d1_eth.mac = \"00:00:00:02:02:02\"\n        p2d1_eth.mtu = 1500\n    \n        # port 1 device 1 ipv4\n        p1d1_ipv4 = p1d1_eth.ipv4_addresses.add()\n        p1d1_ipv4.address = \"1.1.1.2\"\n        p1d1_ipv4.gateway = \"1.1.1.1\"\n        p1d1_ipv4.name = \"p1d1_ipv4\"\n        p1d1_ipv4.prefix = 24\n    \n        # port 1 device 1 isis\n        p1d1_isis = p1d1.isis\n        p1d1_isis.name = \"p1d1_isis\"\n        p1d1_isis.system_id = \"640000000001\"\n    \n        # port 1 device 1 isis basic\n        p1d1_isis.basic.ipv4_te_router_id = p1d1_ipv4.address\n        p1d1_isis.basic.hostname = \"ixia-c-port1\"\n        p1d1_isis.basic.enable_wide_metric = True\n        p1d1_isis.basic.learned_lsp_filter = True\n    \n        # port 1 device 1 isis advance\n        p1d1_isis.advanced.area_addresses = [\"490001\"]\n        p1d1_isis.advanced.csnp_interval = 10000\n        p1d1_isis.advanced.enable_hello_padding = True\n        p1d1_isis.advanced.lsp_lifetime = 1200\n        p1d1_isis.advanced.lsp_mgroup_min_trans_interval = 5000\n        p1d1_isis.advanced.lsp_refresh_rate = 900\n        p1d1_isis.advanced.max_area_addresses = 3\n        p1d1_isis.advanced.max_lsp_size = 1492\n        p1d1_isis.advanced.psnp_interval = 2000\n        p1d1_isis.advanced.enable_attached_bit = False\n    \n        # port 1 device 1 isis interface\n        p1d1_isis_intf = p1d1_isis.interfaces.add()\n        p1d1_isis_intf.eth_name = p1d1_eth.name\n        p1d1_isis_intf.network_type = \"point_to_point\"\n        p1d1_isis_intf.level_type = \"level_1\"\n        p1d1_isis_intf.metric = 10\n        p1d1_isis_intf.name = \"p1d1_isis_intf\"\n        p1d1_isis_intf.l2_settings.dead_interval = 30\n        p1d1_isis_intf.l2_settings.hello_interval = 10\n        p1d1_isis_intf.l2_settings.priority = 0\n        p1d1_isis_intf.advanced.auto_adjust_supported_protocols = True\n    \n        # port 1 device 1 isis v4 routes\n        p1d1_isis_v6routes = p1d1_isis.v6_routes.add()\n        p1d1_isis_v6routes.name = \"p1d1_isis_v6routes\"\n        p1d1_isis_v6routes.link_metric = 10\n        p1d1_isis_v6routes.origin_type = \"internal\"\n        p1d1_isis_v6routes_addr = p1d1_isis_v6routes.addresses.add()\n        p1d1_isis_v6routes_addr.address = \"1000:0:0:1::a\"\n        p1d1_isis_v6routes_addr.prefix = 64\n        p1d1_isis_v6routes_addr.count = 2\n        p1d1_isis_v6routes_addr.step = 1\n    \n        # port 2 device 1 ipv4\n        p2d1_ipv4 = p2d1_eth.ipv4_addresses.add()\n        p2d1_ipv4.address = \"1.1.1.1\"\n        p2d1_ipv4.gateway = \"1.1.1.2\"\n        p2d1_ipv4.name = \"p2d1_ipv4\"\n        p2d1_ipv4.prefix = 24\n    \n        # port 2 device 1 isis\n        p2d1_isis = p2d1.isis\n        p2d1_isis.name = \"p2d1_isis\"\n        p2d1_isis.system_id = \"650000000001\"\n    \n        # port 2 device 1 isis basic\n        p2d1_isis.basic.ipv4_te_router_id = p2d1_ipv4.address\n        p2d1_isis.basic.hostname = \"ixia-c-port2\"\n        p2d1_isis.basic.enable_wide_metric = True\n        p2d1_isis.basic.learned_lsp_filter = True\n    \n        # port 2 device 1 isis advanced\n        p2d1_isis.advanced.area_addresses = [\"490001\"]\n        p2d1_isis.advanced.csnp_interval = 10000\n        p2d1_isis.advanced.enable_hello_padding = True\n        p2d1_isis.advanced.lsp_lifetime = 1200\n        p2d1_isis.advanced.lsp_mgroup_min_trans_interval = 5000\n        p2d1_isis.advanced.lsp_refresh_rate = 900\n        p2d1_isis.advanced.max_area_addresses = 3\n        p2d1_isis.advanced.max_lsp_size = 1492\n        p2d1_isis.advanced.psnp_interval = 2000\n        p2d1_isis.advanced.enable_attached_bit = False\n    \n        # port 2 device 1 isis interface\n        p2d1_isis_intf = p2d1_isis.interfaces.add()\n        p2d1_isis_intf.eth_name = p2d1_eth.name\n        p2d1_isis_intf.network_type = \"point_to_point\"\n        p2d1_isis_intf.level_type = \"level_1\"\n        p2d1_isis_intf.metric = 10\n        p2d1_isis_intf.name = \"p2d1_isis_intf\"\n        p2d1_isis_intf.l2_settings.dead_interval = 30\n        p2d1_isis_intf.l2_settings.hello_interval = 10\n        p2d1_isis_intf.l2_settings.priority = 0\n        p2d1_isis_intf.advanced.auto_adjust_supported_protocols = True\n    \n        # port 2 device 1 isis v4 routes\n        p2d1_isis_v6routes = p2d1_isis.v6_routes.add()\n        p2d1_isis_v6routes.name = \"p2d1_isis_v6routes\"\n        p2d1_isis_v6routes.link_metric = 10\n        p2d1_isis_v6routes.origin_type = \"internal\"\n        p2d1_isis_v6routes_addr = p2d1_isis_v6routes.addresses.add()\n        p2d1_isis_v6routes_addr.address = \"1000:0:0:1::b\"\n        p2d1_isis_v6routes_addr.prefix = 64\n        p2d1_isis_v6routes_addr.count = 2\n        p2d1_isis_v6routes_addr.step = 1\n    \n        utils.start_traffic(api, b2b_raw_config)\n    \n        enums = [\n            \"l1_sessions_up\",\n            \"l1_session_flap\",\n            \"l1_database_size\",\n        ]\n    \n        expected_results = {\n            \"p1d1\": [1, 0, 2],\n            \"p2d1\": [1, 0, 2],\n        }\n    \n        time.sleep(10)\n    \n        # IS-IS metrics\n        req = api.metrics_request()\n        req.isis.router_names = []\n        req.isis.column_names = enums[:3]\n        results = api.get_metrics(req)\n    \n        assert len(results.isis_metrics) == 2\n        for isis_res in results.isis_metrics:\n            for i, enum in enumerate(enums[:3]):\n                val = expected_results[isis_res.name][i]\n                if \"l1_sessions_up\" in enum:\n                    assert getattr(isis_res, enum) == val\n                else:\n>                   assert getattr(isis_res, enum) >= val\nE                   AssertionError: assert 1 >= 2\nE                    +  where 1 = getattr(<snappi.snappi.IsisMetric object at 0x7f6f96dd9990>, 'l1_database_size')\n\ntests/isis/test_isis_v6_route.py:166: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"--------------------------------- Captured Log ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"--------------------------------- Captured Out ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"pytest"},{"name":"host","value":"snappi-ixn-ci-novus10g"},{"name":"testClass","value":"isis.test_isis_v6_route"},{"name":"package","value":"isis.test_isis_v6_route"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":59,"unknown":0,"total":67},"items":[{"uid":"51297648c7e6c8ef","status":"passed","time":{"start":1761185840043,"stop":1761185941367,"duration":101324}},{"uid":"76d92fa1ef5a11a9","status":"passed","time":{"start":1761146304006,"stop":1761146417204,"duration":113198}},{"uid":"57d1f23e9320dae9","status":"passed","time":{"start":1761134580607,"stop":1761134694140,"duration":113533}},{"uid":"56c485b6a2aead84","status":"passed","time":{"start":1760618401543,"stop":1760618510824,"duration":109281}},{"uid":"8656fed2a564e8d7","status":"passed","time":{"start":1760605650230,"stop":1760605759645,"duration":109415}},{"uid":"786135e62d68d9b9","status":"passed","time":{"start":1758714425703,"stop":1758714539404,"duration":113701}},{"uid":"ffeb1f41b94132d5","status":"passed","time":{"start":1758706091669,"stop":1758706208767,"duration":117098}},{"uid":"bc919047fa841f35","status":"passed","time":{"start":1758697949757,"stop":1758698068345,"duration":118588}},{"uid":"ca44415fd945e80b","status":"passed","time":{"start":1758689973604,"stop":1758690092658,"duration":119054}},{"uid":"97b2458d76054fa1","status":"failed","statusDetails":"assert 4 == 2\n +  where 4 = len(<snappi.snappi.IsisMetricIter object at 0x7f8318fa77c0>)\n +    where <snappi.snappi.IsisMetricIter object at 0x7f8318fa77c0> = <snappi.snappi.MetricsResponse object at 0x7f8318fad080>.isis_metrics","time":{"start":1758676870469,"stop":1758676975952,"duration":105483}},{"uid":"efc5571fb485a351","status":"passed","time":{"start":1758668705788,"stop":1758668827025,"duration":121237}},{"uid":"dea127a33f9952ef","status":"passed","time":{"start":1758660701840,"stop":1758660813016,"duration":111176}},{"uid":"2429ab5e5c07f901","status":"passed","time":{"start":1758651378745,"stop":1758651484219,"duration":105474}},{"uid":"5fab5e3430d70e7a","status":"passed","time":{"start":1758633854796,"stop":1758633970884,"duration":116088}},{"uid":"e3ffa05096b36f31","status":"passed","time":{"start":1758625583144,"stop":1758625705940,"duration":122796}},{"uid":"7e50ff0860609966","status":"passed","time":{"start":1758569175499,"stop":1758569284707,"duration":109208}},{"uid":"3637188573e5d61f","status":"passed","time":{"start":1758561165365,"stop":1758561287582,"duration":122217}},{"uid":"235a1a199dad9610","status":"passed","time":{"start":1758552031944,"stop":1758552146074,"duration":114130}},{"uid":"f454232fee3b4912","status":"passed","time":{"start":1758541969381,"stop":1758542079898,"duration":110517}},{"uid":"8bf0f940741211d8","status":"passed","time":{"start":1758534144550,"stop":1758534268352,"duration":123802}}]},"tags":[]},"source":"1d090b623cfaad3c.json","parameterValues":[]}