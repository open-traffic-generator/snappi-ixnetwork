{"uid":"314b16585ac0882e","name":"test_list_tcp_ports_e2e","historyId":"pytest:tcp.test_list_tcp_ports_e2e#test_list_tcp_ports_e2e","time":{"start":1743703353732,"stop":1743703436835,"duration":83103},"status":"failed","statusMessage":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 450, in set_control_state\n    self.traffic_item.transmit(request_payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 1321, in transmit\n    self._api._traffic.Apply()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/traffic/traffic.py\", line 1395, in Apply\n    return self._execute(\"apply\", payload=payload, response_object=None)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 452, in _execute\n    response = self._connection._execute(url, payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 289, in _execute\n    return self._send_recv(\"POST\", url, payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 572, in _send_recv\n    return self._poll()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 640, in _poll\n    return self._process_response_status_code(\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 476, in _process_response_status_code\n    raise BadRequestError(message, response.status_code)\n  Error in L2/L3 Traffic Apply","statusTrace":"self = <snappi_ixnetwork.snappi_api.Api object at 0x7f1eef548850>\npayload = <snappi.snappi.ControlState object at 0x7f1eeb6e6980>\n\n    def set_control_state(self, payload):\n        try:\n            control_option = payload.choice\n            control_obj = getattr(payload, control_option)\n            control_choice = control_obj.get(\"choice\")\n            request_payload = getattr(control_obj, control_choice)\n            self._connect()\n            event_names = []\n            event_state = None\n            event_type = control_choice\n            EventInfo = namedtuple(\n                \"EventInfo\", [\"event_type\", \"event_state\", \"event_names\"]\n            )\n            if control_option == \"port\":\n                if control_choice == \"capture\":\n                    self.capture.set_capture_state(request_payload)\n                elif control_choice == \"link\":\n                    self._TRIGGERED_EVENT = \"link\"\n                    if request_payload.port_names is not None:\n                        event_names = request_payload.port_names\n                        event_state = request_payload.state\n                    self.vport.set_link_state(request_payload)\n            elif control_option == \"protocol\":\n                if control_choice == \"all\":\n                    self.ngpf.set_protocol_state(request_payload)\n                elif control_choice == \"route\":\n                    event_state = request_payload.state\n                    with Timer(self, \"Setting route state\"):\n                        event_names = self.ngpf.set_route_state(request_payload)\n                elif control_choice == \"lacp\":\n                    self.ngpf.set_device_state(request_payload)\n            elif control_option == \"traffic\":\n>               self.traffic_item.transmit(request_payload)\n\nsnappi_ixnetwork/snappi_api.py:450: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsnappi_ixnetwork/trafficitem.py:1321: in transmit\n    self._api._traffic.Apply()\n.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/traffic/traffic.py:1395: in Apply\n    return self._execute(\"apply\", payload=payload, response_object=None)\n.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py:452: in _execute\n    response = self._connection._execute(url, payload)\n.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py:289: in _execute\n    return self._send_recv(\"POST\", url, payload)\n.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py:572: in _send_recv\n    return self._poll()\n.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py:640: in _poll\n    return self._process_response_status_code(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ixnetwork_restpy.connection.Connection object at 0x7f1eeccea9b0>\nurl = None\nheaders = {'Connection': 'keep-alive', 'Content-Type': 'application/json', 'User-Agent': 'ixnetwork-restpy', 'X-Api-Key': '72b147e77ad34d9b95881a58620960f6', ...}\nresponse = <Response [400]>\nasync_status = {'executionTimeMs': 35.0, 'id': '', 'message': None, 'progress': 100, ...}\n\n    def _process_response_status_code(self, url, headers, response, async_status=False):\n        errors = []\n        # add the initial error\n        if async_status is True:\n            async_status = response.json()\n            if (\n                \"message\" in async_status\n                and async_status[\"message\"] is not None\n                and \"API CONTENTION\" in async_status[\"message\"]\n            ):\n                response.status_code = 409\n            else:\n                response.status_code = 400\n            error = \"\"\n            if \"message\" in async_status and async_status[\"message\"] is not None:\n                error += \" \" + async_status[\"message\"]\n            if \"result\" in async_status and async_status[\"result\"] is not None:\n                error += \" \" + async_status[\"result\"]\n            errors.append(error)\n        else:\n            try:\n                for error in response.json()[\"errors\"]:\n                    errors.append(error[\"detail\"])\n            except:\n                errors.append(response.text)\n        # add any /globals/appErrors/error items\n        try:\n            preamble = url[\n                0 : url.find(\"/\", url.find(\"/sessions/\") + len(\"/sessions/\"))\n            ]\n            url = preamble + \"/ixnetwork/globals/appErrors/error\"\n            self._print_request(\"GET\", url)\n            error_response = self._session.request(\n                \"GET\",\n                url,\n                headers=headers,\n                verify=self._verify_cert,\n                allow_redirects=False,\n            )\n            server_info = \"\\tCurrent Server Errors/Warnings:\"\n            for error in error_response.json():\n                if error[\"errorLevel\"] in [\"kError\", \"kWarning\"]:\n                    if server_info is not None:\n                        errors.append(server_info)\n                        server_info = None\n                    errors.append(\n                        \"\\t%s [%s] [%s] %s\"\n                        % (\n                            error[\"lastModified\"],\n                            error[\"errorLevel\"][1:].upper(),\n                            error[\"name\"],\n                            error[\"description\"],\n                        )\n                    )\n        except:\n            pass\n        # raise the appropriate error\n        message = \"\\n\".join(errors)\n        logging.getLogger(__name__).debug(message)\n        if response.status_code == 400:\n>           raise BadRequestError(message, response.status_code)\nE           ixnetwork_restpy.errors.BadRequestError:  Error in L2/L3 Traffic Apply\n\n.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py:476: BadRequestError\n\nDuring handling of the above exception, another exception occurred:\n\napi = <snappi_ixnetwork.snappi_api.Api object at 0x7f1eef548850>\nutils = <module 'utils' from '/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/tests/utils/__init__.py'>\nb2b_raw_config = <snappi.snappi.Config object at 0x7f1eec629a30>\n\n    def test_list_tcp_ports_e2e(api, utils, b2b_raw_config):\n        \"\"\"\n        Configure a raw TCP flow with,\n        - list of 6 src ports and 3 dst ports\n        - 100 frames of 1518B size each\n        - 10% line rate\n        Validate,\n        - tx/rx frame count and bytes are as expected\n        - all captured frames have expected src and dst ports\n        \"\"\"\n        api.set_config(api.config())\n        f = b2b_raw_config.flows[0]\n        size = 1518\n        packets = 100\n        f.packet.ethernet().ipv4().tcp()\n        eth, ip, tcp = f.packet[0], f.packet[1], f.packet[2]\n        eth.src.value = \"00:CD:DC:CD:DC:CD\"\n        eth.dst.value = \"00:AB:BC:AB:BC:AB\"\n        ip.src.value = \"1.1.1.2\"\n        ip.dst.value = \"1.1.1.1\"\n        tcp.src_port.values = [5000, 5050, 5015, 5040, 5032, 5021]\n        tcp.dst_port.values = [6000, 6015, 6050]\n        f.duration.fixed_packets.packets = packets\n        f.size.fixed = size\n        f.rate.percentage = 10\n        f.metrics.enable = True\n>       utils.start_traffic(api, b2b_raw_config)\n\ntests/tcp/test_list_tcp_ports_e2e.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/utils/common.py:155: in start_traffic\n    res = api.set_control_state(cs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <snappi_ixnetwork.snappi_api.Api object at 0x7f1eef548850>\npayload = <snappi.snappi.ControlState object at 0x7f1eeb6e6980>\n\n    def set_control_state(self, payload):\n        try:\n            control_option = payload.choice\n            control_obj = getattr(payload, control_option)\n            control_choice = control_obj.get(\"choice\")\n            request_payload = getattr(control_obj, control_choice)\n            self._connect()\n            event_names = []\n            event_state = None\n            event_type = control_choice\n            EventInfo = namedtuple(\n                \"EventInfo\", [\"event_type\", \"event_state\", \"event_names\"]\n            )\n            if control_option == \"port\":\n                if control_choice == \"capture\":\n                    self.capture.set_capture_state(request_payload)\n                elif control_choice == \"link\":\n                    self._TRIGGERED_EVENT = \"link\"\n                    if request_payload.port_names is not None:\n                        event_names = request_payload.port_names\n                        event_state = request_payload.state\n                    self.vport.set_link_state(request_payload)\n            elif control_option == \"protocol\":\n                if control_choice == \"all\":\n                    self.ngpf.set_protocol_state(request_payload)\n                elif control_choice == \"route\":\n                    event_state = request_payload.state\n                    with Timer(self, \"Setting route state\"):\n                        event_names = self.ngpf.set_route_state(request_payload)\n                elif control_choice == \"lacp\":\n                    self.ngpf.set_device_state(request_payload)\n            elif control_option == \"traffic\":\n                self.traffic_item.transmit(request_payload)\n            elif control_option is not None:\n                msg = \"{} is not a supported choice for metrics; \\\n                the supported choices are \\\n                ['port', 'protocol', traffic]\".format(\n                    control_option\n                )\n                raise SnappiIxnException(400, msg)\n            self._event_info = EventInfo(event_type, event_state, event_names)\n        except Exception as err:\n>           raise SnappiIxnException(err)\nE           snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 450, in set_control_state\nE               self.traffic_item.transmit(request_payload)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 1321, in transmit\nE               self._api._traffic.Apply()\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/traffic/traffic.py\", line 1395, in Apply\nE               return self._execute(\"apply\", payload=payload, response_object=None)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 452, in _execute\nE               response = self._connection._execute(url, payload)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 289, in _execute\nE               return self._send_recv(\"POST\", url, payload)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 572, in _send_recv\nE               return self._poll()\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 640, in _poll\nE               return self._process_response_status_code(\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 476, in _process_response_status_code\nE               raise BadRequestError(message, response.status_code)\nE             Error in L2/L3 Traffic Apply\n\nsnappi_ixnetwork/snappi_api.py:460: SnappiIxnException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"--------------------------------- Captured Log ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Config validation 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Ports configuration 43.118s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Captures configuration 0.190s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Aggregation mode speed change 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Location configuration 0.458s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Layer1 configuration 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Lag Configuration 0.087s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Convert device config : 0.281s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Create IxNetwork device config : 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Push IxNetwork device config : 0.091s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Devices configuration 0.464s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Flows configuration 0.627s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Start interfaces 0.276s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Config validation 0.005s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Ports configuration 6.514s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Captures configuration 0.383s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Location hosts ready [novus1-715849.ccu.is.keysight.com] 0.105s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Speed change not require due to redundant Layer1 config","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Aggregation mode speed change 0.004s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Location preemption [novus1-715849.ccu.is.keysight.com;1;1, novus1-715849.ccu.is.keysight.com;1;2] 0.108s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Location connect [tx, rx] 2.646s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1425 tx connectedLinkDown","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1425 rx connectedLinkDown","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Location state check [tx, rx] 0.297s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Location configuration 4.190s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Layer1 configuration 7.039s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Lag Configuration 0.094s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Convert device config : 0.271s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Create IxNetwork device config : 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Push IxNetwork device config : 0.091s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Devices configuration 0.451s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Flows configuration 2.104s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Start interfaces 0.259s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 IxNet - Protocols Version Mismatch.","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"IxNetwork Protocols Version: 10.80.2412.12","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Chassis Protocols Version: 10.50.2410.2","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 IxNet - The Traffic Item was modified. Please perform a Traffic Generate to update the associated traffic Flow Groups","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Captures start 0.771s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Flows generate/apply 11.328s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"--------------------------------- Captured Out ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":41,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"pytest"},{"name":"host","value":"snappi-ixn-ci-novus10g"},{"name":"testClass","value":"tcp.test_list_tcp_ports_e2e"},{"name":"package","value":"tcp.test_list_tcp_ports_e2e"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":77,"unknown":0,"total":78},"items":[{"uid":"43b024fe84fc0896","status":"passed","time":{"start":1743696488928,"stop":1743696709492,"duration":220564}},{"uid":"d7f364fb14ec6ac4","status":"passed","time":{"start":1743689614468,"stop":1743689836484,"duration":222016}},{"uid":"8cac8b1e9a905adf","status":"passed","time":{"start":1743655642521,"stop":1743655865066,"duration":222545}},{"uid":"666a43f7f447f6bd","status":"passed","time":{"start":1743167009876,"stop":1743167230413,"duration":220537}},{"uid":"503ac3bad56ba097","status":"passed","time":{"start":1743158796170,"stop":1743159014207,"duration":218037}},{"uid":"9389b8d26f411415","status":"passed","time":{"start":1743154377859,"stop":1743154605386,"duration":227527}},{"uid":"7e89dbbb450316b4","status":"passed","time":{"start":1743142356248,"stop":1743142580301,"duration":224053}},{"uid":"6105d4c6a4e03288","status":"passed","time":{"start":1743134333235,"stop":1743134555795,"duration":222560}},{"uid":"e263421575d35de0","status":"passed","time":{"start":1743107933073,"stop":1743108160593,"duration":227520}},{"uid":"ef12fee5d5dc9668","status":"passed","time":{"start":1743101127011,"stop":1743101347577,"duration":220566}},{"uid":"d991063f41174359","status":"passed","time":{"start":1743094320105,"stop":1743094544334,"duration":224229}},{"uid":"89ac2621c422d392","status":"passed","time":{"start":1743029632067,"stop":1743029850131,"duration":218064}},{"uid":"bdec38b6e4b96eaf","status":"passed","time":{"start":1743024925670,"stop":1743025152227,"duration":226557}},{"uid":"b1231636af6e15aa","status":"passed","time":{"start":1743020239133,"stop":1743020462237,"duration":223104}},{"uid":"db4bdaeb700bc517","status":"passed","time":{"start":1743003871353,"stop":1743004095892,"duration":224539}},{"uid":"3c205e3614a5a487","status":"passed","time":{"start":1742996899832,"stop":1742997120873,"duration":221041}},{"uid":"e2ac4fad1ac5e0c9","status":"passed","time":{"start":1742993864845,"stop":1742994085882,"duration":221037}},{"uid":"c13c7dc7f61e48b6","status":"passed","time":{"start":1742381702821,"stop":1742381925274,"duration":222453}},{"uid":"2dd7d0ec11b1271f","status":"passed","time":{"start":1742374910714,"stop":1742375133180,"duration":222466}},{"uid":"36f0a3acc641cc0e","status":"passed","time":{"start":1742299164935,"stop":1742299381932,"duration":216997}}]},"tags":[]},"source":"314b16585ac0882e.json","parameterValues":[]}