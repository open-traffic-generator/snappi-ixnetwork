{"uid":"ace87c63d69500fc","name":"test_create_traffic_device[4]","historyId":"pytest:traffic.test_traffic_json#test_create_traffic_device[4]","time":{"start":1745907259784,"stop":1745907259788,"duration":4},"status":"failed","statusMessage":"AssertionError: assert {'xpath': '/traffic', 'trafficItem': [{'xpath': '/traffic/trafficItem[1]', 'name': 'f1', 'srcDestMesh': 'manyToMany', 'endpointSet': [{'xpath': '/traffic/trafficItem[1]/endpointSet[1]', 'sources': ['/topology[1]/deviceGroup[1]'], 'destinations': ['/topology[1]/deviceGroup[1]']}], 'trafficType': 'ipv4'}], 'egressOnlyTracking': []} == {'xpath': '/traffic', 'trafficItem': [{'xpath': '/traffic/trafficItem[1]', 'name': 'f1', 'srcDestMesh': 'manyToMany', 'trafficType': 'ipv4', 'endpointSet': [{'xpath': '/traffic/trafficItem[1]/endpointSet[1]', 'sources': ['/topology[1]/deviceGroup[1]'], 'destinations': ['/topology[1]/deviceGroup[1]']}]}]}\n  \n  Common items:\n  {'trafficItem': [{'endpointSet': [{'destinations': ['/topology[1]/deviceGroup[1]'],\n                                     'sources': ['/topology[1]/deviceGroup[1]'],\n                                     'xpath': '/traffic/trafficItem[1]/endpointSet[1]'}],\n                    'name': 'f1',\n                    'srcDestMesh': 'manyToMany',\n                    'trafficType': 'ipv4',\n                    'xpath': '/traffic/trafficItem[1]'}],\n   'xpath': '/traffic'}\n  Left contains 1 more item:\n  {'egressOnlyTracking': []}\n  \n  Full diff:\n    {\n  +     'egressOnlyTracking': [],\n        'trafficItem': [\n            {\n                'endpointSet': [\n                    {\n                        'destinations': [\n                            '/topology[1]/deviceGroup[1]',\n                        ],\n                        'sources': [\n                            '/topology[1]/deviceGroup[1]',\n                        ],\n                        'xpath': '/traffic/trafficItem[1]/endpointSet[1]',\n                    },\n                ],\n                'name': 'f1',\n                'srcDestMesh': 'manyToMany',\n                'trafficType': 'ipv4',\n                'xpath': '/traffic/trafficItem[1]',\n            },\n        ],\n        'xpath': '/traffic',\n    }","statusTrace":"v4_or_v6 = 4\n\n    @pytest.mark.parametrize(\"v4_or_v6\", [4, 6])\n    def test_create_traffic_device(v4_or_v6):\n        config = snappi.Api().config()\n        api = MagicMock()\n        tr_obj = TrafficItem(api)\n        ports = {\"p1\": \"/vport[1]\", \"p2\": \"/vport[2]\"}\n        ixn_obj_info = namedtuple(\"IxNobjInfo\", [\"xpath\", \"names\"])\n        devices = {\n            \"d1\": {\n                \"dev_info\": ixn_obj_info(\"/topology[1]/deviceGroup[1]\", []),\n                \"type\": \"ipv4\",\n            },\n            \"d2\": {\n                \"dev_info\": ixn_obj_info(\"/topology[1]/deviceGroup[2]\", []),\n                \"type\": \"ipv6\",\n            },\n            \"d3\": {\n                \"dev_info\": ixn_obj_info(\"/topology[1]/deviceGroup[1]\", []),\n                \"type\": \"ipv4\",\n            },\n            \"d4\": {\n                \"dev_info\": ixn_obj_info(\"/topology[1]/deviceGroup[2]\", []),\n                \"type\": \"ipv6\",\n            },\n        }\n        tr_obj.get_ports_encap = MagicMock(return_value=ports)\n        tr_obj.get_device_info = MagicMock(return_value=devices)\n        f1 = config.flows.flow(name=\"f1\")[-1]\n        f1.tx_rx.device.tx_names = [\"d1\" if v4_or_v6 == 4 else \"d2\"]\n        f1.tx_rx.device.rx_names = [\"d3\" if v4_or_v6 == 4 else \"d4\"]\n        f1.packet.ethernet().ipv4()\n        tr_device = tr_obj.create_traffic(config)\n        expected_device_type[\"trafficItem\"][0][\"endpointSet\"][0][\"sources\"] = [\n            devices[f1.tx_rx.device.tx_names[0]][\"dev_info\"].xpath\n        ]\n        expected_device_type[\"trafficItem\"][0][\"endpointSet\"][0][\n            \"destinations\"\n        ] = [devices[f1.tx_rx.device.rx_names[0]][\"dev_info\"].xpath]\n        expected_device_type[\"trafficItem\"][0][\"trafficType\"] = \"ipv%s\" % v4_or_v6\n>       assert tr_device == expected_device_type\nE       AssertionError: assert {'xpath': '/traffic', 'trafficItem': [{'xpath': '/traffic/trafficItem[1]', 'name': 'f1', 'srcDestMesh': 'manyToMany', 'endpointSet': [{'xpath': '/traffic/trafficItem[1]/endpointSet[1]', 'sources': ['/topology[1]/deviceGroup[1]'], 'destinations': ['/topology[1]/deviceGroup[1]']}], 'trafficType': 'ipv4'}], 'egressOnlyTracking': []} == {'xpath': '/traffic', 'trafficItem': [{'xpath': '/traffic/trafficItem[1]', 'name': 'f1', 'srcDestMesh': 'manyToMany', 'trafficType': 'ipv4', 'endpointSet': [{'xpath': '/traffic/trafficItem[1]/endpointSet[1]', 'sources': ['/topology[1]/deviceGroup[1]'], 'destinations': ['/topology[1]/deviceGroup[1]']}]}]}\nE         \nE         Common items:\nE         {'trafficItem': [{'endpointSet': [{'destinations': ['/topology[1]/deviceGroup[1]'],\nE                                            'sources': ['/topology[1]/deviceGroup[1]'],\nE                                            'xpath': '/traffic/trafficItem[1]/endpointSet[1]'}],\nE                           'name': 'f1',\nE                           'srcDestMesh': 'manyToMany',\nE                           'trafficType': 'ipv4',\nE                           'xpath': '/traffic/trafficItem[1]'}],\nE          'xpath': '/traffic'}\nE         Left contains 1 more item:\nE         {'egressOnlyTracking': []}\nE         \nE         Full diff:\nE           {\nE         +     'egressOnlyTracking': [],\nE               'trafficItem': [\nE                   {\nE                       'endpointSet': [\nE                           {\nE                               'destinations': [\nE                                   '/topology[1]/deviceGroup[1]',\nE                               ],\nE                               'sources': [\nE                                   '/topology[1]/deviceGroup[1]',\nE                               ],\nE                               'xpath': '/traffic/trafficItem[1]/endpointSet[1]',\nE                           },\nE                       ],\nE                       'name': 'f1',\nE                       'srcDestMesh': 'manyToMany',\nE                       'trafficType': 'ipv4',\nE                       'xpath': '/traffic/trafficItem[1]',\nE                   },\nE               ],\nE               'xpath': '/traffic',\nE           }\n\ntests/traffic/test_traffic_json.py:396: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"--------------------------------- Captured Log ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"--------------------------------- Captured Out ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"pytest"},{"name":"host","value":"snappi-ixn-ci-novus10g"},{"name":"testClass","value":"traffic.test_traffic_json"},{"name":"package","value":"traffic.test_traffic_json"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":92,"unknown":0,"total":97},"items":[{"uid":"6ae066a98959e735","status":"passed","time":{"start":1745902727011,"stop":1745902727018,"duration":7}},{"uid":"74cfb99f8853152","status":"failed","statusDetails":"AttributeError: 'Config' object has no attribute 'egress_only_tracking'","time":{"start":1745865135575,"stop":1745865135578,"duration":3}},{"uid":"7a3914df848fd0f2","status":"failed","statusDetails":"AttributeError: 'Config' object has no attribute 'egress_only_tracking'","time":{"start":1745841955218,"stop":1745841955221,"duration":3}},{"uid":"2d6b5de5891e2eb1","status":"passed","time":{"start":1745837550536,"stop":1745837550544,"duration":8}},{"uid":"93c36bab676ba3ff","status":"passed","time":{"start":1745833086105,"stop":1745833086114,"duration":9}},{"uid":"b4ce1c6812c38c11","status":"failed","statusDetails":"AttributeError: 'Config' object has no attribute 'egress_only_tracking'","time":{"start":1745687367675,"stop":1745687367678,"duration":3}},{"uid":"7c70d0037824ef7c","status":"passed","time":{"start":1745474974403,"stop":1745474974411,"duration":8}},{"uid":"57a66b7f684a5e20","status":"passed","time":{"start":1745302321831,"stop":1745302321839,"duration":8}},{"uid":"2082f406fc1d7005","status":"failed","statusDetails":"AttributeError: 'Config' object has no attribute 'egress_only_trackings'","time":{"start":1744642070405,"stop":1744642070407,"duration":2}},{"uid":"9c6717a52995a731","status":"passed","time":{"start":1744628606357,"stop":1744628606364,"duration":7}},{"uid":"28fe7aa4863348a0","status":"passed","time":{"start":1744607503134,"stop":1744607503141,"duration":7}},{"uid":"b75a4e8aa2506fb5","status":"passed","time":{"start":1744319569642,"stop":1744319569650,"duration":8}},{"uid":"b0bd9c82886ed0dd","status":"passed","time":{"start":1744308828836,"stop":1744308828843,"duration":7}},{"uid":"49ba7766069f9e27","status":"passed","time":{"start":1744118178111,"stop":1744118178118,"duration":7}},{"uid":"fb964452091ae07b","status":"passed","time":{"start":1744106575909,"stop":1744106575916,"duration":7}},{"uid":"642722b9be15abec","status":"passed","time":{"start":1743796899201,"stop":1743796899208,"duration":7}},{"uid":"e9620cc107121ecf","status":"passed","time":{"start":1743756339018,"stop":1743756339025,"duration":7}},{"uid":"f4ea771a2a3eb2e2","status":"passed","time":{"start":1743749241780,"stop":1743749241787,"duration":7}},{"uid":"d8eb52edbecb914e","status":"passed","time":{"start":1743703353732,"stop":1743703353739,"duration":7}},{"uid":"144cc79dae8bb147","status":"passed","time":{"start":1743696488928,"stop":1743696488935,"duration":7}}]},"tags":[]},"source":"ace87c63d69500fc.json","parameterValues":[]}