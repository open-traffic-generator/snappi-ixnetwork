{"uid":"f5b2faef908c04fb","name":"test_encrypt_with_mka_multiple_devices","historyId":"pytest:macsec.test_macsec_mka_multiple_devices#test_encrypt_with_mka_multiple_devices","time":{"start":1746512584420,"stop":1746512660100,"duration":75680},"status":"failed","statusMessage":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 450, in set_control_state\n    self.traffic_item.transmit(request_payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 1484, in transmit\n    self._api._traffic.Apply()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/traffic/traffic.py\", line 1395, in Apply\n    return self._execute(\"apply\", payload=payload, response_object=None)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 452, in _execute\n    response = self._connection._execute(url, payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 289, in _execute\n    return self._send_recv(\"POST\", url, payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 572, in _send_recv\n    return self._poll()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 640, in _poll\n    return self._process_response_status_code(\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 476, in _process_response_status_code\n    raise BadRequestError(message, response.status_code)\n  Error in L2/L3 Traffic Apply","statusTrace":"self = <snappi_ixnetwork.snappi_api.Api object at 0x7fdf1c74ea10>\npayload = <snappi.snappi.ControlState object at 0x7fdf1c1eaa70>\n\n    def set_control_state(self, payload):\n        try:\n            control_option = payload.choice\n            control_obj = getattr(payload, control_option)\n            control_choice = control_obj.get(\"choice\")\n            request_payload = getattr(control_obj, control_choice)\n            self._connect()\n            event_names = []\n            event_state = None\n            event_type = control_choice\n            EventInfo = namedtuple(\n                \"EventInfo\", [\"event_type\", \"event_state\", \"event_names\"]\n            )\n            if control_option == \"port\":\n                if control_choice == \"capture\":\n                    self.capture.set_capture_state(request_payload)\n                elif control_choice == \"link\":\n                    self._TRIGGERED_EVENT = \"link\"\n                    if request_payload.port_names is not None:\n                        event_names = request_payload.port_names\n                        event_state = request_payload.state\n                    self.vport.set_link_state(request_payload)\n            elif control_option == \"protocol\":\n                if control_choice == \"all\":\n                    self.ngpf.set_protocol_state(request_payload)\n                elif control_choice == \"route\":\n                    event_state = request_payload.state\n                    with Timer(self, \"Setting route state\"):\n                        event_names = self.ngpf.set_route_state(request_payload)\n                elif control_choice == \"lacp\":\n                    self.ngpf.set_device_state(request_payload)\n            elif control_option == \"traffic\":\n>               self.traffic_item.transmit(request_payload)\n\nsnappi_ixnetwork/snappi_api.py:450: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsnappi_ixnetwork/trafficitem.py:1484: in transmit\n    self._api._traffic.Apply()\n.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/traffic/traffic.py:1395: in Apply\n    return self._execute(\"apply\", payload=payload, response_object=None)\n.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py:452: in _execute\n    response = self._connection._execute(url, payload)\n.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py:289: in _execute\n    return self._send_recv(\"POST\", url, payload)\n.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py:572: in _send_recv\n    return self._poll()\n.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py:640: in _poll\n    return self._process_response_status_code(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ixnetwork_restpy.connection.Connection object at 0x7fdf1c7227d0>\nurl = None\nheaders = {'Connection': 'keep-alive', 'Content-Type': 'application/json', 'User-Agent': 'ixnetwork-restpy', 'X-Api-Key': '72b147e77ad34d9b95881a58620960f6', ...}\nresponse = <Response [400]>\nasync_status = {'executionTimeMs': 11.0, 'id': '', 'message': None, 'progress': 100, ...}\n\n    def _process_response_status_code(self, url, headers, response, async_status=False):\n        errors = []\n        # add the initial error\n        if async_status is True:\n            async_status = response.json()\n            if (\n                \"message\" in async_status\n                and async_status[\"message\"] is not None\n                and \"API CONTENTION\" in async_status[\"message\"]\n            ):\n                response.status_code = 409\n            else:\n                response.status_code = 400\n            error = \"\"\n            if \"message\" in async_status and async_status[\"message\"] is not None:\n                error += \" \" + async_status[\"message\"]\n            if \"result\" in async_status and async_status[\"result\"] is not None:\n                error += \" \" + async_status[\"result\"]\n            errors.append(error)\n        else:\n            try:\n                for error in response.json()[\"errors\"]:\n                    errors.append(error[\"detail\"])\n            except:\n                errors.append(response.text)\n        # add any /globals/appErrors/error items\n        try:\n            preamble = url[\n                0 : url.find(\"/\", url.find(\"/sessions/\") + len(\"/sessions/\"))\n            ]\n            url = preamble + \"/ixnetwork/globals/appErrors/error\"\n            self._print_request(\"GET\", url)\n            error_response = self._session.request(\n                \"GET\",\n                url,\n                headers=headers,\n                verify=self._verify_cert,\n                allow_redirects=False,\n            )\n            server_info = \"\\tCurrent Server Errors/Warnings:\"\n            for error in error_response.json():\n                if error[\"errorLevel\"] in [\"kError\", \"kWarning\"]:\n                    if server_info is not None:\n                        errors.append(server_info)\n                        server_info = None\n                    errors.append(\n                        \"\\t%s [%s] [%s] %s\"\n                        % (\n                            error[\"lastModified\"],\n                            error[\"errorLevel\"][1:].upper(),\n                            error[\"name\"],\n                            error[\"description\"],\n                        )\n                    )\n        except:\n            pass\n        # raise the appropriate error\n        message = \"\\n\".join(errors)\n        logging.getLogger(__name__).debug(message)\n        if response.status_code == 400:\n>           raise BadRequestError(message, response.status_code)\nE           ixnetwork_restpy.errors.BadRequestError:  Error in L2/L3 Traffic Apply\n\n.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py:476: BadRequestError\n\nDuring handling of the above exception, another exception occurred:\n\napi = <snappi_ixnetwork.snappi_api.Api object at 0x7fdf1c74ea10>\nb2b_raw_config = <snappi.snappi.Config object at 0x7fdf1c17d8f0>\nutils = <module 'utils' from '/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/tests/utils/__init__.py'>\n\n    def test_encrypt_with_mka_multiple_devices(api, b2b_raw_config, utils):\n        \"\"\"\n        Test for the macsec configuration\n        \"\"\"\n        config = b2b_raw_config\n        api.set_config(api.config())\n        config.flows.clear()\n        #ixnetwork = api._ixnetwork\n    \n        p1, p2 = config.ports\n        d1, d2, d3, d4 = config.devices.device(name=\"enc_only_macsec1\").device(name=\"enc_only_macsec2\").device(name=\"enc_only_macsec3\").device(name=\"enc_only_macsec4\")\n    \n        eth1, eth2 = d1.ethernets.add(), d2.ethernets.add()\n        eth3, eth4 = d3.ethernets.add(), d4.ethernets.add()\n    \n        eth1.connection.port_name, eth2.connection.port_name = p1.name, p2.name\n        eth3.connection.port_name, eth4.connection.port_name = p1.name, p2.name\n    \n        eth1.mac, eth2.mac = \"00:00:11:00:00:01\", \"00:00:22:00:00:02\"\n        eth3.mac, eth4.mac = \"00:00:33:00:00:01\", \"00:00:44:00:00:02\"\n    \n        ip1, ip2 = eth1.ipv4_addresses.add(), eth2.ipv4_addresses.add()\n        ip3, ip4 = eth3.ipv4_addresses.add(), eth4.ipv4_addresses.add()\n    \n        eth1.name, eth2.name = \"eth1\", \"eth2\"\n        eth3.name, eth4.name = \"eth3\", \"eth4\"\n    \n        ip1.name, ip2.name = \"ip1\", \"ip2\"\n        ip3.name, ip4.name = \"ip3\", \"ip4\"\n    \n        ####################\n        # MACsec\n        ####################\n        macsec1, macsec2 = d1.macsec, d2.macsec\n        macsec3, macsec4 = d3.macsec, d4.macsec\n    \n        macsec1_int, macsec2_int = macsec1.ethernet_interfaces.add(), macsec2.ethernet_interfaces.add()\n        macsec3_int, macsec4_int = macsec3.ethernet_interfaces.add(), macsec4.ethernet_interfaces.add()\n    \n        macsec1_int.eth_name, macsec2_int.eth_name = eth1.name, eth2.name\n        macsec3_int.eth_name, macsec4_int.eth_name = eth3.name, eth4.name\n    \n        secy1, secy2 = macsec1_int.secure_entity, macsec2_int.secure_entity\n        secy3, secy4 = macsec3_int.secure_entity, macsec4_int.secure_entity\n    \n        secy1.name, secy2.name = \"macsec1\", \"macsec2\"\n        secy3.name, secy4.name = \"macsec3\", \"macsec4\"\n    \n        # Data plane and crypto engine\n        secy1.data_plane.choice = secy2.data_plane.choice = \"encapsulation\"\n        secy3.data_plane.choice = secy4.data_plane.choice = \"encapsulation\"\n    \n        secy1.data_plane.encapsulation.crypto_engine.choice = secy2.data_plane.encapsulation.crypto_engine.choice = \"encrypt_only\"\n        secy3.data_plane.encapsulation.crypto_engine.choice = secy4.data_plane.encapsulation.crypto_engine.choice = \"encrypt_only\"\n    \n        # Data plane and crypto engine\n        secy1_crypto_engine_enc_only, secy2_crypto_engine_enc_only = secy1.data_plane.encapsulation.crypto_engine.encrypt_only, secy2.data_plane.encapsulation.crypto_engine.encrypt_only\n        secy3_crypto_engine_enc_only, secy4_crypto_engine_enc_only = secy3.data_plane.encapsulation.crypto_engine.encrypt_only, secy4.data_plane.encapsulation.crypto_engine.encrypt_only\n    \n        # Data plane Tx SC\n        secy1_dataplane_txsc1, secy2_dataplane_txsc1 = secy1_crypto_engine_enc_only.secure_channels.add(), secy2_crypto_engine_enc_only.secure_channels.add()\n        secy3_dataplane_txsc1, secy4_dataplane_txsc1 = secy3_crypto_engine_enc_only.secure_channels.add(), secy4_crypto_engine_enc_only.secure_channels.add()\n    \n        # Fixed PN\n        secy1_dataplane_txsc1.tx_pn.choice = secy2_dataplane_txsc1.tx_pn.choice = \"fixed_pn\"\n        secy3_dataplane_txsc1.tx_pn.choice = secy4_dataplane_txsc1.tx_pn.choice = \"fixed_pn\"\n    \n        ####################\n        # MKA\n        ####################\n        secy1_key_gen_proto, secy2_key_gen_proto = secy1.key_generation_protocol, secy2.key_generation_protocol\n        secy3_key_gen_proto, secy4_key_gen_proto = secy3.key_generation_protocol, secy4.key_generation_protocol\n    \n        secy1_key_gen_proto.choice = secy2_key_gen_proto.choice = \"mka\"\n        secy3_key_gen_proto.choice = secy4_key_gen_proto.choice = \"mka\"\n    \n        kay1, kay2 = secy1_key_gen_proto.mka, secy2_key_gen_proto.mka\n        kay3, kay4 = secy3_key_gen_proto.mka, secy4_key_gen_proto.mka\n    \n        kay1.name, kay2.name = \"mka1\", \"mka2\"\n        kay3.name, kay4.name = \"mka3\", \"mka4\"\n    \n        # Basic properties\n        kay1.basic.key_derivation_function = kay2.basic.key_derivation_function = \"aes_cmac_128\"\n        kay3.basic.key_derivation_function = kay4.basic.key_derivation_function = \"aes_cmac_128\"\n    \n        # Key source: PSK\n        kay1_key_src, kay2_key_src = kay1.basic.key_source, kay2.basic.key_source\n        kay3_key_src, kay4_key_src = kay3.basic.key_source, kay4.basic.key_source\n    \n        kay1_key_src.choice = kay2_key_src.choice = \"psk\"\n        kay3_key_src.choice = kay4_key_src.choice = \"psk\"\n    \n        kay1_psk_chain, kay2_psk_chain = kay1_key_src.psks, kay2_key_src.psks\n        kay3_psk_chain, kay4_psk_chain = kay3_key_src.psks, kay4_key_src.psks\n    \n        # PSK 1\n        kay1_psk1, kay2_psk1 = kay1_psk_chain.add(), kay2_psk_chain.add()\n        kay3_psk1, kay4_psk1 = kay3_psk_chain.add(), kay4_psk_chain.add()\n    \n        kay1_psk1.cak_name = kay2_psk1.cak_name = kay3_psk1.cak_name = kay4_psk1.cak_name = \"0xF123456789ABCDEF0123456789ABCDEFF123456789ABCDEF0123456789ABCD01\"\n        kay1_psk1.cak_value = kay2_psk1.cak_value = kay3_psk1.cak_value = kay4_psk1.cak_value = \"0xF123456789ABCDEF0123456789ABCD01\"\n    \n        kay1_psk1.start_offset_time.hh = kay2_psk1.start_offset_time.hh = kay3_psk1.start_offset_time.hh = kay4_psk1.start_offset_time.hh = 0\n        kay1_psk1.start_offset_time.mm = kay2_psk1.start_offset_time.mm = kay3_psk1.start_offset_time.mm = kay4_psk1.start_offset_time.mm = 0\n    \n        kay1_psk1.end_offset_time.hh = kay2_psk1.end_offset_time.hh = kay3_psk1.end_offset_time.hh = kay4_psk1.end_offset_time.hh = 0\n        kay1_psk1.end_offset_time.hh = kay2_psk1.end_offset_time.hh = kay3_psk1.end_offset_time.hh = kay4_psk1.end_offset_time.hh = 0\n    \n        # Rekey mode\n        kay1_rekey_mode, kay2_rekey_mode, kay3_rekey_mode, kay4_rekey_mode = kay1.basic.rekey_mode, kay2.basic.rekey_mode, kay3.basic.rekey_mode, kay4.basic.rekey_mode\n        kay1_rekey_mode.choice = kay2_rekey_mode.choice = kay3_rekey_mode.choice = kay4_rekey_mode.choice = \"dont_rekey\"\n    \n        # Remaining basic properties autofilled\n    \n        # Key server\n        kay1_key_server, kay2_key_server, kay3_key_server, kay4_key_server = kay1.key_server, kay2.key_server, kay3.key_server, kay4.key_server\n        kay1_key_server.cipher_suite = kay2_key_server.cipher_suite = kay3_key_server.cipher_suite = kay4_key_server.cipher_suite = \"gcm_aes_128\"\n    \n        # Tx SC\n        kay1_tx, kay2_tx, kay3_tx, kay4_tx = kay1.tx, kay2.tx, kay3.tx, kay4.tx\n        kay1_txsc1, kay2_txsc1, kay3_txsc1, kay4_txsc1 = kay1_tx.secure_channels.add(), kay2_tx.secure_channels.add(), kay3_tx.secure_channels.add(), kay4_tx.secure_channels.add()\n    \n        kay1_txsc1.name, kay2_txsc1.name, kay3_txsc1.name, kay4_txsc1.name = \"txsc1\", \"txsc2\", \"txsc3\", \"txsc4\"\n        kay1_txsc1.system_id, kay2_txsc1.system_id, kay3_txsc1.system_id, kay4_txsc1.system_id = eth1.mac, eth2.mac, eth3.mac, eth4.mac\n        # Remaining Tx SC settings autofilled\n    \n        ####################\n        # Traffic\n        ####################\n        # Gratuitous ARP is sent so that DUT can learn our IP. Grat ARP source/destination are local address\n        # DUT MAC needs to be configured manually stateless encyption only engine cannot decrypt any packet including DUT ARP\n        ip1.address = \"10.1.1.1\"\n        ip2.address = \"10.1.1.2\"\n        ip3.address = \"10.1.1.3\"\n        ip4.address = \"10.1.1.4\"\n    \n        ip1.prefix = ip2.prefix = ip3.prefix = ip4.prefix =24\n    \n        ip1.gateway = ip2.address\n        ip2.gateway = ip1.address\n    \n        ip3.gateway = ip4.address\n        ip4.gateway = ip3.address\n    \n        ip1.gateway_mac.choice = \"value\"\n        ip1.gateway_mac.value = eth2.mac\n    \n        ip2.gateway_mac.choice = \"value\"\n        ip2.gateway_mac.value = eth1.mac\n    \n        ip3.gateway_mac.choice = \"value\"\n        ip3.gateway_mac.value = eth4.mac\n    \n        ip4.gateway_mac.choice = \"value\"\n        ip4.gateway_mac.value = eth3.mac\n    \n        # Flows\n        f1 = config.flows.flow(name=\"f1\")[-1]\n        f2 = config.flows.flow(name=\"f2\")[-1]\n    \n        # IP\n        f1.packet.ethernet().macsec().ipv4()\n        f2.packet.ethernet().macsec().ipv4()\n    \n        # DSCP\n        f1_ip = f1.packet[-1]\n        f2_ip = f2.packet[-1]\n    \n        f1_ip.priority.choice = f1_ip.priority.DSCP\n        f1_ip.priority.dscp.phb.values = [\n        f1_ip.priority.dscp.phb.CS2,\n        f1_ip.priority.dscp.phb.CS1,\n        f1_ip.priority.dscp.phb.CS5,\n        ]\n    \n        f2_ip.priority.choice = f2_ip.priority.DSCP\n        f2_ip.priority.dscp.phb.values = [\n        f2_ip.priority.dscp.phb.CS2,\n        f2_ip.priority.dscp.phb.CS1,\n        f2_ip.priority.dscp.phb.CS5,\n        ]\n    \n        f1_ip.priority.dscp.ecn.value = 3\n        f2_ip.priority.dscp.ecn.value = 3\n    \n        # IPv4 traffic from IP to IP endpoints\n        f1.tx_rx.device.tx_names = [ip1.name]\n        f2.tx_rx.device.tx_names = [ip3.name]\n    \n        f1.tx_rx.device.rx_names = [ip2.name]\n        f2.tx_rx.device.rx_names = [ip4.name]\n    \n        # Rate\n        f1.rate.pps = 5\n        f2.rate.pps = 5\n    \n>       utils.start_traffic(api, config)\n\ntests/macsec/test_macsec_mka_multiple_devices.py:203: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/utils/common.py:155: in start_traffic\n    res = api.set_control_state(cs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <snappi_ixnetwork.snappi_api.Api object at 0x7fdf1c74ea10>\npayload = <snappi.snappi.ControlState object at 0x7fdf1c1eaa70>\n\n    def set_control_state(self, payload):\n        try:\n            control_option = payload.choice\n            control_obj = getattr(payload, control_option)\n            control_choice = control_obj.get(\"choice\")\n            request_payload = getattr(control_obj, control_choice)\n            self._connect()\n            event_names = []\n            event_state = None\n            event_type = control_choice\n            EventInfo = namedtuple(\n                \"EventInfo\", [\"event_type\", \"event_state\", \"event_names\"]\n            )\n            if control_option == \"port\":\n                if control_choice == \"capture\":\n                    self.capture.set_capture_state(request_payload)\n                elif control_choice == \"link\":\n                    self._TRIGGERED_EVENT = \"link\"\n                    if request_payload.port_names is not None:\n                        event_names = request_payload.port_names\n                        event_state = request_payload.state\n                    self.vport.set_link_state(request_payload)\n            elif control_option == \"protocol\":\n                if control_choice == \"all\":\n                    self.ngpf.set_protocol_state(request_payload)\n                elif control_choice == \"route\":\n                    event_state = request_payload.state\n                    with Timer(self, \"Setting route state\"):\n                        event_names = self.ngpf.set_route_state(request_payload)\n                elif control_choice == \"lacp\":\n                    self.ngpf.set_device_state(request_payload)\n            elif control_option == \"traffic\":\n                self.traffic_item.transmit(request_payload)\n            elif control_option is not None:\n                msg = \"{} is not a supported choice for metrics; \\\n                the supported choices are \\\n                ['port', 'protocol', traffic]\".format(\n                    control_option\n                )\n                raise SnappiIxnException(400, msg)\n            self._event_info = EventInfo(event_type, event_state, event_names)\n        except Exception as err:\n>           raise SnappiIxnException(err)\nE           snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 450, in set_control_state\nE               self.traffic_item.transmit(request_payload)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 1484, in transmit\nE               self._api._traffic.Apply()\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/traffic/traffic.py\", line 1395, in Apply\nE               return self._execute(\"apply\", payload=payload, response_object=None)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 452, in _execute\nE               response = self._connection._execute(url, payload)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 289, in _execute\nE               return self._send_recv(\"POST\", url, payload)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 572, in _send_recv\nE               return self._poll()\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 640, in _poll\nE               return self._process_response_status_code(\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 476, in _process_response_status_code\nE               raise BadRequestError(message, response.status_code)\nE             Error in L2/L3 Traffic Apply\n\nsnappi_ixnetwork/snappi_api.py:460: SnappiIxnException","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"--------------------------------- Captured Log ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Config validation 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Ports configuration 5.102s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Captures configuration 0.184s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Aggregation mode speed change 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Location configuration 0.375s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Layer1 configuration 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Lag Configuration 0.086s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Convert device config : 0.549s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Create IxNetwork device config : 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Push IxNetwork device config : 0.109s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Devices configuration 0.749s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Flows configuration 0.359s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Start interfaces 0.277s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 IxNet - The Traffic Item configuration has changed and it needs to be regenerated before applying it to the Ixia hardware","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Config validation 0.015s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Ports configuration 1.233s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Captures configuration 0.898s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Location hosts ready [novus1-715849.ccu.is.keysight.com] 0.096s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Speed change not require due to redundant Layer1 config","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Aggregation mode speed change 0.002s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Location preemption [novus1-715849.ccu.is.keysight.com;1;1, novus1-715849.ccu.is.keysight.com;1;2] 0.109s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Location connect [tx, rx] 19.881s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Location state check [tx, rx] 0.309s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Location configuration 21.347s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Layer1 configuration 2.687s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Lag Configuration 0.087s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.device.macsec:macsec.py:104 MKA is configured in test","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.device.macsec:macsec.py:104 MKA is configured in test","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.device.macsec:macsec.py:104 MKA is configured in test","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.device.macsec:macsec.py:104 MKA is configured in test","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Convert device config : 0.305s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Create IxNetwork device config : 0.001s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Push IxNetwork device config : 0.769s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Devices configuration 1.886s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Flows configuration 3.916s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Start interfaces 1.914s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 IxNet - Protocols Version Mismatch.","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"IxNetwork Protocols Version: 10.80.2412.12","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Chassis Protocols Version: 10.50.2410.2","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 IxNet - The Traffic Item was modified. Please perform a Traffic Generate to update the associated traffic Flow Groups","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 IxNet - This protocol stack does not support dynamic update traffic. Please disable dynamic update on this Traffic Item.","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Captures start 1.617s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1434 Flows generate/apply 11.434s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"--------------------------------- Captured Out ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":45,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"pytest"},{"name":"host","value":"snappi-ixn-ci-novus10g"},{"name":"testClass","value":"macsec.test_macsec_mka_multiple_devices"},{"name":"package","value":"macsec.test_macsec_mka_multiple_devices"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":24,"broken":0,"skipped":1,"passed":18,"unknown":0,"total":43},"items":[{"uid":"4e368b857de81762","status":"passed","time":{"start":1746463364453,"stop":1746463494560,"duration":130107}},{"uid":"653ee27f6e85e809","status":"passed","time":{"start":1746454829753,"stop":1746454958232,"duration":128479}},{"uid":"d9960e63e100ce2f","status":"passed","time":{"start":1746433188387,"stop":1746433309976,"duration":121589}},{"uid":"b58e2f5894a2e562","status":"passed","time":{"start":1746421868637,"stop":1746422002927,"duration":134290}},{"uid":"3217d929f7ec2ff4","status":"failed","statusDetails":"Exception: Time out occurred while waiting for stats to be as expected","time":{"start":1746414762134,"stop":1746414881854,"duration":119720}},{"uid":"ed6378b6a71b22e8","status":"passed","time":{"start":1746232601079,"stop":1746232724699,"duration":123620}},{"uid":"7d725ac7a159ccd6","status":"passed","time":{"start":1746224382039,"stop":1746224510675,"duration":128636}},{"uid":"77547dc340d6af64","status":"passed","time":{"start":1746217344058,"stop":1746217469299,"duration":125241}},{"uid":"820a66e8fd0a1bac","status":"passed","time":{"start":1746199805015,"stop":1746199930883,"duration":125868}},{"uid":"c922fe97d54cb223","status":"passed","time":{"start":1746181689995,"stop":1746181817784,"duration":127789}},{"uid":"c781bdcc34879288","status":"passed","time":{"start":1746174663641,"stop":1746174789772,"duration":126131}},{"uid":"b1b1ba59a2bc3602","status":"passed","time":{"start":1746117825457,"stop":1746117947931,"duration":122474}},{"uid":"4317ddf6c640882e","status":"failed","statusDetails":"assert 2 == 1\n +  where 2 = len(<snappi.snappi.MkaMetricIter object at 0x7fdc7d866080>)\n +    where <snappi.snappi.MkaMetricIter object at 0x7fdc7d866080> = <snappi.snappi.MetricsResponse object at 0x7fdc79bacdb0>.mka_metrics","time":{"start":1746098916418,"stop":1746099016497,"duration":100079}},{"uid":"9c775c867954a226","status":"passed","time":{"start":1746064489784,"stop":1746064624947,"duration":135163}},{"uid":"afd60156aa48604a","status":"skipped","statusDetails":"CI-Testing","time":{"start":1746042370552,"stop":1746042370552,"duration":0}},{"uid":"46f77c28be9edf17","status":"passed","time":{"start":1746025407819,"stop":1746025530991,"duration":123172}},{"uid":"f408ae7e988a1515","status":"passed","time":{"start":1746017351140,"stop":1746017473757,"duration":122617}},{"uid":"fc5c20e045bdc375","status":"passed","time":{"start":1745951248306,"stop":1745951377586,"duration":129280}},{"uid":"a5c03d227d3da9a9","status":"failed","statusDetails":"assert 2 == 1\n +  where 2 = len(<snappi.snappi.MacsecMetricIter object at 0x7f605b0ef900>)\n +    where <snappi.snappi.MacsecMetricIter object at 0x7f605b0ef900> = <snappi.snappi.MetricsResponse object at 0x7f605be6e520>.macsec_metrics","time":{"start":1745944306045,"stop":1745944422103,"duration":116058}},{"uid":"381d83c70b7dc334","status":"passed","time":{"start":1745937122343,"stop":1745937249227,"duration":126884}}]},"tags":[]},"source":"f5b2faef908c04fb.json","parameterValues":[]}