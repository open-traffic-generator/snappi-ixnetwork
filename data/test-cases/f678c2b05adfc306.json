{"uid":"f678c2b05adfc306","name":"test_static_and_lacp_lag","historyId":"pytest:test_lag#test_static_and_lacp_lag","time":{"start":1741764418062,"stop":1741764425874,"duration":7812},"status":"failed","statusMessage":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 276, in set_config\n    self.config_ixnetwork(config)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 361, in config_ixnetwork\n    self.lag.config()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/lag.py\", line 102, in config\n    self._protocol_config()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/lag.py\", line 311, in _protocol_config\n    ixn_static.remove()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/lag/lagportstaticlag_91864be5b58104e6349e12f415e28075.py\", line 259, in remove\n    self._delete()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 441, in _delete\n    raise e\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 438, in _delete\n    self._connection._delete(url)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 286, in _delete\n    return self._send_recv(\"DELETE\", url, payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 596, in _send_recv\n    self._process_response_status_code(url, headers, response)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 476, in _process_response_status_code\n    raise BadRequestError(message, response.status_code)\n Unable to delete /lag:6/protocolStack/ethernet:1/lagportstaticlag:1 Ethernet 1(LAG) 1: Removing a Protocol from a started Protocol stack is not permitted.\n\tCurrent Server Errors/Warnings:\n\t03/12/2025 19:38:00 [WARNING] [Protocols Version Mismatch] Protocols Version Mismatch.\nIxNetwork Protocols Version: 10.80.2412.12\nChassis Protocols Version: 10.50.2410.2\n\t03/12/2025 19:41:32 [ERROR] [Topology 1: Removing a Port from a started Topology is not permitted.] \n\t03/12/2025 19:41:34 [ERROR] [Please Stop Device Group before removing Static LAG.] \n\t03/12/2025 19:41:34 [ERROR] [Ethernet 1(LAG) 1: Removing a Protocol from a started Protocol stack is not permitted.] \n\t03/12/2025 19:37:44 [WARNING] [Traffic Generate required] The Traffic Item was modified. Please perform a Traffic Generate to update the associated traffic Flow Groups\n\t03/12/2025 19:40:57 [WARNING] [Regenerate Traffic Item Required] The Traffic Item configuration has changed and it needs to be regenerated before applying it to the Ixia hardware","statusTrace":"self = <snappi_ixnetwork.snappi_api.Api object at 0x7fbe8486e2f0>\nconfig = <snappi.snappi.Config object at 0x7fbe82f110d0>\n\n    def set_config(self, config):\n        \"\"\"Set or update the configuration\"\"\"\n        try:\n            if isinstance(config, (type(self._config_type), str)) is False:\n                raise TypeError(\n                    \"The content must be of type Union[Config, str]\"\n                )\n    \n            if isinstance(config, str) is True:\n                config = self._config_type.deserialize(config)\n>           self.config_ixnetwork(config)\n\nsnappi_ixnetwork/snappi_api.py:276: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsnappi_ixnetwork/snappi_api.py:361: in config_ixnetwork\n    self.lag.config()\nsnappi_ixnetwork/lag.py:102: in config\n    self._protocol_config()\nsnappi_ixnetwork/lag.py:311: in _protocol_config\n    ixn_static.remove()\n.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/lag/lagportstaticlag_91864be5b58104e6349e12f415e28075.py:259: in remove\n    self._delete()\n.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py:441: in _delete\n    raise e\n.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py:438: in _delete\n    self._connection._delete(url)\n.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py:286: in _delete\n    return self._send_recv(\"DELETE\", url, payload)\n.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py:596: in _send_recv\n    self._process_response_status_code(url, headers, response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ixnetwork_restpy.connection.Connection object at 0x7fbe847104f0>\nurl = 'https://novus1-715849.ccu.is.keysight.com:443/api/v1/sessions/3/ixnetwork/globals/appErrors/error'\nheaders = {'Connection': 'keep-alive', 'Content-Type': 'application/json', 'User-Agent': 'ixnetwork-restpy', 'X-Api-Key': '72b147e77ad34d9b95881a58620960f6', ...}\nresponse = <Response [400]>, async_status = False\n\n    def _process_response_status_code(self, url, headers, response, async_status=False):\n        errors = []\n        # add the initial error\n        if async_status is True:\n            async_status = response.json()\n            if (\n                \"message\" in async_status\n                and async_status[\"message\"] is not None\n                and \"API CONTENTION\" in async_status[\"message\"]\n            ):\n                response.status_code = 409\n            else:\n                response.status_code = 400\n            error = \"\"\n            if \"message\" in async_status and async_status[\"message\"] is not None:\n                error += \" \" + async_status[\"message\"]\n            if \"result\" in async_status and async_status[\"result\"] is not None:\n                error += \" \" + async_status[\"result\"]\n            errors.append(error)\n        else:\n            try:\n                for error in response.json()[\"errors\"]:\n                    errors.append(error[\"detail\"])\n            except:\n                errors.append(response.text)\n        # add any /globals/appErrors/error items\n        try:\n            preamble = url[\n                0 : url.find(\"/\", url.find(\"/sessions/\") + len(\"/sessions/\"))\n            ]\n            url = preamble + \"/ixnetwork/globals/appErrors/error\"\n            self._print_request(\"GET\", url)\n            error_response = self._session.request(\n                \"GET\",\n                url,\n                headers=headers,\n                verify=self._verify_cert,\n                allow_redirects=False,\n            )\n            server_info = \"\\tCurrent Server Errors/Warnings:\"\n            for error in error_response.json():\n                if error[\"errorLevel\"] in [\"kError\", \"kWarning\"]:\n                    if server_info is not None:\n                        errors.append(server_info)\n                        server_info = None\n                    errors.append(\n                        \"\\t%s [%s] [%s] %s\"\n                        % (\n                            error[\"lastModified\"],\n                            error[\"errorLevel\"][1:].upper(),\n                            error[\"name\"],\n                            error[\"description\"],\n                        )\n                    )\n        except:\n            pass\n        # raise the appropriate error\n        message = \"\\n\".join(errors)\n        logging.getLogger(__name__).debug(message)\n        if response.status_code == 400:\n>           raise BadRequestError(message, response.status_code)\nE           ixnetwork_restpy.errors.BadRequestError: Unable to delete /lag:6/protocolStack/ethernet:1/lagportstaticlag:1 Ethernet 1(LAG) 1: Removing a Protocol from a started Protocol stack is not permitted.\nE           \tCurrent Server Errors/Warnings:\nE           \t03/12/2025 19:38:00 [WARNING] [Protocols Version Mismatch] Protocols Version Mismatch.\nE           IxNetwork Protocols Version: 10.80.2412.12\nE           Chassis Protocols Version: 10.50.2410.2\nE           \t03/12/2025 19:41:32 [ERROR] [Topology 1: Removing a Port from a started Topology is not permitted.] \nE           \t03/12/2025 19:41:34 [ERROR] [Please Stop Device Group before removing Static LAG.] \nE           \t03/12/2025 19:41:34 [ERROR] [Ethernet 1(LAG) 1: Removing a Protocol from a started Protocol stack is not permitted.] \nE           \t03/12/2025 19:37:44 [WARNING] [Traffic Generate required] The Traffic Item was modified. Please perform a Traffic Generate to update the associated traffic Flow Groups\nE           \t03/12/2025 19:40:57 [WARNING] [Regenerate Traffic Item Required] The Traffic Item configuration has changed and it needs to be regenerated before applying it to the Ixia hardware\n\n.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py:476: BadRequestError\n\nDuring handling of the above exception, another exception occurred:\n\napi = <snappi_ixnetwork.snappi_api.Api object at 0x7fbe8486e2f0>\nutils = <module 'utils' from '/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/tests/utils/__init__.py'>\n\n    def test_static_and_lacp_lag(api, utils):\n        LACP_ATTR = {\n            \"ActorSystemId\": [\"00 22 03 00 00 03\", \"00 22 03 00 00 03\"],\n            \"ActorSystemPriority\": [\"1\", \"1\"],\n            \"ActorKey\": [\"10\", \"10\"],\n            \"ActorPortNumber\": [\"30\", \"40\"],\n            \"ActorPortPriority\": [\"100\", \"101\"],\n            \"LacpActivity\": [\"active\", \"passive\"],\n            \"LacpduPeriodicTimeInterval\": [\"5\", \"6\"],\n            \"LacpduTimeout\": [\"12\", \"13\"],\n        }\n    \n        config = api.config()\n        p1, p2, p3, p4 = (\n            config.ports.port(name=\"txp1\", location=utils.settings.ports[0])\n            .port(name=\"txp2\", location=utils.settings.ports[2])\n            .port(name=\"rxp1\", location=utils.settings.ports[1])\n            .port(name=\"rxp2\", location=utils.settings.ports[3])\n        )\n    \n        config.layer1.layer1(\n            name=\"layer1\",\n            port_names=[p.name for p in config.ports],\n            speed=utils.settings.speed,\n            media=utils.settings.media,\n        )\n    \n        lag1, lag2 = config.lags.lag(name=\"lag1\").lag(name=\"lag2\")\n        l1_p1, l1_p2 = lag1.ports.port(port_name=p1.name).port(port_name=p2.name)\n        l2_p1, l2_p2 = lag2.ports.port(port_name=p3.name).port(port_name=p4.name)\n        config.options.port_options.location_preemption = True\n    \n        lag1.protocol.static.lag_id = 5\n    \n        lag2.protocol.lacp.actor_system_id = \"00:22:03:00:00:03\"\n        lag2.protocol.lacp.actor_system_priority = int(\n            LACP_ATTR[\"ActorSystemPriority\"][0]\n        )\n        lag2.protocol.lacp.actor_key = int(LACP_ATTR[\"ActorKey\"][0])\n    \n        l2_p1.lacp.actor_port_number = int(LACP_ATTR[\"ActorPortNumber\"][0])\n        l2_p2.lacp.actor_port_number = int(LACP_ATTR[\"ActorPortNumber\"][1])\n    \n        l2_p1.lacp.actor_port_priority = int(LACP_ATTR[\"ActorPortPriority\"][0])\n        l2_p2.lacp.actor_port_priority = int(LACP_ATTR[\"ActorPortPriority\"][1])\n    \n        l2_p1.lacp.actor_activity = LACP_ATTR[\"LacpActivity\"][0]\n        l2_p2.lacp.actor_activity = LACP_ATTR[\"LacpActivity\"][1]\n    \n        l2_p1.lacp.lacpdu_periodic_time_interval = int(\n            LACP_ATTR[\"LacpduPeriodicTimeInterval\"][0]\n        )\n        l2_p2.lacp.lacpdu_periodic_time_interval = int(\n            LACP_ATTR[\"LacpduPeriodicTimeInterval\"][1]\n        )\n    \n        l2_p1.lacp.lacpdu_timeout = int(LACP_ATTR[\"LacpduTimeout\"][0])\n        l2_p2.lacp.lacpdu_timeout = int(LACP_ATTR[\"LacpduTimeout\"][1])\n    \n        l1_p1.ethernet.name, l1_p2.ethernet.name = \"eth1\", \"eth2\"\n        l2_p1.ethernet.name, l2_p2.ethernet.name = \"eth3\", \"eth4\"\n    \n        l1_p1.ethernet.mac = \"00:11:02:00:00:01\"\n        l1_p2.ethernet.mac = \"00:22:02:00:00:01\"\n        l2_p1.ethernet.mac = \"00:33:02:00:00:01\"\n        l2_p2.ethernet.mac = \"00:44:02:00:00:01\"\n    \n        l1_p1.ethernet.vlans.vlan(priority=1, name=\"vlan1\", id=1)[-1]\n        l1_p2.ethernet.vlans.vlan(priority=1, name=\"vlan2\", id=1)[-1]\n        l2_p1.ethernet.vlans.vlan(priority=1, name=\"vlan3\", id=1)[-1]\n        l2_p2.ethernet.vlans.vlan(priority=1, name=\"vlan4\", id=1)[-1]\n    \n        packets = 2000\n        f1_size = 74\n        f2_size = 1500\n        d1, d2 = config.devices.device(name=\"device1\").device(name=\"device2\")\n        eth1, eth2 = d1.ethernets.add(), d2.ethernets.add()\n        eth1.connection.port_name, eth2.connection.port_name = lag1.name, lag2.name\n        eth1.name, eth2.name = \"d_eth1\", \"d_eth2\"\n        eth1.mac, eth2.mac = \"00:00:00:00:00:11\", \"00:00:00:00:00:22\"\n        ip1, ip2 = eth1.ipv4_addresses.add(), eth2.ipv4_addresses.add()\n        ip1.name, ip2.name = \"ip1\", \"ip2\"\n        ip1.address = \"10.1.1.1\"\n        ip1.gateway = \"10.1.1.2\"\n        ip2.address = \"10.1.1.2\"\n        ip2.gateway = \"10.1.1.1\"\n        f1, f2 = config.flows.flow(name=\"f1\").flow(name=\"f2\")\n        f1.tx_rx.port.tx_name, f1.tx_rx.port.rx_name = p1.name, p2.name\n        f2.tx_rx.port.tx_name, f2.tx_rx.port.rx_name = p3.name, p4.name\n        f1.duration.fixed_packets.packets = packets\n        f2.duration.fixed_packets.packets = packets\n        f1.size.fixed = f1_size\n        f2.size.fixed = f2_size\n        f1.rate.percentage = 10\n        f2.rate.percentage = 10\n    \n>       api.set_config(config)\n\ntests/test_lag.py:372: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <snappi_ixnetwork.snappi_api.Api object at 0x7fbe8486e2f0>\nconfig = <snappi.snappi.Config object at 0x7fbe82f110d0>\n\n    def set_config(self, config):\n        \"\"\"Set or update the configuration\"\"\"\n        try:\n            if isinstance(config, (type(self._config_type), str)) is False:\n                raise TypeError(\n                    \"The content must be of type Union[Config, str]\"\n                )\n    \n            if isinstance(config, str) is True:\n                config = self._config_type.deserialize(config)\n            self.config_ixnetwork(config)\n            # CP-DP Convergence config\n            ixn_cpdpconvergence = self._traffic.Statistics.CpdpConvergence\n            ixn_cpdpconvergence.Enabled = False\n            cfg = config.get(\"events\")\n            if cfg is not None:\n                cp_events = cfg.get(\"cp_events\")\n                if cp_events is not None:\n                    cp_events_enable = cp_events.get(\"enable\")\n                else:\n                    cp_events_enable = False\n                dp_events = cfg.get(\"dp_events\")\n                if dp_events is not None:\n                    dp_events_enable = dp_events.get(\"enable\")\n                    rx_rate_threshold = dp_events.get(\"rx_rate_threshold\")\n                else:\n                    dp_events_enable = False\n                # Enable cp-dp convergence if any one of cp or dp is true\n                if cp_events_enable or dp_events_enable:\n                    ixn_cpdpconvergence.Enabled = True\n                    # For CP events\n                    if cp_events_enable:\n                        ixn_cpdpconvergence.EnableControlPlaneEvents = True\n                    # For DP events\n                    if dp_events_enable:\n                        if self.traffic_item.has_latency is True:\n                            raise Exception(\n                                \"We are supporting either latency or dp convergence\"\n                            )\n                        ixn_cpdpconvergence.EnableDataPlaneEventsRateMonitor = True\n                        ixn_cpdpconvergence.DataPlaneThreshold = rx_rate_threshold\n    \n                for ixn_traffic_item in self._traffic_item.find():\n                    ixn_traffic_item.Tracking.find()[0].TrackBy = [\n                        \"destEndpoint0\",\n                        \"destSessionDescription0\",\n                    ]\n            else:\n                ixn_cpdpconvergence.Enabled = False\n    \n        except Exception as err:\n>           raise SnappiIxnException(err)\nE           snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 276, in set_config\nE               self.config_ixnetwork(config)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 361, in config_ixnetwork\nE               self.lag.config()\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/lag.py\", line 102, in config\nE               self._protocol_config()\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/lag.py\", line 311, in _protocol_config\nE               ixn_static.remove()\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/lag/lagportstaticlag_91864be5b58104e6349e12f415e28075.py\", line 259, in remove\nE               self._delete()\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 441, in _delete\nE               raise e\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 438, in _delete\nE               self._connection._delete(url)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 286, in _delete\nE               return self._send_recv(\"DELETE\", url, payload)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 596, in _send_recv\nE               self._process_response_status_code(url, headers, response)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 476, in _process_response_status_code\nE               raise BadRequestError(message, response.status_code)\nE            Unable to delete /lag:6/protocolStack/ethernet:1/lagportstaticlag:1 Ethernet 1(LAG) 1: Removing a Protocol from a started Protocol stack is not permitted.\nE           \tCurrent Server Errors/Warnings:\nE           \t03/12/2025 19:38:00 [WARNING] [Protocols Version Mismatch] Protocols Version Mismatch.\nE           IxNetwork Protocols Version: 10.80.2412.12\nE           Chassis Protocols Version: 10.50.2410.2\nE           \t03/12/2025 19:41:32 [ERROR] [Topology 1: Removing a Port from a started Topology is not permitted.] \nE           \t03/12/2025 19:41:34 [ERROR] [Please Stop Device Group before removing Static LAG.] \nE           \t03/12/2025 19:41:34 [ERROR] [Ethernet 1(LAG) 1: Removing a Protocol from a started Protocol stack is not permitted.] \nE           \t03/12/2025 19:37:44 [WARNING] [Traffic Generate required] The Traffic Item was modified. Please perform a Traffic Generate to update the associated traffic Flow Groups\nE           \t03/12/2025 19:40:57 [WARNING] [Regenerate Traffic Item Required] The Traffic Item configuration has changed and it needs to be regenerated before applying it to the Ixia hardware\n\nsnappi_ixnetwork/snappi_api.py:317: SnappiIxnException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"--------------------------------- Captured Log ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Config validation 0.007s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Ports configuration 0.374s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Captures configuration 0.190s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Location hosts ready [novus1-715849.ccu.is.keysight.com] 0.092s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Speed change not require due to redundant Layer1 config","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Aggregation mode speed change 0.003s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Location configuration 0.934s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Layer1 configuration 2.359s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1425  kError invalidCommit Topology 1: Removing a Port from a started Topology is not permitted.","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Lag Configuration 0.587s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Lag Ethernet Configuration 0.914s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Lag Protocol Configuration 1.194s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"--------------------------------- Captured Out ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":14,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"pytest"},{"name":"host","value":"snappi-ixn-ci-novus10g"},{"name":"testClass","value":"test_lag"},{"name":"package","value":"test_lag"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":54,"unknown":0,"total":55},"items":[{"uid":"bed26c8ee07be65d","status":"passed","time":{"start":1741757585447,"stop":1741757617112,"duration":31665}},{"uid":"7d9f7fed2ac2b304","status":"passed","time":{"start":1741690639312,"stop":1741690671035,"duration":31723}},{"uid":"86da3bdeacd4540a","status":"passed","time":{"start":1741682454375,"stop":1741682487144,"duration":32769}},{"uid":"5a2cffd79dd5a2b6","status":"passed","time":{"start":1741584950599,"stop":1741584993430,"duration":42831}},{"uid":"583e8a61f1849e67","status":"passed","time":{"start":1741547140558,"stop":1741547185121,"duration":44563}},{"uid":"cea1b60aab473f89","status":"passed","time":{"start":1741459053851,"stop":1741459090630,"duration":36779}},{"uid":"18d296cf253bb121","status":"passed","time":{"start":1741451329877,"stop":1741451370134,"duration":40257}},{"uid":"690b74a6ce7ffe8a","status":"passed","time":{"start":1741375664779,"stop":1741375706120,"duration":41341}},{"uid":"7cb26349aebd083f","status":"passed","time":{"start":1741368681952,"stop":1741368720927,"duration":38975}},{"uid":"93b8b590cf62348b","status":"passed","time":{"start":1741353394880,"stop":1741353427704,"duration":32824}},{"uid":"164d715aa79cf377","status":"passed","time":{"start":1741346675485,"stop":1741346712497,"duration":37012}},{"uid":"569fe0e8de85708d","status":"passed","time":{"start":1741066144231,"stop":1741066179817,"duration":35586}},{"uid":"67f42891a2898344","status":"passed","time":{"start":1741017342205,"stop":1741017379929,"duration":37724}},{"uid":"51299e45db025816","status":"passed","time":{"start":1741010585345,"stop":1741010624141,"duration":38796}},{"uid":"17aa5a9d8108b6b6","status":"passed","time":{"start":1741003883154,"stop":1741003927459,"duration":44305}},{"uid":"cadada346485011d","status":"passed","time":{"start":1740980694046,"stop":1740980728706,"duration":34660}},{"uid":"d9ab6fb78fc80267","status":"passed","time":{"start":1740754522073,"stop":1740754552670,"duration":30597}},{"uid":"9fb5706ec333d28c","status":"passed","time":{"start":1740744573760,"stop":1740744612705,"duration":38945}},{"uid":"7e48b099bed1565e","status":"passed","time":{"start":1740671731335,"stop":1740671768667,"duration":37332}},{"uid":"e453d89762804a1","status":"passed","time":{"start":1740664925192,"stop":1740664962624,"duration":37432}}]},"tags":[]},"source":"f678c2b05adfc306.json","parameterValues":[]}