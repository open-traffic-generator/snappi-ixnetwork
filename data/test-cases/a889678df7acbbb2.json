{"uid":"a889678df7acbbb2","name":"test_update_flows","historyId":"pytest:test_update_flow#test_update_flows","time":{"start":1741764418062,"stop":1741764478437,"duration":60375},"status":"failed","statusMessage":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 450, in set_control_state\n    self.traffic_item.transmit(request_payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 1307, in transmit\n    self._api._traffic.Apply()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/traffic/traffic.py\", line 1395, in Apply\n    return self._execute(\"apply\", payload=payload, response_object=None)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 452, in _execute\n    response = self._connection._execute(url, payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 289, in _execute\n    return self._send_recv(\"POST\", url, payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 572, in _send_recv\n    return self._poll()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 640, in _poll\n    return self._process_response_status_code(\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 476, in _process_response_status_code\n    raise BadRequestError(message, response.status_code)\n  Error in L2/L3 Traffic Apply","statusTrace":"self = <snappi_ixnetwork.snappi_api.Api object at 0x7fbe8486e2f0>\npayload = <snappi.snappi.ControlState object at 0x7fbe82f11b70>\n\n    def set_control_state(self, payload):\n        try:\n            control_option = payload.choice\n            control_obj = getattr(payload, control_option)\n            control_choice = control_obj.get(\"choice\")\n            request_payload = getattr(control_obj, control_choice)\n            self._connect()\n            event_names = []\n            event_state = None\n            event_type = control_choice\n            EventInfo = namedtuple(\n                \"EventInfo\", [\"event_type\", \"event_state\", \"event_names\"]\n            )\n            if control_option == \"port\":\n                if control_choice == \"capture\":\n                    self.capture.set_capture_state(request_payload)\n                elif control_choice == \"link\":\n                    self._TRIGGERED_EVENT = \"link\"\n                    if request_payload.port_names is not None:\n                        event_names = request_payload.port_names\n                        event_state = request_payload.state\n                    self.vport.set_link_state(request_payload)\n            elif control_option == \"protocol\":\n                if control_choice == \"all\":\n                    self.ngpf.set_protocol_state(request_payload)\n                elif control_choice == \"route\":\n                    event_state = request_payload.state\n                    with Timer(self, \"Setting route state\"):\n                        event_names = self.ngpf.set_route_state(request_payload)\n                elif control_choice == \"lacp\":\n                    self.ngpf.set_device_state(request_payload)\n            elif control_option == \"traffic\":\n>               self.traffic_item.transmit(request_payload)\n\nsnappi_ixnetwork/snappi_api.py:450: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsnappi_ixnetwork/trafficitem.py:1307: in transmit\n    self._api._traffic.Apply()\n.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/traffic/traffic.py:1395: in Apply\n    return self._execute(\"apply\", payload=payload, response_object=None)\n.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py:452: in _execute\n    response = self._connection._execute(url, payload)\n.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py:289: in _execute\n    return self._send_recv(\"POST\", url, payload)\n.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py:572: in _send_recv\n    return self._poll()\n.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py:640: in _poll\n    return self._process_response_status_code(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ixnetwork_restpy.connection.Connection object at 0x7fbe847104f0>\nurl = None\nheaders = {'Connection': 'keep-alive', 'Content-Type': 'application/json', 'User-Agent': 'ixnetwork-restpy', 'X-Api-Key': '72b147e77ad34d9b95881a58620960f6', ...}\nresponse = <Response [400]>\nasync_status = {'executionTimeMs': 30008.0, 'id': '26', 'message': None, 'progress': 100, ...}\n\n    def _process_response_status_code(self, url, headers, response, async_status=False):\n        errors = []\n        # add the initial error\n        if async_status is True:\n            async_status = response.json()\n            if (\n                \"message\" in async_status\n                and async_status[\"message\"] is not None\n                and \"API CONTENTION\" in async_status[\"message\"]\n            ):\n                response.status_code = 409\n            else:\n                response.status_code = 400\n            error = \"\"\n            if \"message\" in async_status and async_status[\"message\"] is not None:\n                error += \" \" + async_status[\"message\"]\n            if \"result\" in async_status and async_status[\"result\"] is not None:\n                error += \" \" + async_status[\"result\"]\n            errors.append(error)\n        else:\n            try:\n                for error in response.json()[\"errors\"]:\n                    errors.append(error[\"detail\"])\n            except:\n                errors.append(response.text)\n        # add any /globals/appErrors/error items\n        try:\n            preamble = url[\n                0 : url.find(\"/\", url.find(\"/sessions/\") + len(\"/sessions/\"))\n            ]\n            url = preamble + \"/ixnetwork/globals/appErrors/error\"\n            self._print_request(\"GET\", url)\n            error_response = self._session.request(\n                \"GET\",\n                url,\n                headers=headers,\n                verify=self._verify_cert,\n                allow_redirects=False,\n            )\n            server_info = \"\\tCurrent Server Errors/Warnings:\"\n            for error in error_response.json():\n                if error[\"errorLevel\"] in [\"kError\", \"kWarning\"]:\n                    if server_info is not None:\n                        errors.append(server_info)\n                        server_info = None\n                    errors.append(\n                        \"\\t%s [%s] [%s] %s\"\n                        % (\n                            error[\"lastModified\"],\n                            error[\"errorLevel\"][1:].upper(),\n                            error[\"name\"],\n                            error[\"description\"],\n                        )\n                    )\n        except:\n            pass\n        # raise the appropriate error\n        message = \"\\n\".join(errors)\n        logging.getLogger(__name__).debug(message)\n        if response.status_code == 400:\n>           raise BadRequestError(message, response.status_code)\nE           ixnetwork_restpy.errors.BadRequestError:  Error in L2/L3 Traffic Apply\n\n.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py:476: BadRequestError\n\nDuring handling of the above exception, another exception occurred:\n\napi = <snappi_ixnetwork.snappi_api.Api object at 0x7fbe8486e2f0>\nb2b_raw_config = <snappi.snappi.Config object at 0x7fbe830da610>\nutils = <module 'utils' from '/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/tests/utils/__init__.py'>\n\n    def test_update_flows(api, b2b_raw_config, utils):\n        \"\"\"\n        This test is to validate update_flows API\n    \n        1. once initial config is set, the test will update rate on one flow\n           and size on other flow and validates if the rate and size got updated\n           on the fly.\n    \n        2. Negative tests include updating other properties which are not allowed\n           currently and the server should throw and exception.\n        \"\"\"\n    \n        ports = b2b_raw_config.ports\n        flow1 = b2b_raw_config.flows[0]\n        flow1.name = \"tx_flow1\"\n        flow1.packet.ethernet().ipv4()\n        flow1.packet[0].src.value = \"00:0c:29:1d:10:67\"\n        flow1.packet[0].dst.value = \"00:0c:29:1d:10:71\"\n        flow1.packet[1].src.value = \"10.10.10.1\"\n        flow1.packet[1].dst.value = \"10.10.10.2\"\n        flow2 = b2b_raw_config.flows.flow()[-1]\n        flow2.name = \"tx_flow2\"\n        flow2.tx_rx.port.tx_name = ports[0].name\n        flow2.tx_rx.port.rx_name = ports[1].name\n    \n        flow3 = b2b_raw_config.flows.flow()[-1]\n        flow3.name = \"tx_flow3\"\n        flow3.tx_rx.port.tx_name = ports[0].name\n        flow3.tx_rx.port.rx_name = ports[1].name\n    \n        flow1.duration.fixed_packets.packets = 1000\n        flow1.size.fixed = 1000\n        flow1.duration.choice = flow1.duration.CONTINUOUS\n        flow1.rate.pps = 1000\n    \n        flow2.duration.fixed_packets.packets = 1000\n        flow2.size.fixed = 1000\n        flow2.duration.choice = flow1.duration.CONTINUOUS\n        flow2.rate.pps = 1000\n    \n        flow3.duration.fixed_packets.packets = 1000\n        flow3.size.fixed = 1000\n        flow3.duration.choice = flow3.duration.CONTINUOUS\n        flow3.rate.pps = 1000\n    \n        flow1.metrics.enable = True\n        flow1.metrics.loss = True\n    \n        flow3.metrics.enable = True\n        flow3.metrics.loss = True\n    \n        api.set_config(b2b_raw_config)\n    \n>       utils.start_traffic(api, b2b_raw_config, start_capture=False)\n\ntests/test_update_flow.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/utils/common.py:155: in start_traffic\n    res = api.set_control_state(cs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <snappi_ixnetwork.snappi_api.Api object at 0x7fbe8486e2f0>\npayload = <snappi.snappi.ControlState object at 0x7fbe82f11b70>\n\n    def set_control_state(self, payload):\n        try:\n            control_option = payload.choice\n            control_obj = getattr(payload, control_option)\n            control_choice = control_obj.get(\"choice\")\n            request_payload = getattr(control_obj, control_choice)\n            self._connect()\n            event_names = []\n            event_state = None\n            event_type = control_choice\n            EventInfo = namedtuple(\n                \"EventInfo\", [\"event_type\", \"event_state\", \"event_names\"]\n            )\n            if control_option == \"port\":\n                if control_choice == \"capture\":\n                    self.capture.set_capture_state(request_payload)\n                elif control_choice == \"link\":\n                    self._TRIGGERED_EVENT = \"link\"\n                    if request_payload.port_names is not None:\n                        event_names = request_payload.port_names\n                        event_state = request_payload.state\n                    self.vport.set_link_state(request_payload)\n            elif control_option == \"protocol\":\n                if control_choice == \"all\":\n                    self.ngpf.set_protocol_state(request_payload)\n                elif control_choice == \"route\":\n                    event_state = request_payload.state\n                    with Timer(self, \"Setting route state\"):\n                        event_names = self.ngpf.set_route_state(request_payload)\n                elif control_choice == \"lacp\":\n                    self.ngpf.set_device_state(request_payload)\n            elif control_option == \"traffic\":\n                self.traffic_item.transmit(request_payload)\n            elif control_option is not None:\n                msg = \"{} is not a supported choice for metrics; \\\n                the supported choices are \\\n                ['port', 'protocol', traffic]\".format(\n                    control_option\n                )\n                raise SnappiIxnException(400, msg)\n            self._event_info = EventInfo(event_type, event_state, event_names)\n        except Exception as err:\n>           raise SnappiIxnException(err)\nE           snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 450, in set_control_state\nE               self.traffic_item.transmit(request_payload)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 1307, in transmit\nE               self._api._traffic.Apply()\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/traffic/traffic.py\", line 1395, in Apply\nE               return self._execute(\"apply\", payload=payload, response_object=None)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 452, in _execute\nE               response = self._connection._execute(url, payload)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 289, in _execute\nE               return self._send_recv(\"POST\", url, payload)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 572, in _send_recv\nE               return self._poll()\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 640, in _poll\nE               return self._process_response_status_code(\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 476, in _process_response_status_code\nE               raise BadRequestError(message, response.status_code)\nE             Error in L2/L3 Traffic Apply\n\nsnappi_ixnetwork/snappi_api.py:460: SnappiIxnException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"--------------------------------- Captured Log ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Config validation 0.008s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Ports configuration 0.977s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Captures configuration 0.372s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Location hosts ready [novus1-715849.ccu.is.keysight.com] 0.093s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Speed change not require due to redundant Layer1 config","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Aggregation mode speed change 0.005s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Location preemption [novus1-715849.ccu.is.keysight.com;1;1, novus1-715849.ccu.is.keysight.com;1;2] 1.625s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1425  kError invalidCommit Couldn't set port novus1-715849.ccu.is.keysight.com;1;2 to /vport:5. It has already been assigned to /vport:3","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Location connect [tx, rx] 4.119s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1425 tx connectedLinkDown","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"WARNING  root:snappi_api.py:1425 rx connectedLinkDown","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Location state check [tx, rx] 1.496s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Location configuration 9.176s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Layer1 configuration 1.219s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Lag Configuration 0.091s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Convert device config : 0.268s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Create IxNetwork device config : 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Push IxNetwork device config : 0.087s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Devices configuration 0.451s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Flows configuration 2.189s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Start interfaces 0.262s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 IxNet - Protocols Version Mismatch.","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"IxNetwork Protocols Version: 10.80.2412.12","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Chassis Protocols Version: 10.50.2410.2","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 IxNet - The Traffic Item was modified. Please perform a Traffic Generate to update the associated traffic Flow Groups","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Config validation 0.006s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Ports configuration 0.994s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Captures configuration 0.876s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Location hosts ready [novus1-715849.ccu.is.keysight.com] 0.094s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Speed change not require due to redundant Layer1 config","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Aggregation mode speed change 0.002s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Location configuration 0.776s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Layer1 configuration 1.606s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Lag Configuration 0.085s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Convert device config : 0.291s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Create IxNetwork device config : 0.000s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Push IxNetwork device config : 0.089s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Devices configuration 0.469s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Flows configuration 2.232s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Start interfaces 1.119s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 IxNet - The Traffic Item was modified. Please perform a Traffic Generate to update the associated traffic Flow Groups","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"DEBUG    ixnetwork_restpy.connection:connection.py:474  Error in L2/L3 Traffic Apply","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Flows generate/apply 30.691s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"--------------------------------- Captured Out ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":46,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"pytest"},{"name":"host","value":"snappi-ixn-ci-novus10g"},{"name":"testClass","value":"test_update_flow"},{"name":"package","value":"test_update_flow"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":54,"unknown":0,"total":55},"items":[{"uid":"d9f76fe6f1324a04","status":"passed","time":{"start":1741757585447,"stop":1741757653811,"duration":68364}},{"uid":"669cbe2187ba8b91","status":"passed","time":{"start":1741690639312,"stop":1741690711884,"duration":72572}},{"uid":"9c55e5a2158c8fa7","status":"passed","time":{"start":1741682454375,"stop":1741682526881,"duration":72506}},{"uid":"a210f73a433fc739","status":"passed","time":{"start":1741584950599,"stop":1741585045318,"duration":94719}},{"uid":"be9066b06269e821","status":"passed","time":{"start":1741547140558,"stop":1741547227755,"duration":87197}},{"uid":"9f3e0c4c91efab42","status":"passed","time":{"start":1741459053851,"stop":1741459141440,"duration":87589}},{"uid":"7a56be29ac24d113","status":"passed","time":{"start":1741451329877,"stop":1741451423028,"duration":93151}},{"uid":"81975068a2e7b781","status":"passed","time":{"start":1741375664779,"stop":1741375755318,"duration":90539}},{"uid":"7f289e56e9974d2e","status":"passed","time":{"start":1741368681952,"stop":1741368773976,"duration":92024}},{"uid":"cddbc575a480c7ba","status":"passed","time":{"start":1741353394880,"stop":1741353483448,"duration":88568}},{"uid":"10680cf660a277e7","status":"passed","time":{"start":1741346675485,"stop":1741346768394,"duration":92909}},{"uid":"9ca19d5013429e82","status":"passed","time":{"start":1741066144231,"stop":1741066231421,"duration":87190}},{"uid":"31b1fb6e213fce","status":"passed","time":{"start":1741017342205,"stop":1741017428457,"duration":86252}},{"uid":"a2bd1d54d035fe8d","status":"passed","time":{"start":1741010585345,"stop":1741010676275,"duration":90930}},{"uid":"8bc180b575c8dc5f","status":"passed","time":{"start":1741003883154,"stop":1741003970512,"duration":87358}},{"uid":"a5dd159ea504ac57","status":"passed","time":{"start":1740980694046,"stop":1740980780752,"duration":86706}},{"uid":"80f6193a3010531f","status":"passed","time":{"start":1740754522073,"stop":1740754610855,"duration":88782}},{"uid":"5a02bad61207b662","status":"passed","time":{"start":1740744573760,"stop":1740744660096,"duration":86336}},{"uid":"42a6d85ab937f4ce","status":"passed","time":{"start":1740671731335,"stop":1740671822017,"duration":90682}},{"uid":"7f469adaf6ee0246","status":"passed","time":{"start":1740664925192,"stop":1740665017431,"duration":92239}}]},"tags":[]},"source":"a889678df7acbbb2.json","parameterValues":[]}