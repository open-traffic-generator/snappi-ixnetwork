{"uid":"bf0431cddbbe4dc0","name":"test_convergence","historyId":"pytest:convergence.test_convergence#test_convergence","time":{"start":1744642070405,"stop":1744642076721,"duration":6316},"status":"failed","statusMessage":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 276, in set_config\n    self.config_ixnetwork(config)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 364, in config_ixnetwork\n    self.traffic_item.config()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 867, in config\n    ixn_traffic_item = self.get_ixn_config(self._config)[0]\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 534, in get_ixn_config\n    tr = self.create_traffic(config)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 688, in create_traffic\n    for snappi_eotr in config.egress_only_trackings:\n 'Config' object has no attribute 'egress_only_trackings'","statusTrace":"self = <snappi_ixnetwork.snappi_api.Api object at 0x7fbfb37abb80>\nconfig = <snappi.snappi.Config object at 0x7fbfb3090e00>\n\n    def set_config(self, config):\n        \"\"\"Set or update the configuration\"\"\"\n        try:\n            if isinstance(config, (type(self._config_type), str)) is False:\n                raise TypeError(\n                    \"The content must be of type Union[Config, str]\"\n                )\n    \n            if isinstance(config, str) is True:\n                config = self._config_type.deserialize(config)\n>           self.config_ixnetwork(config)\n\nsnappi_ixnetwork/snappi_api.py:276: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsnappi_ixnetwork/snappi_api.py:364: in config_ixnetwork\n    self.traffic_item.config()\nsnappi_ixnetwork/trafficitem.py:867: in config\n    ixn_traffic_item = self.get_ixn_config(self._config)[0]\nsnappi_ixnetwork/trafficitem.py:534: in get_ixn_config\n    tr = self.create_traffic(config)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <snappi_ixnetwork.trafficitem.TrafficItem object at 0x7fbfb5e2caf0>\nconfig = <snappi.snappi.Config object at 0x7fbfb3090e00>\n\n    def create_traffic(self, config):\n        self.logger.debug(\"Creating Traffic\")\n        flows = config.flows\n        tr = {\"xpath\": \"/traffic\", \"trafficItem\": []}\n        ports = self.get_ports_encap(config)\n        devices = self.get_device_info(config)\n        for index, flow in enumerate(flows):\n            flow_name = flow._properties.get(\"name\")\n            self.logger.debug(\"Creating Traffic Item %s\" % flow_name)\n            if flow_name is None:\n                raise Exception(\"name shall not be null for flows\")\n            if flow._properties.get(\"tx_rx\") is None:\n                msg = (\n                    \"Please configure the flow endpoint\"\n                    \"for flow indexed at %s\" % index\n                )\n                raise Exception(msg)\n            self._endpoint_validation(flow)\n            if flow.tx_rx.choice is None:\n                msg = \"Flow endpoint needs to be either port or device\"\n                raise Exception(msg)\n    \n            tr_xpath = \"/traffic/trafficItem[%d]\" % self.traffic_index\n            tr[\"trafficItem\"].append(\n                {\n                    \"xpath\": tr_xpath,\n                    \"name\": \"%s\" % flow.name,\n                    \"srcDestMesh\": self._get_mesh_type(flow),\n                }\n            )\n    \n            tr[\"trafficItem\"][-1][\"endpointSet\"] = [\n                {\n                    \"xpath\": tr[\"trafficItem\"][-1][\"xpath\"]\n                    + \"/endpointSet[1]\",\n                }\n            ]\n            if flow.tx_rx.choice == \"port\":\n                tr_type = \"raw\"\n                ep = getattr(flow.tx_rx, \"port\")\n                tx_objs = [\"%s/protocols\" % ports.get(ep.tx_name)]\n                rx_objs = [\"%s/protocols\" % ports.get(ep.rx_name)]\n                tr[\"trafficItem\"][-1][\"endpointSet\"][0][\"sources\"] = [\n                    o for o in tx_objs\n                ]\n                tr[\"trafficItem\"][-1][\"endpointSet\"][0][\"destinations\"] = [\n                    o for o in rx_objs\n                ]\n            else:\n                ep = getattr(flow.tx_rx, \"device\")\n                tr_type = devices[ep.tx_names[0]][\"type\"]\n                source = []\n                destinations = []\n                scalable_sources = []\n                scalable_destinations = []\n                self._gen_dev_endpoint(\n                    devices, ep.tx_names, source, scalable_sources\n                )\n                self._gen_dev_endpoint(\n                    devices, ep.rx_names, destinations, scalable_destinations\n                )\n                if len(source) > 0:\n                    tr[\"trafficItem\"][-1][\"endpointSet\"][0][\"sources\"] = source\n                if len(destinations) > 0:\n                    tr[\"trafficItem\"][-1][\"endpointSet\"][0][\n                        \"destinations\"\n                    ] = destinations\n                if len(scalable_sources) > 0:\n                    tr[\"trafficItem\"][-1][\"endpointSet\"][0][\n                        \"scalableSources\"\n                    ] = scalable_sources\n                if len(scalable_destinations) > 0:\n                    tr[\"trafficItem\"][-1][\"endpointSet\"][0][\n                        \"scalableDestinations\"\n                    ] = scalable_destinations\n    \n            tr[\"trafficItem\"][-1][\"trafficType\"] = tr_type\n            if tr_type == \"raw\":\n                tr[\"trafficItem\"][-1][\"configElement\"] = self.config_raw_stack(\n                    tr_xpath, self._flows_packet[index]\n                )\n            self.traffic_index += 1\n            self.logger.debug(\n                \"Flow %s converted to %s\" % (flow_name, tr[\"trafficItem\"][-1])\n            )\n    \n        # egress only tracking\n        tr[\"egressOnlyTracking\"] = []\n>       for snappi_eotr in config.egress_only_trackings:\nE       AttributeError: 'Config' object has no attribute 'egress_only_trackings'\n\nsnappi_ixnetwork/trafficitem.py:688: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\nutils = <module 'utils' from '/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/tests/utils/__init__.py'>\napi = <snappi_ixnetwork.snappi_api.Api object at 0x7fbfb37abb80>\nbgp_convergence_config = <snappi.snappi.Config object at 0x7fbfb3090e00>\n\n    def test_convergence(utils, api, bgp_convergence_config):\n        \"\"\"\n        1. set convergence config & start traffic\n        Scenario 1:\n        1. Start traffic\n        2. Withdraw Routes and see events are populated properly\n        Scenario 2:\n        1. Start traffic\n        2. Shutdown primary port and see events are populated properly\n        \"\"\"\n    \n        # convergence config\n        bgp_convergence_config.events.cp_events.enable = True\n        bgp_convergence_config.events.dp_events.enable = True\n        bgp_convergence_config.events.dp_events.rx_rate_threshold = 90\n    \n>       api.set_config(bgp_convergence_config)\n\ntests/convergence/test_convergence.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <snappi_ixnetwork.snappi_api.Api object at 0x7fbfb37abb80>\nconfig = <snappi.snappi.Config object at 0x7fbfb3090e00>\n\n    def set_config(self, config):\n        \"\"\"Set or update the configuration\"\"\"\n        try:\n            if isinstance(config, (type(self._config_type), str)) is False:\n                raise TypeError(\n                    \"The content must be of type Union[Config, str]\"\n                )\n    \n            if isinstance(config, str) is True:\n                config = self._config_type.deserialize(config)\n            self.config_ixnetwork(config)\n            # CP-DP Convergence config\n            ixn_cpdpconvergence = self._traffic.Statistics.CpdpConvergence\n            ixn_cpdpconvergence.Enabled = False\n            cfg = config.get(\"events\")\n            if cfg is not None:\n                cp_events = cfg.get(\"cp_events\")\n                if cp_events is not None:\n                    cp_events_enable = cp_events.get(\"enable\")\n                else:\n                    cp_events_enable = False\n                dp_events = cfg.get(\"dp_events\")\n                if dp_events is not None:\n                    dp_events_enable = dp_events.get(\"enable\")\n                    rx_rate_threshold = dp_events.get(\"rx_rate_threshold\")\n                else:\n                    dp_events_enable = False\n                # Enable cp-dp convergence if any one of cp or dp is true\n                if cp_events_enable or dp_events_enable:\n                    ixn_cpdpconvergence.Enabled = True\n                    # For CP events\n                    if cp_events_enable:\n                        ixn_cpdpconvergence.EnableControlPlaneEvents = True\n                    # For DP events\n                    if dp_events_enable:\n                        if self.traffic_item.has_latency is True:\n                            raise Exception(\n                                \"We are supporting either latency or dp convergence\"\n                            )\n                        ixn_cpdpconvergence.EnableDataPlaneEventsRateMonitor = True\n                        ixn_cpdpconvergence.DataPlaneThreshold = rx_rate_threshold\n    \n                for ixn_traffic_item in self._traffic_item.find():\n                    ixn_traffic_item.Tracking.find()[0].TrackBy = [\n                        \"destEndpoint0\",\n                        \"destSessionDescription0\",\n                    ]\n            else:\n                ixn_cpdpconvergence.Enabled = False\n    \n        except Exception as err:\n>           raise SnappiIxnException(err)\nE           snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 276, in set_config\nE               self.config_ixnetwork(config)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 364, in config_ixnetwork\nE               self.traffic_item.config()\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 867, in config\nE               ixn_traffic_item = self.get_ixn_config(self._config)[0]\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 534, in get_ixn_config\nE               tr = self.create_traffic(config)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 688, in create_traffic\nE               for snappi_eotr in config.egress_only_trackings:\nE            'Config' object has no attribute 'egress_only_trackings'\n\nsnappi_ixnetwork/snappi_api.py:317: SnappiIxnException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"--------------------------------- Captured Log ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Config validation 0.010s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Ports configuration 0.284s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Captures configuration 1.193s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Location hosts ready [novus1-715849.ccu.is.keysight.com] 0.129s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Speed conversion is not require for (port.name, speed) : [('tx', 'normal'), ('rx', 'normal')]","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Aggregation mode speed change 0.132s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Location configuration 0.972s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Layer1 configuration 1.611s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Lag Configuration 0.086s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Convert device config : 0.273s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Create IxNetwork device config : 0.001s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Push IxNetwork device config : 0.455s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Devices configuration 0.822s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"INFO     snappi_ixnetwork.snappi_api:snappi_api.py:1419 Flows configuration 0.470s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"--------------------------------- Captured Out ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":16,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"pytest"},{"name":"host","value":"snappi-ixn-ci-novus10g"},{"name":"testClass","value":"convergence.test_convergence"},{"name":"package","value":"convergence.test_convergence"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":19,"broken":0,"skipped":3,"passed":66,"unknown":0,"total":88},"items":[{"uid":"6ba77fe8eaecff95","status":"passed","time":{"start":1744628606357,"stop":1744629331227,"duration":724870}},{"uid":"b4197d5fd89081b4","status":"passed","time":{"start":1744607503134,"stop":1744608222065,"duration":718931}},{"uid":"98faa1ab0633a293","status":"passed","time":{"start":1744319569642,"stop":1744320294735,"duration":725093}},{"uid":"5097babd4329c9b","status":"passed","time":{"start":1744308828836,"stop":1744309557679,"duration":728843}},{"uid":"c2e61cfd7483ad33","status":"passed","time":{"start":1744118178111,"stop":1744118905451,"duration":727340}},{"uid":"934196ab1cc70259","status":"passed","time":{"start":1744106575909,"stop":1744107290493,"duration":714584}},{"uid":"981e5385abf2d26","status":"failed","statusDetails":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 450, in set_control_state\n    self.traffic_item.transmit(request_payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 1353, in transmit\n    self._rocev2._configureTrafficParameters(rocev2_traffic, stateful_flow, options)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/device/rocev2.py\", line 292, in _configureTrafficParameters\n    trafficPortConfigs = rocev2_traffic.RoceV2PortConfig.find()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/traffic/rocev2traffic/rocev2portconfig/rocev2portconfig.py\", line 229, in find\n    return self._select(self._map_locals(self._SDM_ATT_MAP, locals()))\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 548, in _select\n    end = len(self._parent.href)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 158, in href\n    return self._get_attribute(\"href\")\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 218, in _get_attribute\n    raise NotFoundError(msg)\n Failed to get the RoceV2Traffic.href property as the RoceV2Traffic object has no encapsulated resources. Either the RoceV2Traffic.find() method was not called or it failed to retrieve any resources from the server.","time":{"start":1743796899201,"stop":1743796940810,"duration":41609}},{"uid":"a091aef0789790ab","status":"passed","time":{"start":1743756339018,"stop":1743757068640,"duration":729622}},{"uid":"ab534414f049c9ae","status":"passed","time":{"start":1743749241780,"stop":1743749963824,"duration":722044}},{"uid":"86dab4be13ec5a7f","status":"passed","time":{"start":1743703353732,"stop":1743704069551,"duration":715819}},{"uid":"e31915046ddc1dcc","status":"passed","time":{"start":1743696488928,"stop":1743697206092,"duration":717164}},{"uid":"36bac6b8830c1adb","status":"passed","time":{"start":1743689614468,"stop":1743690338046,"duration":723578}},{"uid":"f00a1d03e1e53000","status":"failed","statusDetails":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 446, in set_control_state\n    event_names = self.ngpf.set_route_state(request_payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/device/ngpf.py\", line 308, in set_route_state\n    self.api._ixnetwork.Globals.Topology.ApplyOnTheFly()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/globals/topology/topology_678a8dc80c9b4b2b5c741072eab4305d.py\", line 1846, in ApplyOnTheFly\n    return self._execute(\"applyOnTheFly\", payload=payload, response_object=None)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 452, in _execute\n    response = self._connection._execute(url, payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 289, in _execute\n    return self._send_recv(\"POST\", url, payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 572, in _send_recv\n    return self._poll()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 640, in _poll\n    return self._process_response_status_code(\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 476, in _process_response_status_code\n    raise BadRequestError(message, response.status_code)\n  Action ApplyChanges cannot be executed while other actions are in progress. Actions in progress: \nClear Stats tx_bgpv4\n.","time":{"start":1743655642521,"stop":1743655862823,"duration":220302}},{"uid":"28cec5da21c51742","status":"failed","statusDetails":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 450, in set_control_state\n    self.traffic_item.transmit(request_payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 1354, in transmit\n    self._rocev2._configureTrafficParameters(rocev2_traffic, stateful_flow, options)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/device/rocev2.py\", line 292, in _configureTrafficParameters\n    trafficPortConfigs = rocev2_traffic.RoceV2PortConfig.find()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/traffic/rocev2traffic/rocev2portconfig/rocev2portconfig.py\", line 229, in find\n    return self._select(self._map_locals(self._SDM_ATT_MAP, locals()))\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 548, in _select\n    end = len(self._parent.href)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 158, in href\n    return self._get_attribute(\"href\")\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 218, in _get_attribute\n    raise NotFoundError(msg)\n Failed to get the RoceV2Traffic.href property as the RoceV2Traffic object has no encapsulated resources. Either the RoceV2Traffic.find() method was not called or it failed to retrieve any resources from the server.","time":{"start":1743167009876,"stop":1743167056306,"duration":46430}},{"uid":"447a239930fb7d29","status":"failed","statusDetails":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 450, in set_control_state\n    self.traffic_item.transmit(request_payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 1354, in transmit\n    self._rocev2._configureTrafficParameters(rocev2_traffic, stateful_flow, options)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/device/rocev2.py\", line 298, in _configureTrafficParameters\n    trafficPortConfigs = rocev2_traffic.RoceV2PortConfig.find()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/traffic/rocev2traffic/rocev2portconfig/rocev2portconfig.py\", line 229, in find\n    return self._select(self._map_locals(self._SDM_ATT_MAP, locals()))\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 548, in _select\n    end = len(self._parent.href)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 158, in href\n    return self._get_attribute(\"href\")\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 218, in _get_attribute\n    raise NotFoundError(msg)\n Failed to get the RoceV2Traffic.href property as the RoceV2Traffic object has no encapsulated resources. Either the RoceV2Traffic.find() method was not called or it failed to retrieve any resources from the server.","time":{"start":1743158796170,"stop":1743158830836,"duration":34666}},{"uid":"b352f47f5759023a","status":"failed","statusDetails":"snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 450, in set_control_state\n    self.traffic_item.transmit(request_payload)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/trafficitem.py\", line 1344, in transmit\n    self._rocev2._configureTrafficParameters(rocev2_traffic, stateful_flow, options)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/device/rocev2.py\", line 298, in _configureTrafficParameters\n    trafficPortConfigs = rocev2_traffic.RoceV2PortConfig.find()\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/sessions/ixnetwork/traffic/rocev2traffic/rocev2portconfig/rocev2portconfig.py\", line 229, in find\n    return self._select(self._map_locals(self._SDM_ATT_MAP, locals()))\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 548, in _select\n    end = len(self._parent.href)\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 158, in href\n    return self._get_attribute(\"href\")\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/base.py\", line 218, in _get_attribute\n    raise NotFoundError(msg)\n Failed to get the RoceV2Traffic.href property as the RoceV2Traffic object has no encapsulated resources. Either the RoceV2Traffic.find() method was not called or it failed to retrieve any resources from the server.","time":{"start":1743154377859,"stop":1743154415032,"duration":37173}},{"uid":"5f9706f5bb7f851f","status":"passed","time":{"start":1743142356248,"stop":1743143096741,"duration":740493}},{"uid":"a52c22e5a013b266","status":"passed","time":{"start":1743134333235,"stop":1743135052898,"duration":719663}},{"uid":"23226b7ea06c3fc1","status":"passed","time":{"start":1743107933073,"stop":1743108655004,"duration":721931}},{"uid":"6613540b763ed5ee","status":"passed","time":{"start":1743101127011,"stop":1743101864644,"duration":737633}}]},"tags":[]},"source":"bf0431cddbbe4dc0.json","parameterValues":[]}