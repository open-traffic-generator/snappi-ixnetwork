{"uid":"85507a17f035ddd","name":"test_create_traffic_device[6]","historyId":"pytest:traffic.test_traffic_json#test_create_traffic_device[6]","time":{"start":1746174663641,"stop":1746174663645,"duration":4},"status":"failed","statusMessage":"AssertionError: assert {'xpath': '/traffic', 'trafficItem': [{'xpath': '/traffic/trafficItem[1]', 'name': 'f1', 'srcDestMesh': 'manyToMany', 'endpointSet': [{'xpath': '/traffic/trafficItem[1]/endpointSet[1]', 'sources': ['/topology[1]/deviceGroup[2]'], 'destinations': ['/topology[1]/deviceGroup[2]']}], 'trafficType': 'ipv6'}], 'egressOnlyTracking': []} == {'xpath': '/traffic', 'trafficItem': [{'xpath': '/traffic/trafficItem[1]', 'name': 'f1', 'srcDestMesh': 'manyToMany', 'trafficType': 'ipv6', 'endpointSet': [{'xpath': '/traffic/trafficItem[1]/endpointSet[1]', 'sources': ['/topology[1]/deviceGroup[2]'], 'destinations': ['/topology[1]/deviceGroup[2]']}]}]}\n  \n  Common items:\n  {'trafficItem': [{'endpointSet': [{'destinations': ['/topology[1]/deviceGroup[2]'],\n                                     'sources': ['/topology[1]/deviceGroup[2]'],\n                                     'xpath': '/traffic/trafficItem[1]/endpointSet[1]'}],\n                    'name': 'f1',\n                    'srcDestMesh': 'manyToMany',\n                    'trafficType': 'ipv6',\n                    'xpath': '/traffic/trafficItem[1]'}],\n   'xpath': '/traffic'}\n  Left contains 1 more item:\n  {'egressOnlyTracking': []}\n  \n  Full diff:\n    {\n  +     'egressOnlyTracking': [],\n        'trafficItem': [\n            {\n                'endpointSet': [\n                    {\n                        'destinations': [\n                            '/topology[1]/deviceGroup[2]',\n                        ],\n                        'sources': [\n                            '/topology[1]/deviceGroup[2]',\n                        ],\n                        'xpath': '/traffic/trafficItem[1]/endpointSet[1]',\n                    },\n                ],\n                'name': 'f1',\n                'srcDestMesh': 'manyToMany',\n                'trafficType': 'ipv6',\n                'xpath': '/traffic/trafficItem[1]',\n            },\n        ],\n        'xpath': '/traffic',\n    }","statusTrace":"v4_or_v6 = 6\n\n    @pytest.mark.parametrize(\"v4_or_v6\", [4, 6])\n    def test_create_traffic_device(v4_or_v6):\n        config = snappi.Api().config()\n        api = MagicMock()\n        tr_obj = TrafficItem(api)\n        ports = {\"p1\": \"/vport[1]\", \"p2\": \"/vport[2]\"}\n        ixn_obj_info = namedtuple(\"IxNobjInfo\", [\"xpath\", \"names\"])\n        devices = {\n            \"d1\": {\n                \"dev_info\": ixn_obj_info(\"/topology[1]/deviceGroup[1]\", []),\n                \"type\": \"ipv4\",\n            },\n            \"d2\": {\n                \"dev_info\": ixn_obj_info(\"/topology[1]/deviceGroup[2]\", []),\n                \"type\": \"ipv6\",\n            },\n            \"d3\": {\n                \"dev_info\": ixn_obj_info(\"/topology[1]/deviceGroup[1]\", []),\n                \"type\": \"ipv4\",\n            },\n            \"d4\": {\n                \"dev_info\": ixn_obj_info(\"/topology[1]/deviceGroup[2]\", []),\n                \"type\": \"ipv6\",\n            },\n        }\n        tr_obj.get_ports_encap = MagicMock(return_value=ports)\n        tr_obj.get_device_info = MagicMock(return_value=devices)\n        f1 = config.flows.flow(name=\"f1\")[-1]\n        f1.tx_rx.device.tx_names = [\"d1\" if v4_or_v6 == 4 else \"d2\"]\n        f1.tx_rx.device.rx_names = [\"d3\" if v4_or_v6 == 4 else \"d4\"]\n        f1.packet.ethernet().ipv4()\n        tr_device = tr_obj.create_traffic(config)\n        expected_device_type[\"trafficItem\"][0][\"endpointSet\"][0][\"sources\"] = [\n            devices[f1.tx_rx.device.tx_names[0]][\"dev_info\"].xpath\n        ]\n        expected_device_type[\"trafficItem\"][0][\"endpointSet\"][0][\n            \"destinations\"\n        ] = [devices[f1.tx_rx.device.rx_names[0]][\"dev_info\"].xpath]\n        expected_device_type[\"trafficItem\"][0][\"trafficType\"] = \"ipv%s\" % v4_or_v6\n>       assert tr_device == expected_device_type\nE       AssertionError: assert {'xpath': '/traffic', 'trafficItem': [{'xpath': '/traffic/trafficItem[1]', 'name': 'f1', 'srcDestMesh': 'manyToMany', 'endpointSet': [{'xpath': '/traffic/trafficItem[1]/endpointSet[1]', 'sources': ['/topology[1]/deviceGroup[2]'], 'destinations': ['/topology[1]/deviceGroup[2]']}], 'trafficType': 'ipv6'}], 'egressOnlyTracking': []} == {'xpath': '/traffic', 'trafficItem': [{'xpath': '/traffic/trafficItem[1]', 'name': 'f1', 'srcDestMesh': 'manyToMany', 'trafficType': 'ipv6', 'endpointSet': [{'xpath': '/traffic/trafficItem[1]/endpointSet[1]', 'sources': ['/topology[1]/deviceGroup[2]'], 'destinations': ['/topology[1]/deviceGroup[2]']}]}]}\nE         \nE         Common items:\nE         {'trafficItem': [{'endpointSet': [{'destinations': ['/topology[1]/deviceGroup[2]'],\nE                                            'sources': ['/topology[1]/deviceGroup[2]'],\nE                                            'xpath': '/traffic/trafficItem[1]/endpointSet[1]'}],\nE                           'name': 'f1',\nE                           'srcDestMesh': 'manyToMany',\nE                           'trafficType': 'ipv6',\nE                           'xpath': '/traffic/trafficItem[1]'}],\nE          'xpath': '/traffic'}\nE         Left contains 1 more item:\nE         {'egressOnlyTracking': []}\nE         \nE         Full diff:\nE           {\nE         +     'egressOnlyTracking': [],\nE               'trafficItem': [\nE                   {\nE                       'endpointSet': [\nE                           {\nE                               'destinations': [\nE                                   '/topology[1]/deviceGroup[2]',\nE                               ],\nE                               'sources': [\nE                                   '/topology[1]/deviceGroup[2]',\nE                               ],\nE                               'xpath': '/traffic/trafficItem[1]/endpointSet[1]',\nE                           },\nE                       ],\nE                       'name': 'f1',\nE                       'srcDestMesh': 'manyToMany',\nE                       'trafficType': 'ipv6',\nE                       'xpath': '/traffic/trafficItem[1]',\nE                   },\nE               ],\nE               'xpath': '/traffic',\nE           }\n\ntests/traffic/test_traffic_json.py:396: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"--------------------------------- Captured Log ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"--------------------------------- Captured Out ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"pytest"},{"name":"host","value":"snappi-ixn-ci-novus10g"},{"name":"testClass","value":"traffic.test_traffic_json"},{"name":"package","value":"traffic.test_traffic_json"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":102,"unknown":0,"total":109},"items":[{"uid":"671529133e722656","status":"passed","time":{"start":1746117825457,"stop":1746117825464,"duration":7}},{"uid":"2fae430a084e0e7d","status":"passed","time":{"start":1746098916418,"stop":1746098916425,"duration":7}},{"uid":"8df967ced1b11440","status":"passed","time":{"start":1746064489784,"stop":1746064489792,"duration":8}},{"uid":"188480f2e6eb76aa","status":"passed","time":{"start":1746042370552,"stop":1746042370559,"duration":7}},{"uid":"7d0a053bdbb929fd","status":"passed","time":{"start":1746025407819,"stop":1746025407827,"duration":8}},{"uid":"9a8f306aa48c0466","status":"passed","time":{"start":1746017351140,"stop":1746017351148,"duration":8}},{"uid":"6491e86d644797a2","status":"passed","time":{"start":1745951248306,"stop":1745951248314,"duration":8}},{"uid":"76cda64283b8deb2","status":"passed","time":{"start":1745944306045,"stop":1745944306052,"duration":7}},{"uid":"274b90ca16cd9d22","status":"passed","time":{"start":1745937122343,"stop":1745937122351,"duration":8}},{"uid":"cb0d54d176ee3f46","status":"passed","time":{"start":1745930256769,"stop":1745930256776,"duration":7}},{"uid":"1cdda54606fe4345","status":"failed","statusDetails":"AssertionError: assert {'xpath': '/traffic', 'trafficItem': [{'xpath': '/traffic/trafficItem[1]', 'name': 'f1', 'srcDestMesh': 'manyToMany', 'endpointSet': [{'xpath': '/traffic/trafficItem[1]/endpointSet[1]', 'sources': ['/topology[1]/deviceGroup[2]'], 'destinations': ['/topology[1]/deviceGroup[2]']}], 'trafficType': 'ipv6'}], 'egressOnlyTracking': []} == {'xpath': '/traffic', 'trafficItem': [{'xpath': '/traffic/trafficItem[1]', 'name': 'f1', 'srcDestMesh': 'manyToMany', 'trafficType': 'ipv6', 'endpointSet': [{'xpath': '/traffic/trafficItem[1]/endpointSet[1]', 'sources': ['/topology[1]/deviceGroup[2]'], 'destinations': ['/topology[1]/deviceGroup[2]']}]}]}\n  \n  Common items:\n  {'trafficItem': [{'endpointSet': [{'destinations': ['/topology[1]/deviceGroup[2]'],\n                                     'sources': ['/topology[1]/deviceGroup[2]'],\n                                     'xpath': '/traffic/trafficItem[1]/endpointSet[1]'}],\n                    'name': 'f1',\n                    'srcDestMesh': 'manyToMany',\n                    'trafficType': 'ipv6',\n                    'xpath': '/traffic/trafficItem[1]'}],\n   'xpath': '/traffic'}\n  Left contains 1 more item:\n  {'egressOnlyTracking': []}\n  \n  Full diff:\n    {\n  +     'egressOnlyTracking': [],\n        'trafficItem': [\n            {\n                'endpointSet': [\n                    {\n                        'destinations': [\n                            '/topology[1]/deviceGroup[2]',\n                        ],\n                        'sources': [\n                            '/topology[1]/deviceGroup[2]',\n                        ],\n                        'xpath': '/traffic/trafficItem[1]/endpointSet[1]',\n                    },\n                ],\n                'name': 'f1',\n                'srcDestMesh': 'manyToMany',\n                'trafficType': 'ipv6',\n                'xpath': '/traffic/trafficItem[1]',\n            },\n        ],\n        'xpath': '/traffic',\n    }","time":{"start":1745921505820,"stop":1745921505824,"duration":4}},{"uid":"60180df71bbd1114","status":"failed","statusDetails":"AssertionError: assert {'xpath': '/traffic', 'trafficItem': [{'xpath': '/traffic/trafficItem[1]', 'name': 'f1', 'srcDestMesh': 'manyToMany', 'endpointSet': [{'xpath': '/traffic/trafficItem[1]/endpointSet[1]', 'sources': ['/topology[1]/deviceGroup[2]'], 'destinations': ['/topology[1]/deviceGroup[2]']}], 'trafficType': 'ipv6'}], 'egressOnlyTracking': []} == {'xpath': '/traffic', 'trafficItem': [{'xpath': '/traffic/trafficItem[1]', 'name': 'f1', 'srcDestMesh': 'manyToMany', 'trafficType': 'ipv6', 'endpointSet': [{'xpath': '/traffic/trafficItem[1]/endpointSet[1]', 'sources': ['/topology[1]/deviceGroup[2]'], 'destinations': ['/topology[1]/deviceGroup[2]']}]}]}\n  \n  Common items:\n  {'trafficItem': [{'endpointSet': [{'destinations': ['/topology[1]/deviceGroup[2]'],\n                                     'sources': ['/topology[1]/deviceGroup[2]'],\n                                     'xpath': '/traffic/trafficItem[1]/endpointSet[1]'}],\n                    'name': 'f1',\n                    'srcDestMesh': 'manyToMany',\n                    'trafficType': 'ipv6',\n                    'xpath': '/traffic/trafficItem[1]'}],\n   'xpath': '/traffic'}\n  Left contains 1 more item:\n  {'egressOnlyTracking': []}\n  \n  Full diff:\n    {\n  +     'egressOnlyTracking': [],\n        'trafficItem': [\n            {\n                'endpointSet': [\n                    {\n                        'destinations': [\n                            '/topology[1]/deviceGroup[2]',\n                        ],\n                        'sources': [\n                            '/topology[1]/deviceGroup[2]',\n                        ],\n                        'xpath': '/traffic/trafficItem[1]/endpointSet[1]',\n                    },\n                ],\n                'name': 'f1',\n                'srcDestMesh': 'manyToMany',\n                'trafficType': 'ipv6',\n                'xpath': '/traffic/trafficItem[1]',\n            },\n        ],\n        'xpath': '/traffic',\n    }","time":{"start":1745907259784,"stop":1745907259788,"duration":4}},{"uid":"50be468cc35ab037","status":"passed","time":{"start":1745902727011,"stop":1745902727019,"duration":8}},{"uid":"c9263ead26de493f","status":"failed","statusDetails":"AttributeError: 'Config' object has no attribute 'egress_only_tracking'","time":{"start":1745865135575,"stop":1745865135577,"duration":2}},{"uid":"6cefa7ac14d3e90a","status":"failed","statusDetails":"AttributeError: 'Config' object has no attribute 'egress_only_tracking'","time":{"start":1745841955218,"stop":1745841955221,"duration":3}},{"uid":"3f0c3ca3747df741","status":"passed","time":{"start":1745837550536,"stop":1745837550543,"duration":7}},{"uid":"682145ba50a262c5","status":"passed","time":{"start":1745833086105,"stop":1745833086112,"duration":7}},{"uid":"b6a35a962539b980","status":"failed","statusDetails":"AttributeError: 'Config' object has no attribute 'egress_only_tracking'","time":{"start":1745687367675,"stop":1745687367677,"duration":2}},{"uid":"aeb42d53619a9ae","status":"passed","time":{"start":1745474974403,"stop":1745474974411,"duration":8}},{"uid":"219085a1402cc9da","status":"passed","time":{"start":1745302321831,"stop":1745302321838,"duration":7}}]},"tags":[]},"source":"85507a17f035ddd.json","parameterValues":[]}