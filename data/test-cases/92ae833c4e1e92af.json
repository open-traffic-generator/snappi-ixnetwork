{"uid":"92ae833c4e1e92af","name":"test_diff_latency_mode","historyId":"pytest:metrics.test_diff_latency_mode#test_diff_latency_mode","time":{"start":1753368506584,"stop":1753368506619,"duration":35},"status":"failed","statusMessage":"assert None\n +  where None = <function search at 0x7f21b7ae8550>('Latency mode needs to be same for all flows', '  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 283, in set_config\\n    self.config_ixnetwork(config)\\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 362, in config_ixnetwork\\n    self._connect()\\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 1007, in _connect\\n    platform = TestPlatform(self._address, rest_port=self._port)\\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/testplatform.py\", line 80, in __init__\\n    self._connection = Connection(\\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 151, in __init__\\n    self._scheme = self._determine_test_tool_platform(platform)\\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 220, in _determine_test_tool_platform\\n    raise ConnectionError(\\n Unable to connect to novus1-715849.ccu.is.keysight.com. Check the ip address and consider the rest_port parameter.')\n +    where <function search at 0x7f21b7ae8550> = re.search\n +    and   '  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 283, in set_config\\n    self.config_ixnetwork(config)\\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 362, in config_ixnetwork\\n    self._connect()\\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 1007, in _connect\\n    platform = TestPlatform(self._address, rest_port=self._port)\\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/testplatform.py\", line 80, in __init__\\n    self._connection = Connection(\\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 151, in __init__\\n    self._scheme = self._determine_test_tool_platform(platform)\\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 220, in _determine_test_tool_platform\\n    raise ConnectionError(\\n Unable to connect to novus1-715849.ccu.is.keysight.com. Check the ip address and consider the rest_port parameter.' = str(  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 283, in set_config\\n    self.config_ixnetwork(config)\\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 362, in config_ixnetwork\\n    self._connect()\\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 1007, in _connect\\n    platform = TestPlatform(self._address, rest_port=self._port)\\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/testplatform.py\", line 80, in __init__\\n    self._connection = Connection(\\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 151, in __init__\\n    self._scheme = self._determine_test_tool_platform(platform)\\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 220, in _determine_test_tool_platform\\n    raise ConnectionError(\\n Unable to connect to novus1-715849.ccu.is.keysight.com. Check the ip address and consider the rest_port parameter.)","statusTrace":"self = <snappi_ixnetwork.snappi_api.Api object at 0x7f21b3aa0940>\nconfig = <snappi.snappi.Config object at 0x7f21b35ad440>\n\n    def set_config(self, config):\n        \"\"\"Set, update, append or delete the configuration\"\"\"\n        try:\n            if isinstance(config, (type(self._config_type), str)) is False:\n                raise TypeError(\n                    \"The content must be of type Union[Config, str]\"\n                )\n    \n            if isinstance(config, str) is True:\n                config = self._config_type.deserialize(config)\n>           self.config_ixnetwork(config)\n\nsnappi_ixnetwork/snappi_api.py:283: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsnappi_ixnetwork/snappi_api.py:362: in config_ixnetwork\n    self._connect()\nsnappi_ixnetwork/snappi_api.py:1007: in _connect\n    platform = TestPlatform(self._address, rest_port=self._port)\n.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/testplatform.py:80: in __init__\n    self._connection = Connection(\n.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py:151: in __init__\n    self._scheme = self._determine_test_tool_platform(platform)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ixnetwork_restpy.connection.Connection object at 0x7f21b35a1ff0>\nplatform = None\n\n    def _determine_test_tool_platform(self, platform):\n        self._info(\n            \"Determining the platform and rest_port using the %s address...\"\n            % self._hostname\n        )\n        if platform is not None:\n            self._warn(\n                \"The `platform` parameter is deprecated and the value `%s` will be ignored.\"\n                % platform\n            )\n        self._platform = None\n        rest_ports = [443, 11009]\n        if self._rest_port is not None:\n            if self._rest_port in rest_ports:\n                rest_ports.remove(self._rest_port)\n            rest_ports.insert(0, self._rest_port)\n        for rest_port in rest_ports:\n            for scheme in [\"http\", \"https\"]:\n                try:\n                    if self._url_prefix is not None:\n                        url = \"%s://%s:%s/%s/api/v1/auth/session\" % (\n                            scheme,\n                            self._hostname,\n                            rest_port,\n                            self._url_prefix,\n                        )\n                    else:\n                        url = \"%s://%s:%s/api/v1/auth/session\" % (\n                            scheme,\n                            self._hostname,\n                            rest_port,\n                        )\n                    payload = json.dumps({\"username\": \"\", \"password\": \"\"})\n                    headers = self._headers\n                    headers[\"content-type\"] = \"application/json\"\n                    response = self._request(\n                        method=\"POST\",\n                        url=url,\n                        data=payload,\n                        headers=headers,\n                        verify=self._verify_cert,\n                        timeout=2,\n                    )\n                    if response.status_code in [401, 403, 200]:\n                        if \"server\" not in response.headers:\n                            response.headers[\"server\"] = \"Jetty\"\n                        for server in Connection.PLATFORMS:\n                            if server in response.headers[\"server\"]:\n                                self._platform = Connection.PLATFORMS[server]\n                                self._rest_port = rest_port\n                                self._info(\n                                    \"Connection established to `%s://%s:%s on %s`\"\n                                    % (\n                                        scheme,\n                                        self._hostname,\n                                        self._rest_port,\n                                        self._platform,\n                                    )\n                                )\n                                return scheme\n                    else:\n                        raise Exception()\n                except Exception as e:\n                    self._warn(\n                        \"Unable to connect to %s://%s:%s.\"\n                        % (scheme, self._hostname, rest_port)\n                    )\n>       raise ConnectionError(\n            \"Unable to connect to %s. Check the ip address and consider the rest_port parameter.\"\n            % self._hostname\n        )\nE       ixnetwork_restpy.errors.ConnectionError: Unable to connect to novus1-715849.ccu.is.keysight.com. Check the ip address and consider the rest_port parameter.\n\n.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py:220: ConnectionError\n\nDuring handling of the above exception, another exception occurred:\n\napi = <snappi_ixnetwork.snappi_api.Api object at 0x7f21b3aa0940>\nb2b_raw_config = <snappi.snappi.Config object at 0x7f21b35ad440>\ntx_port = <snappi.snappi.Port object at 0x7f21b35af010>\nrx_port = <snappi.snappi.Port object at 0x7f21b35afb50>\n\n    def test_diff_latency_mode(api, b2b_raw_config, tx_port, rx_port):\n        \"\"\"\n        Ixnetwork supports only one latency mode for all flows\n    \n        Validation:\n        ixNetwork should throw an error to provide only same mode\n            for all flows\n        \"\"\"\n        SIZE = 1024\n    \n        # flow -f1 config\n        f1 = b2b_raw_config.flows[0]\n    \n        f1.size.fixed = SIZE\n    \n        f1.metrics.enable = True\n        f1.metrics.loss = True\n        f1.metrics.timestamps = True\n    \n        # flow -f2 config\n        f2 = b2b_raw_config.flows.flow(name=\"f2\")[-1]\n        f2.tx_rx.port.tx_name = tx_port.name\n        f2.tx_rx.port.rx_name = rx_port.name\n    \n        f2.size.fixed = SIZE\n    \n        f2.metrics.enable = True\n        f2.metrics.loss = True\n        f2.metrics.timestamps = True\n    \n        # Latency Config\n        f1.metrics.latency.enable = True\n        f1.metrics.latency.mode = f1.metrics.latency.STORE_FORWARD\n    \n        f2.metrics.latency.enable = True\n        f2.metrics.latency.mode = f2.metrics.latency.CUT_THROUGH\n    \n        try:\n>           api.set_config(b2b_raw_config)\n\ntests/metrics/test_diff_latency_mode.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <snappi_ixnetwork.snappi_api.Api object at 0x7f21b3aa0940>\nconfig = <snappi.snappi.Config object at 0x7f21b35ad440>\n\n    def set_config(self, config):\n        \"\"\"Set, update, append or delete the configuration\"\"\"\n        try:\n            if isinstance(config, (type(self._config_type), str)) is False:\n                raise TypeError(\n                    \"The content must be of type Union[Config, str]\"\n                )\n    \n            if isinstance(config, str) is True:\n                config = self._config_type.deserialize(config)\n            self.config_ixnetwork(config)\n            # CP-DP Convergence config\n            ixn_cpdpconvergence = self._traffic.Statistics.CpdpConvergence\n            ixn_cpdpconvergence.Enabled = False\n            cfg = config.get(\"events\")\n            if cfg is not None:\n                cp_events = cfg.get(\"cp_events\")\n                if cp_events is not None:\n                    cp_events_enable = cp_events.get(\"enable\")\n                else:\n                    cp_events_enable = False\n                dp_events = cfg.get(\"dp_events\")\n                if dp_events is not None:\n                    dp_events_enable = dp_events.get(\"enable\")\n                    rx_rate_threshold = dp_events.get(\"rx_rate_threshold\")\n                else:\n                    dp_events_enable = False\n                # Enable cp-dp convergence if any one of cp or dp is true\n                if cp_events_enable or dp_events_enable:\n                    ixn_cpdpconvergence.Enabled = True\n                    # For CP events\n                    if cp_events_enable:\n                        ixn_cpdpconvergence.EnableControlPlaneEvents = True\n                    # For DP events\n                    if dp_events_enable:\n                        if self.traffic_item.has_latency is True:\n                            raise Exception(\n                                \"We are supporting either latency or dp convergence\"\n                            )\n                        ixn_cpdpconvergence.EnableDataPlaneEventsRateMonitor = (\n                            True\n                        )\n                        ixn_cpdpconvergence.DataPlaneThreshold = (\n                            rx_rate_threshold\n                        )\n    \n                for ixn_traffic_item in self._traffic_item.find():\n                    ixn_traffic_item.Tracking.find()[0].TrackBy = [\n                        \"destEndpoint0\",\n                        \"destSessionDescription0\",\n                    ]\n            else:\n                ixn_cpdpconvergence.Enabled = False\n    \n        except Exception as err:\n>           raise SnappiIxnException(err)\nE           snappi_ixnetwork.exceptions.SnappiIxnException:   File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 283, in set_config\nE               self.config_ixnetwork(config)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 362, in config_ixnetwork\nE               self._connect()\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 1007, in _connect\nE               platform = TestPlatform(self._address, rest_port=self._port)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/testplatform.py\", line 80, in __init__\nE               self._connection = Connection(\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 151, in __init__\nE               self._scheme = self._determine_test_tool_platform(platform)\nE             File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 220, in _determine_test_tool_platform\nE               raise ConnectionError(\nE            Unable to connect to novus1-715849.ccu.is.keysight.com. Check the ip address and consider the rest_port parameter.\n\nsnappi_ixnetwork/snappi_api.py:328: SnappiIxnException\n\nDuring handling of the above exception, another exception occurred:\n\napi = <snappi_ixnetwork.snappi_api.Api object at 0x7f21b3aa0940>\nb2b_raw_config = <snappi.snappi.Config object at 0x7f21b35ad440>\ntx_port = <snappi.snappi.Port object at 0x7f21b35af010>\nrx_port = <snappi.snappi.Port object at 0x7f21b35afb50>\n\n    def test_diff_latency_mode(api, b2b_raw_config, tx_port, rx_port):\n        \"\"\"\n        Ixnetwork supports only one latency mode for all flows\n    \n        Validation:\n        ixNetwork should throw an error to provide only same mode\n            for all flows\n        \"\"\"\n        SIZE = 1024\n    \n        # flow -f1 config\n        f1 = b2b_raw_config.flows[0]\n    \n        f1.size.fixed = SIZE\n    \n        f1.metrics.enable = True\n        f1.metrics.loss = True\n        f1.metrics.timestamps = True\n    \n        # flow -f2 config\n        f2 = b2b_raw_config.flows.flow(name=\"f2\")[-1]\n        f2.tx_rx.port.tx_name = tx_port.name\n        f2.tx_rx.port.rx_name = rx_port.name\n    \n        f2.size.fixed = SIZE\n    \n        f2.metrics.enable = True\n        f2.metrics.loss = True\n        f2.metrics.timestamps = True\n    \n        # Latency Config\n        f1.metrics.latency.enable = True\n        f1.metrics.latency.mode = f1.metrics.latency.STORE_FORWARD\n    \n        f2.metrics.latency.enable = True\n        f2.metrics.latency.mode = f2.metrics.latency.CUT_THROUGH\n    \n        try:\n            api.set_config(b2b_raw_config)\n        except Exception as e:\n            print(e)\n>           assert re.search(\"Latency mode needs to be same for all flows\", str(e))\nE           assert None\nE            +  where None = <function search at 0x7f21b7ae8550>('Latency mode needs to be same for all flows', '  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 283, in set_config\\n    self.config_ixnetwork(config)\\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 362, in config_ixnetwork\\n    self._connect()\\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 1007, in _connect\\n    platform = TestPlatform(self._address, rest_port=self._port)\\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/testplatform.py\", line 80, in __init__\\n    self._connection = Connection(\\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 151, in __init__\\n    self._scheme = self._determine_test_tool_platform(platform)\\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 220, in _determine_test_tool_platform\\n    raise ConnectionError(\\n Unable to connect to novus1-715849.ccu.is.keysight.com. Check the ip address and consider the rest_port parameter.')\nE            +    where <function search at 0x7f21b7ae8550> = re.search\nE            +    and   '  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 283, in set_config\\n    self.config_ixnetwork(config)\\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 362, in config_ixnetwork\\n    self._connect()\\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 1007, in _connect\\n    platform = TestPlatform(self._address, rest_port=self._port)\\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/testplatform.py\", line 80, in __init__\\n    self._connection = Connection(\\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 151, in __init__\\n    self._scheme = self._determine_test_tool_platform(platform)\\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 220, in _determine_test_tool_platform\\n    raise ConnectionError(\\n Unable to connect to novus1-715849.ccu.is.keysight.com. Check the ip address and consider the rest_port parameter.' = str(  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 283, in set_config\\n    self.config_ixnetwork(config)\\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 362, in config_ixnetwork\\n    self._connect()\\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/snappi_ixnetwork/snappi_api.py\", line 1007, in _connect\\n    platform = TestPlatform(self._address, rest_port=self._port)\\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/testplatform/testplatform.py\", line 80, in __init__\\n    self._connection = Connection(\\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 151, in __init__\\n    self._scheme = self._determine_test_tool_platform(platform)\\n  File \"/home/github-runner/actions-runner/_work/snappi-ixnetwork/snappi-ixnetwork/.env/lib/python3.10/site-packages/ixnetwork_restpy/connection.py\", line 220, in _determine_test_tool_platform\\n    raise ConnectionError(\\n Unable to connect to novus1-715849.ccu.is.keysight.com. Check the ip address and consider the rest_port parameter.)\n\ntests/metrics/test_diff_latency_mode.py:45: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"--------------------------------- Captured Log ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"--------------------------------- Captured Out ---------------------------------","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"pytest"},{"name":"host","value":"snappi-ixn-ci-novus10g"},{"name":"testClass","value":"metrics.test_diff_latency_mode"},{"name":"package","value":"metrics.test_diff_latency_mode"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":1,"passed":171,"unknown":0,"total":177},"items":[{"uid":"54336de3da2421ad","status":"passed","time":{"start":1752836398951,"stop":1752836404661,"duration":5710}},{"uid":"a1eed18d889c23c2","status":"passed","time":{"start":1752760243902,"stop":1752760250511,"duration":6609}},{"uid":"f35c1ac5c8aa4dc0","status":"passed","time":{"start":1752244885705,"stop":1752244891468,"duration":5763}},{"uid":"ba7568275361d8fa","status":"passed","time":{"start":1752145840252,"stop":1752145846647,"duration":6395}},{"uid":"5940e8c531dd63f1","status":"passed","time":{"start":1751479010972,"stop":1751479017564,"duration":6592}},{"uid":"205d7b8c56f0f50b","status":"passed","time":{"start":1751472402834,"stop":1751472408493,"duration":5659}},{"uid":"36450c25fbb7840f","status":"passed","time":{"start":1751283215057,"stop":1751283220732,"duration":5675}},{"uid":"4525778972da06a2","status":"passed","time":{"start":1751276144532,"stop":1751276150201,"duration":5669}},{"uid":"d1d5b4fff3f94d81","status":"passed","time":{"start":1751231642336,"stop":1751231649093,"duration":6757}},{"uid":"511bf4965de85f08","status":"passed","time":{"start":1750985352305,"stop":1750985358017,"duration":5712}},{"uid":"c745d0273d82f144","status":"passed","time":{"start":1750836697285,"stop":1750836702953,"duration":5668}},{"uid":"d0ef2b4550c6b419","status":"passed","time":{"start":1750656827226,"stop":1750656832969,"duration":5743}},{"uid":"1de03b7720e2f0db","status":"passed","time":{"start":1750246239210,"stop":1750246244951,"duration":5741}},{"uid":"a5b5d276c430c5e6","status":"passed","time":{"start":1750239203710,"stop":1750239209397,"duration":5687}},{"uid":"15e5e1eda1e95b2a","status":"passed","time":{"start":1749770085540,"stop":1749770091228,"duration":5688}},{"uid":"ae9d9986c776eb72","status":"passed","time":{"start":1749546564693,"stop":1749546571402,"duration":6709}},{"uid":"7b591a633186bb26","status":"passed","time":{"start":1748968328989,"stop":1748968334780,"duration":5791}},{"uid":"8ce83e7eeffb4560","status":"passed","time":{"start":1748929822995,"stop":1748929833417,"duration":10422}},{"uid":"6d4322e339f5a04c","status":"passed","time":{"start":1748864245704,"stop":1748864251445,"duration":5741}},{"uid":"b69109a7f95afa74","status":"passed","time":{"start":1748857106711,"stop":1748857112471,"duration":5760}}]},"tags":[]},"source":"92ae833c4e1e92af.json","parameterValues":[]}